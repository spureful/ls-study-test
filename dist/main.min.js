"use strict";function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,t=function(){};return{s:t,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return r=e.done,e},e:function(e){s=!0,o=e},f:function(){try{r||null==n.return||n.return()}finally{if(s)throw o}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Map"===(n="Object"===n&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var myMap;!function(e,t){"object"===("undefined"==typeof module?"undefined":_typeof(module))&&"object"===_typeof(module.exports)?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:void 0,function(T,e){function g(e){return null!=e&&e===e.window}var t=[],n=Object.getPrototypeOf,a=t.slice,m=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,o=t.indexOf,i={},r=i.toString,v=i.hasOwnProperty,s=v.toString,c=s.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},C=T.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,n){var i,o,r=(n=n||C).createElement("script");if(r.text=e,t)for(i in u)(o=t[i]||t.getAttribute&&t.getAttribute(i))&&r.setAttribute(i,o);n.head.appendChild(r).parentNode.removeChild(r)}function h(e){return null==e?e+"":"object"===_typeof(e)||"function"==typeof e?i[r.call(e)]||"object":_typeof(e)}var S=function e(t,n){return new e.fn.init(t,n)};function d(e){var t=!!e&&"length"in e&&e.length,n=h(e);return!b(e)&&!g(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:"3.6.0",constructor:S,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){e=S.merge(this.constructor(),e);return e.prevObject=this,e},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,e=+e+(e<0?t:0);return this.pushStack(0<=e&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,i,o,r=arguments[0]||{},s=1,a=arguments.length,l=!1;for("boolean"==typeof r&&(l=r,r=arguments[s]||{},s++),"object"===_typeof(r)||b(r)||(r={}),s===a&&(r=this,s--);s<a;s++)if(null!=(e=arguments[s]))for(t in e)n=e[t],"__proto__"!==t&&r!==n&&(l&&n&&(S.isPlainObject(n)||(i=Array.isArray(n)))?(o=r[t],o=i&&!Array.isArray(o)?[]:i||S.isPlainObject(o)?o:{},i=!1,r[t]=S.extend(l,o,n)):void 0!==n&&(r[t]=n));return r},S.extend({expando:"jQuery"+("3.6.0"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){return!(!e||"[object Object]"!==r.call(e))&&(!(e=n(e))||"function"==typeof(e=v.call(e,"constructor")&&e.constructor)&&s.call(e)===c)},isEmptyObject:function(e){for(var t in e)return!1;return!0},globalEval:function(e,t,n){x(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,i=0;if(d(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},makeArray:function(e,t){t=t||[];return null!=e&&(d(Object(e))?S.merge(t,"string"==typeof e?[e]:e):l.call(t,e)),t},inArray:function(e,t,n){return null==t?-1:o.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;i<n;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i=[],o=0,r=e.length,s=!n;o<r;o++)!t(e[o],o)!=s&&i.push(e[o]);return i},map:function(e,t,n){var i,o,r=0,s=[];if(d(e))for(i=e.length;r<i;r++)null!=(o=t(e[r],r,n))&&s.push(o);else for(r in e)null!=(o=t(e[r],r,n))&&s.push(o);return m(s)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var p=function(n){function d(e,t){return e="0x"+e.slice(1)-65536,t||(e<0?String.fromCharCode(65536+e):String.fromCharCode(e>>10|55296,1023&e|56320))}function i(){T()}var e,p,x,r,o,f,h,g,w,l,c,T,C,s,S,m,a,u,v,k="sizzle"+ +new Date,y=n.document,$=0,b=0,A=le(),E=le(),P=le(),D=le(),L=function(e,t){return e===t&&(c=!0),0},j={}.hasOwnProperty,t=[],N=t.pop,H=t.push,q=t.push,O=t.slice,M=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},I="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",F="(?:\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",_="\\["+R+"*("+F+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+F+"))|)"+R+"*\\]",z=":("+F+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+_+")*)|.*)\\)|)",W=new RegExp(R+"+","g"),B=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),X=new RegExp("^"+R+"*,"+R+"*"),Y=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),U=new RegExp(R+"|>"),V=new RegExp(z),G=new RegExp("^"+F+"$"),Q={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),TAG:new RegExp("^("+F+"|[*])"),ATTR:new RegExp("^"+_),PSEUDO:new RegExp("^"+z),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+I+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},Z=/HTML$/i,K=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ne=/[+~]/,ie=new RegExp("\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\([^\\r\\n\\f])","g"),oe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},se=ye(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{q.apply(t=O.call(y.childNodes),y.childNodes),t[y.childNodes.length].nodeType}catch(e){q={apply:t.length?function(e,t){H.apply(e,O.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function ae(t,e,n,i){var o,r,s,a,l,c,u=e&&e.ownerDocument,d=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==d&&9!==d&&11!==d)return n;if(!i&&(T(e),e=e||C,S)){if(11!==d&&(a=te.exec(t)))if(c=a[1]){if(9===d){if(!(r=e.getElementById(c)))return n;if(r.id===c)return n.push(r),n}else if(u&&(r=u.getElementById(c))&&v(e,r)&&r.id===c)return n.push(r),n}else{if(a[2])return q.apply(n,e.getElementsByTagName(t)),n;if((c=a[3])&&p.getElementsByClassName&&e.getElementsByClassName)return q.apply(n,e.getElementsByClassName(c)),n}if(p.qsa&&!D[t+" "]&&(!m||!m.test(t))&&(1!==d||"object"!==e.nodeName.toLowerCase())){if(c=t,u=e,1===d&&(U.test(t)||Y.test(t))){for((u=ne.test(t)&&ge(e.parentNode)||e)===e&&p.scope||((s=e.getAttribute("id"))?s=s.replace(oe,re):e.setAttribute("id",s=k)),o=(l=f(t)).length;o--;)l[o]=(s?"#"+s:":scope")+" "+ve(l[o]);c=l.join(",")}try{return q.apply(n,u.querySelectorAll(c)),n}catch(e){D(t,!0)}finally{s===k&&e.removeAttribute("id")}}}return g(t.replace(B,"$1"),e,n,i)}function le(){var n=[];function i(e,t){return n.push(e+" ")>x.cacheLength&&delete i[n.shift()],i[e+" "]=t}return i}function ce(e){return e[k]=!0,e}function ue(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var n=e.split("|"),i=n.length;i--;)x.attrHandle[n[i]]=t}function pe(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function fe(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&se(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function he(s){return ce(function(r){return r=+r,ce(function(e,t){for(var n,i=s([],e.length,r),o=i.length;o--;)e[n=i[o]]&&(e[n]=!(t[n]=e[n]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=ae.support={},o=ae.isXML=function(e){var t=e&&e.namespaceURI,e=e&&(e.ownerDocument||e).documentElement;return!Z.test(t||e&&e.nodeName||"HTML")},T=ae.setDocument=function(e){var t,e=e?e.ownerDocument||e:y;return e!=C&&9===e.nodeType&&e.documentElement&&(s=(C=e).documentElement,S=!o(C),y!=C&&(t=C.defaultView)&&t.top!==t&&(t.addEventListener?t.addEventListener("unload",i,!1):t.attachEvent&&t.attachEvent("onunload",i)),p.scope=ue(function(e){return s.appendChild(e).appendChild(C.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),p.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=ue(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(C.getElementsByClassName),p.getById=ue(function(e){return s.appendChild(e).id=k,!C.getElementsByName||!C.getElementsByName(k).length}),p.getById?(x.filter.ID=function(e){var t=e.replace(ie,d);return function(e){return e.getAttribute("id")===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&S){e=t.getElementById(e);return e?[e]:[]}}):(x.filter.ID=function(e){var t=e.replace(ie,d);return function(e){e=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return e&&e.value===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&S){var n,i,o,r=t.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(o=t.getElementsByName(e),i=0;r=o[i++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),x.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;n=r[o++];)1===n.nodeType&&i.push(n);return i},x.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&S)return t.getElementsByClassName(e)},a=[],m=[],(p.qsa=ee.test(C.querySelectorAll))&&(ue(function(e){var t;s.appendChild(e).innerHTML="<a id='"+k+"'></a><select id='"+k+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+R+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+R+"*(?:value|"+I+")"),e.querySelectorAll("[id~="+k+"-]").length||m.push("~="),(t=C.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+R+"*name"+R+"*="+R+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+k+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+R+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),s.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")})),(p.matchesSelector=ee.test(u=s.matches||s.webkitMatchesSelector||s.mozMatchesSelector||s.oMatchesSelector||s.msMatchesSelector))&&ue(function(e){p.disconnectedMatch=u.call(e,"*"),u.call(e,"[s!='']:x"),a.push("!=",z)}),m=m.length&&new RegExp(m.join("|")),a=a.length&&new RegExp(a.join("|")),t=ee.test(s.compareDocumentPosition),v=t||ee.test(s.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,t=t&&t.parentNode;return e===t||!(!t||1!==t.nodeType||!(n.contains?n.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},L=t?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==y&&v(y,e)?-1:t==C||t.ownerDocument==y&&v(y,t)?1:l?M(l,e)-M(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,i=0,o=e.parentNode,r=t.parentNode,s=[e],a=[t];if(!o||!r)return e==C?-1:t==C?1:o?-1:r?1:l?M(l,e)-M(l,t):0;if(o===r)return pe(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)a.unshift(n);for(;s[i]===a[i];)i++;return i?pe(s[i],a[i]):s[i]==y?-1:a[i]==y?1:0}),C},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if(T(e),p.matchesSelector&&S&&!D[t+" "]&&(!a||!a.test(t))&&(!m||!m.test(t)))try{var n=u.call(e,t);if(n||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){D(t,!0)}return 0<ae(t,C,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),v(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=x.attrHandle[t.toLowerCase()],n=n&&j.call(x.attrHandle,t.toLowerCase())?n(e,t,!S):void 0;return void 0!==n?n:p.attributes||!S?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},ae.escape=function(e){return(e+"").replace(oe,re)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,n=[],i=0,o=0;if(c=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(L),c){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return l=null,e},r=ae.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},(x=ae.selectors={cacheLength:50,createPseudo:ce,match:Q,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ie,d),e[3]=(e[3]||e[4]||e[5]||"").replace(ie,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return Q.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&V.test(n)&&(t=f(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ie,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=A[e+" "];return t||(t=new RegExp("(^|"+R+")"+e+"("+R+"|$)"))&&A(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(e){e=ae.attr(e,t);return null==e?"!="===n:!n||(e+="","="===n?e===i:"!="===n?e!==i:"^="===n?i&&0===e.indexOf(i):"*="===n?i&&-1<e.indexOf(i):"$="===n?i&&e.slice(-i.length)===i:"~="===n?-1<(" "+e.replace(W," ")+" ").indexOf(i):"|="===n&&(e===i||e.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,m){var v="nth"!==h.slice(0,3),y="last"!==h.slice(-4),b="of-type"===e;return 1===g&&0===m?function(e){return!!e.parentNode}:function(e,t,n){var i,o,r,s,a,l,c=v!=y?"nextSibling":"previousSibling",u=e.parentNode,d=b&&e.nodeName.toLowerCase(),p=!n&&!b,f=!1;if(u){if(v){for(;c;){for(s=e;s=s[c];)if(b?s.nodeName.toLowerCase()===d:1===s.nodeType)return!1;l=c="only"===h&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&p){for(f=(a=(i=(o=(r=(s=u)[k]||(s[k]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]||[])[0]===$&&i[1])&&i[2],s=a&&u.childNodes[a];s=++a&&s&&s[c]||(f=a=0)||l.pop();)if(1===s.nodeType&&++f&&s===e){o[h]=[$,a,f];break}}else if(!1===(f=p?a=(i=(o=(r=(s=e)[k]||(s[k]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]||[])[0]===$&&i[1]:f))for(;(s=++a&&s&&s[c]||(f=a=0)||l.pop())&&((b?s.nodeName.toLowerCase()!==d:1!==s.nodeType)||!++f||(p&&((o=(r=s[k]||(s[k]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]=[$,f]),s!==e)););return(f-=m)===g||f%g==0&&0<=f/g}}},PSEUDO:function(e,r){var t,s=x.pseudos[e]||x.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return s[k]?s(r):1<s.length?(t=[e,e,"",r],x.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var n,i=s(e,r),o=i.length;o--;)e[n=M(e,i[o])]=!(t[n]=i[o])}):function(e){return s(e,0,t)}):s}},pseudos:{not:ce(function(e){var i=[],o=[],a=h(e.replace(B,"$1"));return a[k]?ce(function(e,t,n,i){for(var o,r=a(e,null,i,[]),s=e.length;s--;)(o=r[s])&&(e[s]=!(t[s]=o))}):function(e,t,n){return i[0]=e,a(i,null,n,o),i[0]=null,!o.pop()}}),has:ce(function(t){return function(e){return 0<ae(t,e).length}}),contains:ce(function(t){return t=t.replace(ie,d),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:ce(function(n){return G.test(n||"")||ae.error("unsupported lang: "+n),n=n.replace(ie,d).toLowerCase(),function(e){var t;do{if(t=S?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===s},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:fe(!1),disabled:fe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return K.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(e=e.getAttribute("type"))||"text"===e.toLowerCase())},first:he(function(){return[0]}),last:he(function(e,t){return[t-1]}),eq:he(function(e,t,n){return[n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var i=n<0?n+t:t<n?t:n;0<=--i;)e.push(i);return e}),gt:he(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=x.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})x.pseudos[e]=function(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}(e);function me(){}function ve(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function ye(s,e,t){var a=e.dir,l=e.next,c=l||a,u=t&&"parentNode"===c,d=b++;return e.first?function(e,t,n){for(;e=e[a];)if(1===e.nodeType||u)return s(e,t,n);return!1}:function(e,t,n){var i,o,r=[$,d];if(n){for(;e=e[a];)if((1===e.nodeType||u)&&s(e,t,n))return!0}else for(;e=e[a];)if(1===e.nodeType||u)if(i=(o=e[k]||(e[k]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[a]||e;else{if((o=i[c])&&o[0]===$&&o[1]===d)return r[2]=o[2];if((i[c]=r)[2]=s(e,t,n))return!0}return!1}}function be(o){return 1<o.length?function(e,t,n){for(var i=o.length;i--;)if(!o[i](e,t,n))return!1;return!0}:o[0]}function xe(e,t,n,i,o){for(var r,s=[],a=0,l=e.length,c=null!=t;a<l;a++)(r=e[a])&&(n&&!n(r,i,o)||(s.push(r),c&&t.push(a)));return s}function we(f,h,g,m,v,e){return m&&!m[k]&&(m=we(m)),v&&!v[k]&&(v=we(v,e)),ce(function(e,t,n,i){var o,r,s,a=[],l=[],c=t.length,u=e||function(e,t,n){for(var i=0,o=t.length;i<o;i++)ae(e,t[i],n);return n}(h||"*",n.nodeType?[n]:n,[]),d=!f||!e&&h?u:xe(u,a,f,n,i),p=g?v||(e?f:c||m)?[]:t:d;if(g&&g(d,p,n,i),m)for(o=xe(p,l),m(o,[],n,i),r=o.length;r--;)(s=o[r])&&(p[l[r]]=!(d[l[r]]=s));if(e){if(v||f){if(v){for(o=[],r=p.length;r--;)(s=p[r])&&o.push(d[r]=s);v(null,p=[],o,i)}for(r=p.length;r--;)(s=p[r])&&-1<(o=v?M(e,s):a[r])&&(e[o]=!(t[o]=s))}}else p=xe(p===t?p.splice(c,p.length):p),v?v(null,t,p,i):q.apply(t,p)})}function Te(m,v){function e(e,t,n,i,o){var r,s,a,l=0,c="0",u=e&&[],d=[],p=w,f=e||b&&x.find.TAG("*",o),h=$+=null==p?1:Math.random()||.1,g=f.length;for(o&&(w=t==C||t||o);c!==g&&null!=(r=f[c]);c++){if(b&&r){for(s=0,t||r.ownerDocument==C||(T(r),n=!S);a=m[s++];)if(a(r,t||C,n)){i.push(r);break}o&&($=h)}y&&((r=!a&&r)&&l--,e&&u.push(r))}if(l+=c,y&&c!==l){for(s=0;a=v[s++];)a(u,d,t,n);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=N.call(i));d=xe(d)}q.apply(i,d),o&&!e&&0<d.length&&1<l+v.length&&ae.uniqueSort(i)}return o&&($=h,w=p),u}var y=0<v.length,b=0<m.length;return y?ce(e):e}return me.prototype=x.filters=x.pseudos,x.setFilters=new me,f=ae.tokenize=function(e,t){var n,i,o,r,s,a,l,c=E[e+" "];if(c)return t?0:c.slice(0);for(s=e,a=[],l=x.preFilter;s;){for(r in n&&!(i=X.exec(s))||(i&&(s=s.slice(i[0].length)||s),a.push(o=[])),n=!1,(i=Y.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(B," ")}),s=s.slice(n.length)),x.filter)!(i=Q[r].exec(s))||l[r]&&!(i=l[r](i))||(n=i.shift(),o.push({value:n,type:r,matches:i}),s=s.slice(n.length));if(!n)break}return t?s.length:s?ae.error(e):E(e,a).slice(0)},h=ae.compile=function(e,t){var n,i=[],o=[],r=P[e+" "];if(!r){for(n=(t=t||f(e)).length;n--;)((r=function e(t){for(var i,n,o,r=t.length,s=x.relative[t[0].type],a=s||x.relative[" "],l=s?1:0,c=ye(function(e){return e===i},a,!0),u=ye(function(e){return-1<M(i,e)},a,!0),d=[function(e,t,n){return n=!s&&(n||t!==w)||((i=t).nodeType?c:u)(e,t,n),i=null,n}];l<r;l++)if(n=x.relative[t[l].type])d=[ye(be(d),n)];else{if((n=x.filter[t[l].type].apply(null,t[l].matches))[k]){for(o=++l;o<r&&!x.relative[t[o].type];o++);return we(1<l&&be(d),1<l&&ve(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(B,"$1"),n,l<o&&e(t.slice(l,o)),o<r&&e(t=t.slice(o)),o<r&&ve(t))}d.push(n)}return be(d)}(t[n]))[k]?i:o).push(r);(r=P(e,Te(o,i))).selector=e}return r},g=ae.select=function(e,t,n,i){var o,r,s,a,l,c="function"==typeof e&&e,u=!i&&f(e=c.selector||e);if(n=n||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(s=r[0]).type&&9===t.nodeType&&S&&x.relative[r[1].type]){if(!(t=(x.find.ID(s.matches[0].replace(ie,d),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=Q.needsContext.test(e)?0:r.length;o--&&(s=r[o],!x.relative[a=s.type]);)if((l=x.find[a])&&(i=l(s.matches[0].replace(ie,d),ne.test(r[0].type)&&ge(t.parentNode)||t))){if(r.splice(o,1),!(e=i.length&&ve(r)))return q.apply(n,i),n;break}}return(c||h(e,u))(i,t,!S,n,!t||ne.test(e)&&ge(t.parentNode)||t),n},p.sortStable=k.split("").sort(L).join("")===k,p.detectDuplicates=!!c,T(),p.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||de(I,function(e,t,n){if(!n)return!0===e[t]?t.toLowerCase():(t=e.getAttributeNode(t))&&t.specified?t.value:null}),ae}(T);S.find=p,S.expr=p.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=p.uniqueSort,S.text=p.getText,S.isXMLDoc=p.isXML,S.contains=p.contains,S.escapeSelector=p.escape;function f(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&S(e).is(n))break;i.push(e)}return i}function w(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}var k=S.expr.match.needsContext;function $(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var A=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function E(e,n,i){return b(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==i}):n.nodeType?S.grep(e,function(e){return e===n!==i}):"string"!=typeof n?S.grep(e,function(e){return-1<o.call(n,e)!==i}):S.filter(n,e,i)}S.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?S.find.matchesSelector(i,e)?[i]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,i=this.length,o=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<i;t++)if(S.contains(o[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)S.find(e,o[t],n);return 1<i?S.uniqueSort(n):n},filter:function(e){return this.pushStack(E(this,e||[],!1))},not:function(e){return this.pushStack(E(this,e||[],!0))},is:function(e){return!!E(this,"string"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var P=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,n){if(!e)return this;if(n=n||D,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this);if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:P.exec(e))||!i[1]&&t)return(!t||t.jquery?t||n:this.constructor(t)).find(e);if(i[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),A.test(i[1])&&S.isPlainObject(t))for(var i in t)b(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(e=C.getElementById(i[2]))&&(this[0]=e,this.length=1),this}).prototype=S.fn;var D=S(C),L=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function N(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,o=this.length,r=[],s="string"!=typeof e&&S(e);if(!k.test(e))for(;i<o;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?-1<s.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(1<r.length?S.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?o.call(S(e),this[0]):o.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t;return(t=e.parentNode)&&11!==t.nodeType?t:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,n){return f(e,"parentNode",n)},next:function(e){return N(e,"nextSibling")},prev:function(e){return N(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,n){return f(e,"nextSibling",n)},prevUntil:function(e,t,n){return f(e,"previousSibling",n)},siblings:function(e){return w((e.parentNode||{}).firstChild,e)},children:function(e){return w(e.firstChild)},contents:function(e){return null!=e.contentDocument&&n(e.contentDocument)?e.contentDocument:($(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(i,o){S.fn[i]=function(e,t){var n=S.map(this,o,e);return(t="Until"!==i.slice(-5)?e:t)&&"string"==typeof t&&(n=S.filter(t,n)),1<this.length&&(j[i]||S.uniqueSort(n),L.test(i)&&n.reverse()),this.pushStack(n)}});var H=/[^\x20\t\r\n\f]+/g;function q(e){return e}function O(e){throw e}function M(e,t,n,i){var o;try{e&&b(o=e.promise)?o.call(e).done(t).fail(n):e&&b(o=e.then)?o.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(i){var e,n;i="string"==typeof i?(e=i,n={},S.each(e.match(H)||[],function(e,t){n[t]=!0}),n):S.extend({},i);function o(){for(a=a||i.once,s=r=!0;c.length;u=-1)for(t=c.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&i.stopOnFalse&&(u=l.length,t=!1);i.memory||(t=!1),r=!1,a&&(l=t?[]:"")}var r,t,s,a,l=[],c=[],u=-1,d={add:function(){return l&&(t&&!r&&(u=l.length-1,c.push(t)),function n(e){S.each(e,function(e,t){b(t)?i.unique&&d.has(t)||l.push(t):t&&t.length&&"string"!==h(t)&&n(t)})}(arguments),t&&!r&&o()),this},remove:function(){return S.each(arguments,function(e,t){for(var n;-1<(n=S.inArray(t,l,n));)l.splice(n,1),n<=u&&u--}),this},has:function(e){return e?-1<S.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return a=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return a=c=[],t||r||(l=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),r||o()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!s}};return d},S.extend({Deferred:function(e){var r=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],o="pending",s={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var o=arguments;return S.Deferred(function(i){S.each(r,function(e,t){var n=b(o[t[4]])&&o[t[4]];a[t[1]](function(){var e=n&&n.apply(this,arguments);e&&b(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[t[0]+"With"](this,n?[e]:arguments)})}),o=null}).promise()},then:function(t,n,i){var l=0;function c(o,r,s,a){return function(){function e(){var e,t;if(!(o<l)){if((e=s.apply(n,i))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"===_typeof(e)||"function"==typeof e)&&e.then,b(t)?a?t.call(e,c(l,r,q,a),c(l,r,O,a)):(l++,t.call(e,c(l,r,q,a),c(l,r,O,a),c(l,r,q,r.notifyWith))):(s!==q&&(n=void 0,i=[e]),(a||r.resolveWith)(n,i))}}var n=this,i=arguments,t=a?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),l<=o+1&&(s!==O&&(n=void 0,i=[e]),r.rejectWith(n,i))}};o?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),T.setTimeout(t))}}return S.Deferred(function(e){r[0][3].add(c(0,e,b(i)?i:q,e.notifyWith)),r[1][3].add(c(0,e,b(t)?t:q)),r[2][3].add(c(0,e,b(n)?n:O))}).promise()},promise:function(e){return null!=e?S.extend(e,s):s}},a={};return S.each(r,function(e,t){var n=t[2],i=t[5];s[t[1]]=n.add,i&&n.add(function(){o=i},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),n.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=n.fireWith}),s.promise(a),e&&e.call(a,a),a},when:function(e){function t(t){return function(e){o[t]=this,r[t]=1<arguments.length?a.call(arguments):e,--n||s.resolveWith(o,r)}}var n=arguments.length,i=n,o=Array(i),r=a.call(arguments),s=S.Deferred();if(n<=1&&(M(e,s.done(t(i)).resolve,s.reject,!n),"pending"===s.state()||b(r[i]&&r[i].then)))return s.then();for(;i--;)M(r[i],t(i),s.reject);return s.promise()}});var I=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){T.console&&T.console.warn&&e&&I.test(e.name)&&T.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){T.setTimeout(function(){throw e})};var R=S.Deferred();function F(){C.removeEventListener("DOMContentLoaded",F),T.removeEventListener("load",F),S.ready()}S.fn.ready=function(e){return R.then(e).catch(function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||R.resolveWith(C,[S])}}),S.ready.then=R.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?T.setTimeout(S.ready):(C.addEventListener("DOMContentLoaded",F),T.addEventListener("load",F));function _(e,t,n,i,o,r,s){var a=0,l=e.length,c=null==n;if("object"===h(n))for(a in o=!0,n)_(e,t,a,n[a],!0,r,s);else if(void 0!==i&&(o=!0,b(i)||(s=!0),t=c?s?(t.call(e,i),null):(c=t,function(e,t,n){return c.call(S(e),n)}):t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return o?e:c?t.call(e):l?t(e[0],n):r}var z=/^-ms-/,W=/-([a-z])/g;function B(e,t){return t.toUpperCase()}function X(e){return e.replace(z,"ms-").replace(W,B)}function Y(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function U(){this.expando=S.expando+U.uid++}U.uid=1,U.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,o=this.cache(e);if("string"==typeof t)o[X(t)]=n;else for(i in t)o[X(i)]=t[i];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in i?[t]:t.match(H)||[]).length;for(;n--;)delete i[t[n]]}void 0!==t&&!S.isEmptyObject(i)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){e=e[this.expando];return void 0!==e&&!S.isEmptyObject(e)}};var V=new U,G=new U,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function K(e,t,n){var i,o;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===(o=n)||"false"!==o&&("null"===o?null:o===+o+""?+o:Q.test(o)?JSON.parse(o):o)}catch(e){}G.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return G.hasData(e)||V.hasData(e)},data:function(e,t,n){return G.access(e,t,n)},removeData:function(e,t){G.remove(e,t)},_data:function(e,t,n){return V.access(e,t,n)},_removeData:function(e,t){V.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,i,o,r=this[0],s=r&&r.attributes;if(void 0!==n)return"object"===_typeof(n)?this.each(function(){G.set(this,n)}):_(this,function(e){var t;return r&&void 0===e?void 0!==(t=G.get(r,n))||void 0!==(t=K(r,n))?t:void 0:void this.each(function(){G.set(this,n,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=G.get(r),1===r.nodeType&&!V.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(i=s[t].name).indexOf("data-")&&(i=X(i.slice(5)),K(r,i,o[i]));V.set(r,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){G.remove(this,e)})}}),S.extend({queue:function(e,t,n){var i;if(e)return i=V.get(e,t=(t||"fx")+"queue"),n&&(!i||Array.isArray(n)?i=V.access(e,t,S.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){var n=S.queue(e,t=t||"fx"),i=n.length,o=n.shift(),r=S._queueHooks(e,t);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete r.stop,o.call(e,function(){S.dequeue(e,t)},r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return V.get(e,n)||V.access(e,n,{empty:S.Callbacks("once memory").add(function(){V.remove(e,[t+"queue",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--o||r.resolveWith(s,[s])}var i,o=1,r=S.Deferred(),s=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(i=V.get(s[a],e+"queueHooks"))&&i.empty&&(o++,i.empty.add(n));return n(),r.promise(t)}});var J=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ee=new RegExp("^(?:([+-])=|)("+J+")([a-z%]*)$","i"),te=["Top","Right","Bottom","Left"],ne=C.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};ne.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});var re=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ie(e)&&"none"===S.css(e,"display")};function se(e,t,n,i){var o,r,s=20,a=i?function(){return i.cur()}:function(){return S.css(e,t,"")},l=a(),c=n&&n[3]||(S.cssNumber[t]?"":"px"),u=e.nodeType&&(S.cssNumber[t]||"px"!==c&&+l)&&ee.exec(S.css(e,t));if(u&&u[3]!==c){for(c=c||u[3],u=+(l/=2)||1;s--;)S.style(e,t,u+c),(1-r)*(1-(r=a()/l||.5))<=0&&(s=0),u/=r;S.style(e,t,(u*=2)+c),n=n||[]}return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=o)),o}var ae={};function le(e,t){for(var n,i,o,r,s,a=[],l=0,c=e.length;l<c;l++)(i=e[l]).style&&(n=i.style.display,t?("none"===n&&(a[l]=V.get(i,"display")||null,a[l]||(i.style.display="")),""===i.style.display&&re(i)&&(a[l]=(s=r=void 0,r=(o=i).ownerDocument,s=o.nodeName,(o=ae[s])||(r=r.body.appendChild(r.createElement(s)),o=S.css(r,"display"),r.parentNode.removeChild(r),ae[s]=o="none"===o?"block":o)))):"none"!==n&&(a[l]="none",V.set(i,"display",n)));for(l=0;l<c;l++)null!=a[l]&&(e[l].style.display=a[l]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){re(this)?S(this).show():S(this).hide()})}});var ce=/^(?:checkbox|radio)$/i,ue=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,de=/^$|^module$|\/(?:java|ecma)script/i;Ut=C.createDocumentFragment().appendChild(C.createElement("div")),(p=C.createElement("input")).setAttribute("type","radio"),p.setAttribute("checked","checked"),p.setAttribute("name","t"),Ut.appendChild(p),y.checkClone=Ut.cloneNode(!0).cloneNode(!0).lastChild.checked,Ut.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!Ut.cloneNode(!0).lastChild.defaultValue,Ut.innerHTML="<option></option>",y.option=!!Ut.lastChild;var pe={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function fe(e,t){var n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&$(e,t)?S.merge([e],n):n}function he(e,t){for(var n=0,i=e.length;n<i;n++)V.set(e[n],"globalEval",!t||V.get(t[n],"globalEval"))}pe.tbody=pe.tfoot=pe.colgroup=pe.caption=pe.thead,pe.th=pe.td,y.option||(pe.optgroup=pe.option=[1,"<select multiple='multiple'>","</select>"]);var ge=/<|&#?\w+;/;function me(e,t,n,i,o){for(var r,s,a,l,c,u=t.createDocumentFragment(),d=[],p=0,f=e.length;p<f;p++)if((r=e[p])||0===r)if("object"===h(r))S.merge(d,r.nodeType?[r]:r);else if(ge.test(r)){for(s=s||u.appendChild(t.createElement("div")),a=(ue.exec(r)||["",""])[1].toLowerCase(),a=pe[a]||pe._default,s.innerHTML=a[1]+S.htmlPrefilter(r)+a[2],c=a[0];c--;)s=s.lastChild;S.merge(d,s.childNodes),(s=u.firstChild).textContent=""}else d.push(t.createTextNode(r));for(u.textContent="",p=0;r=d[p++];)if(i&&-1<S.inArray(r,i))o&&o.push(r);else if(l=ie(r),s=fe(u.appendChild(r),"script"),l&&he(s),n)for(c=0;r=s[c++];)de.test(r.type||"")&&n.push(r);return u}var ve=/^([^.]*)(?:\.(.+)|)/;function ye(){return!0}function be(){return!1}function xe(e,t){return e===function(){try{return C.activeElement}catch(e){}}()==("focus"===t)}function we(e,t,n,i,o,r){var s,a;if("object"===_typeof(t)){for(a in"string"!=typeof n&&(i=i||n,n=void 0),t)we(e,a,n,i,t[a],r);return e}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=be;else if(!o)return e;return 1===r&&(s=o,(o=function(e){return S().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=S.guid++)),e.each(function(){S.event.add(this,t,o,i,n)})}function Te(e,o,r){r?(V.set(e,o,!1),S.event.add(e,o,{namespace:!1,handler:function(e){var t,n,i=V.get(this,o);if(1&e.isTrigger&&this[o]){if(i.length)(S.event.special[o]||{}).delegateType&&e.stopPropagation();else if(i=a.call(arguments),V.set(this,o,i),t=r(this,o),this[o](),i!==(n=V.get(this,o))||t?V.set(this,o,!1):n={},i!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else i.length&&(V.set(this,o,{value:S.event.trigger(S.extend(i[0],S.Event.prototype),i.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===V.get(e,o)&&S.event.add(e,o,ye)}S.event={global:{},add:function(t,e,n,i,o){var r,s,a,l,c,u,d,p,f,h=V.get(t);if(Y(t))for(n.handler&&(n=(r=n).handler,o=r.selector),o&&S.find.matchesSelector(ne,o),n.guid||(n.guid=S.guid++),(a=h.events)||(a=h.events=Object.create(null)),(s=h.handle)||(s=h.handle=function(e){return void 0!==S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(H)||[""]).length;l--;)d=f=(c=ve.exec(e[l])||[])[1],p=(c[2]||"").split(".").sort(),d&&(u=S.event.special[d]||{},d=(o?u.delegateType:u.bindType)||d,u=S.event.special[d]||{},c=S.extend({type:d,origType:f,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&S.expr.match.needsContext.test(o),namespace:p.join(".")},r),(f=a[d])||((f=a[d]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,i,p,s)||t.addEventListener&&t.addEventListener(d,s)),u.add&&(u.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),o?f.splice(f.delegateCount++,0,c):f.push(c),S.event.global[d]=!0)},remove:function(e,t,n,i,o){var r,s,a,l,c,u,d,p,f,h,g,m=V.hasData(e)&&V.get(e);if(m&&(l=m.events)){for(c=(t=(t||"").match(H)||[""]).length;c--;)if(f=g=(a=ve.exec(t[c])||[])[1],h=(a[2]||"").split(".").sort(),f){for(d=S.event.special[f]||{},p=l[f=(i?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)u=p[r],!o&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(p.splice(r,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));s&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,h,m.handle)||S.removeEvent(e,f,m.handle),delete l[f])}else for(f in l)S.event.remove(e,f+t[c],n,i,!0);S.isEmptyObject(l)&&V.remove(e,"handle events")}},dispatch:function(e){var t,n,i,o,r,s=new Array(arguments.length),a=S.event.fix(e),l=(V.get(this,"events")||Object.create(null))[a.type]||[],e=S.event.special[a.type]||{};for(s[0]=a,t=1;t<arguments.length;t++)s[t]=arguments[t];if(a.delegateTarget=this,!e.preDispatch||!1!==e.preDispatch.call(this,a)){for(r=S.event.handlers.call(this,a,l),t=0;(i=r[t++])&&!a.isPropagationStopped();)for(a.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==o.namespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(o=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(a.result=o)&&(a.preventDefault(),a.stopPropagation()));return e.postDispatch&&e.postDispatch.call(this,a),a.result}},handlers:function(e,t){var n,i,o,r,s,a=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],s={},n=0;n<l;n++)void 0===s[o=(i=t[n]).selector+" "]&&(s[o]=i.needsContext?-1<S(o,this).index(c):S.find(o,this,null,[c]).length),s[o]&&r.push(i);r.length&&a.push({elem:c,handlers:r})}return c=this,l<t.length&&a.push({elem:c,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){e=this||e;return ce.test(e.type)&&e.click&&$(e,"input")&&Te(e,"click",ye),!1},trigger:function(e){e=this||e;return ce.test(e.type)&&e.click&&$(e,"input")&&Te(e,"click"),!0},_default:function(e){e=e.target;return ce.test(e.type)&&e.click&&$(e,"input")&&V.get(e,"click")||$(e,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ye:be,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:be,isPropagationStopped:be,isImmediatePropagationStopped:be,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ye,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ye,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ye,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return Te(this,e,xe),!1},trigger:function(){return Te(this,e),!0},_default:function(){return!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){S.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=i.origType,t=i.handler.apply(this,arguments),e.type=o),t}}}),S.fn.extend({on:function(e,t,n,i){return we(this,e,t,n,i)},one:function(e,t,n,i){return we(this,e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,S(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"!==_typeof(e))return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=be),this.each(function(){S.event.remove(this,e,n,t)});for(o in e)this.off(o,t,e[o]);return this}});var Ce=/<script|<style|<link/i,Se=/checked\s*(?:[^=]|=\s*.checked.)/i,ke=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function $e(e,t){return $(e,"table")&&$(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function Ae(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ee(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Pe(e,t){var n,i,o,r;if(1===t.nodeType){if(V.hasData(e)&&(r=V.get(e).events))for(o in V.remove(t,"handle events"),r)for(n=0,i=r[o].length;n<i;n++)S.event.add(t,o,r[o][n]);G.hasData(e)&&(e=G.access(e),e=S.extend({},e),G.set(t,e))}}function De(n,i,o,r){i=m(i);var e,t,s,a,l,c,u=0,d=n.length,p=d-1,f=i[0],h=b(f);if(h||1<d&&"string"==typeof f&&!y.checkClone&&Se.test(f))return n.each(function(e){var t=n.eq(e);h&&(i[0]=f.call(this,e,t.html())),De(t,i,o,r)});if(d&&(t=(e=me(i,n[0].ownerDocument,!1,n,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(a=(s=S.map(fe(e,"script"),Ae)).length;u<d;u++)l=e,u!==p&&(l=S.clone(l,!0,!0),a&&S.merge(s,fe(l,"script"))),o.call(n[u],l,u);if(a)for(c=s[s.length-1].ownerDocument,S.map(s,Ee),u=0;u<a;u++)l=s[u],de.test(l.type||"")&&!V.access(l,"globalEval")&&S.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&!l.noModule&&S._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):x(l.textContent.replace(ke,""),l,c))}return n}function Le(e,t,n){for(var i,o=t?S.filter(t,e):e,r=0;null!=(i=o[r]);r++)n||1!==i.nodeType||S.cleanData(fe(i)),i.parentNode&&(n&&ie(i)&&he(fe(i,"script")),i.parentNode.removeChild(i));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var i,o,r,s,a,l,c,u=e.cloneNode(!0),d=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(s=fe(u),i=0,o=(r=fe(e)).length;i<o;i++)a=r[i],l=s[i],c=void 0,"input"===(c=l.nodeName.toLowerCase())&&ce.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(t)if(n)for(r=r||fe(e),s=s||fe(u),i=0,o=r.length;i<o;i++)Pe(r[i],s[i]);else Pe(e,u);return 0<(s=fe(u,"script")).length&&he(s,!d&&fe(e,"script")),u},cleanData:function(e){for(var t,n,i,o=S.event.special,r=0;void 0!==(n=e[r]);r++)if(Y(n)){if(t=n[V.expando]){if(t.events)for(i in t.events)o[i]?S.event.remove(n,i):S.removeEvent(n,i,t.handle);n[V.expando]=void 0}n[G.expando]&&(n[G.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Le(this,e,!0)},remove:function(e){return Le(this,e)},text:function(e){return _(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return De(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||$e(this,e).appendChild(e)})},prepend:function(){return De(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=$e(this,e)).insertBefore(e,t.firstChild)})},before:function(){return De(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return De(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(fe(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return _(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ce.test(e)&&!pe[(ue.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(fe(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return De(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(fe(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){S.fn[e]=function(e){for(var t,n=[],i=S(e),o=i.length-1,r=0;r<=o;r++)t=r===o?this:this.clone(!0),S(i[r])[s](t),l.apply(n,t.get());return this.pushStack(n)}});function je(e,t,n){var i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in n=n.call(e),t)e.style[i]=o[i];return n}var Ne,He,qe,Oe,Me,Ie,Re,Fe,_e=new RegExp("^("+J+")(?!px)[a-z%]+$","i"),ze=function(e){var t=e.ownerDocument.defaultView;return(t=!t||!t.opener?T:t).getComputedStyle(e)},We=new RegExp(te.join("|"),"i");function Be(){var e;Fe&&(Re.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Fe.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(Re).appendChild(Fe),e=T.getComputedStyle(Fe),Ne="1%"!==e.top,Ie=12===Xe(e.marginLeft),Fe.style.right="60%",Oe=36===Xe(e.right),He=36===Xe(e.width),Fe.style.position="absolute",qe=12===Xe(Fe.offsetWidth/3),ne.removeChild(Re),Fe=null)}function Xe(e){return Math.round(parseFloat(e))}function Ye(e,t,n){var i,o,r=e.style;return(n=n||ze(e))&&(""!==(o=n.getPropertyValue(t)||n[t])||ie(e)||(o=S.style(e,t)),!y.pixelBoxStyles()&&_e.test(o)&&We.test(t)&&(i=r.width,e=r.minWidth,t=r.maxWidth,r.minWidth=r.maxWidth=r.width=o,o=n.width,r.width=i,r.minWidth=e,r.maxWidth=t)),void 0!==o?o+"":o}function Ue(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Re=C.createElement("div"),(Fe=C.createElement("div")).style&&(Fe.style.backgroundClip="content-box",Fe.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Fe.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return Be(),He},pixelBoxStyles:function(){return Be(),Oe},pixelPosition:function(){return Be(),Ne},reliableMarginLeft:function(){return Be(),Ie},scrollboxSize:function(){return Be(),qe},reliableTrDimensions:function(){var e,t,n;return null==Me&&(e=C.createElement("table"),t=C.createElement("tr"),n=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",ne.appendChild(e).appendChild(t).appendChild(n),n=T.getComputedStyle(t),Me=parseInt(n.height,10)+parseInt(n.borderTopWidth,10)+parseInt(n.borderBottomWidth,10)===t.offsetHeight,ne.removeChild(e)),Me}}));var Ve=["Webkit","Moz","ms"],Ge=C.createElement("div").style,Qe={};function Ze(e){var t=S.cssProps[e]||Qe[e];return t||(e in Ge?e:Qe[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=Ve.length;n--;)if((e=Ve[n]+t)in Ge)return e}(e)||e)}var Ke=/^(none|table(?!-c[ea]).+)/,Je=/^--/,et={position:"absolute",visibility:"hidden",display:"block"},tt={letterSpacing:"0",fontWeight:"400"};function nt(e,t,n){var i=ee.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function it(e,t,n,i,o,r){var s="width"===t?1:0,a=0,l=0;if(n===(i?"border":"content"))return 0;for(;s<4;s+=2)"margin"===n&&(l+=S.css(e,n+te[s],!0,o)),i?("content"===n&&(l-=S.css(e,"padding"+te[s],!0,o)),"margin"!==n&&(l-=S.css(e,"border"+te[s]+"Width",!0,o))):(l+=S.css(e,"padding"+te[s],!0,o),"padding"!==n?l+=S.css(e,"border"+te[s]+"Width",!0,o):a+=S.css(e,"border"+te[s]+"Width",!0,o));return!i&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-a-.5))||0),l}function ot(e,t,n){var i=ze(e),o=(!y.boxSizingReliable()||n)&&"border-box"===S.css(e,"boxSizing",!1,i),r=o,s=Ye(e,t,i),a="offset"+t[0].toUpperCase()+t.slice(1);if(_e.test(s)){if(!n)return s;s="auto"}return(!y.boxSizingReliable()&&o||!y.reliableTrDimensions()&&$(e,"tr")||"auto"===s||!parseFloat(s)&&"inline"===S.css(e,"display",!1,i))&&e.getClientRects().length&&(o="border-box"===S.css(e,"boxSizing",!1,i),(r=a in e)&&(s=e[a])),(s=parseFloat(s)||0)+it(e,t,n||(o?"border":"content"),r,i,s)+"px"}function rt(e,t,n,i,o){return new rt.prototype.init(e,t,n,i,o)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){e=Ye(e,"opacity");return""===e?"1":e}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,s,a=X(t),l=Je.test(t),c=e.style;if(l||(t=Ze(a)),s=S.cssHooks[t]||S.cssHooks[a],void 0===n)return s&&"get"in s&&void 0!==(o=s.get(e,!1,i))?o:c[t];"string"===(r=_typeof(n))&&(o=ee.exec(n))&&o[1]&&(n=se(e,t,o),r="number"),null!=n&&n==n&&("number"!==r||l||(n+=o&&o[3]||(S.cssNumber[a]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(c[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l?c.setProperty(t,n):c[t]=n))}},css:function(e,t,n,i){var o,r=X(t);return Je.test(t)||(t=Ze(r)),"normal"===(o=void 0===(o=(r=S.cssHooks[t]||S.cssHooks[r])&&"get"in r?r.get(e,!0,n):o)?Ye(e,t,i):o)&&t in tt&&(o=tt[t]),""===n||n?(t=parseFloat(o),!0===n||isFinite(t)?t||0:o):o}}),S.each(["height","width"],function(e,a){S.cssHooks[a]={get:function(e,t,n){if(t)return!Ke.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,a,n):je(e,et,function(){return ot(e,a,n)})},set:function(e,t,n){var i,o=ze(e),r=!y.scrollboxSize()&&"absolute"===o.position,s=(r||n)&&"border-box"===S.css(e,"boxSizing",!1,o),n=n?it(e,a,n,s,o):0;return s&&r&&(n-=Math.ceil(e["offset"+a[0].toUpperCase()+a.slice(1)]-parseFloat(o[a])-it(e,a,"border",!1,o)-.5)),n&&(i=ee.exec(t))&&"px"!==(i[3]||"px")&&(e.style[a]=t,t=S.css(e,a)),nt(0,t,n)}}}),S.cssHooks.marginLeft=Ue(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ye(e,"marginLeft"))||e.getBoundingClientRect().left-je(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(o,r){S.cssHooks[o+r]={expand:function(e){for(var t=0,n={},i="string"==typeof e?e.split(" "):[e];t<4;t++)n[o+te[t]+r]=i[t]||i[t-2]||i[0];return n}},"margin"!==o&&(S.cssHooks[o+r].set=nt)}),S.fn.extend({css:function(e,t){return _(this,function(e,t,n){var i,o,r={},s=0;if(Array.isArray(t)){for(i=ze(e),o=t.length;s<o;s++)r[t[s]]=S.css(e,t[s],!1,i);return r}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),(S.Tween=rt).prototype={constructor:rt,init:function(e,t,n,i,o,r){this.elem=e,this.prop=n,this.easing=o||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(S.cssNumber[n]?"":"px")},cur:function(){var e=rt.propHooks[this.prop];return(e&&e.get?e:rt.propHooks._default).get(this)},run:function(e){var t,n=rt.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),(n&&n.set?n:rt.propHooks._default).set(this),this}},rt.prototype.init.prototype=rt.prototype,rt.propHooks={_default:{get:function(e){return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(e=S.css(e.elem,e.prop,""))&&"auto"!==e?e:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[Ze(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}},rt.propHooks.scrollTop=rt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=rt.prototype.init,S.fx.step={};var st,at,lt=/^(?:toggle|show|hide)$/,ct=/queueHooks$/;function ut(){at&&(!1===C.hidden&&T.requestAnimationFrame?T.requestAnimationFrame(ut):T.setTimeout(ut,S.fx.interval),S.fx.tick())}function dt(){return T.setTimeout(function(){st=void 0}),st=Date.now()}function pt(e,t){var n,i=0,o={height:e};for(t=t?1:0;i<4;i+=2-t)o["margin"+(n=te[i])]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function ft(e,t,n){for(var i,o=(ht.tweeners[t]||[]).concat(ht.tweeners["*"]),r=0,s=o.length;r<s;r++)if(i=o[r].call(n,t,e))return i}function ht(o,e,t){var n,r,i=0,s=ht.prefilters.length,a=S.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=st||dt(),e=Math.max(0,c.startTime+c.duration-e),t=1-(e/c.duration||0),n=0,i=c.tweens.length;n<i;n++)c.tweens[n].run(t);return a.notifyWith(o,[c,t,e]),t<1&&i?e:(i||a.notifyWith(o,[c,1,0]),a.resolveWith(o,[c]),!1)},c=a.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:st||dt(),duration:t.duration,tweens:[],createTween:function(e,t){e=S.Tween(o,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(e),e},stop:function(e){var t=0,n=e?c.tweens.length:0;if(r)return this;for(r=!0;t<n;t++)c.tweens[t].run(1);return e?(a.notifyWith(o,[c,1,0]),a.resolveWith(o,[c,e])):a.rejectWith(o,[c,e]),this}}),u=c.props;for(!function(e,t){var n,i,o,r,s;for(n in e)if(o=t[i=X(n)],r=e[n],Array.isArray(r)&&(o=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),(s=S.cssHooks[i])&&"expand"in s)for(n in r=s.expand(r),delete e[i],r)n in e||(e[n]=r[n],t[n]=o);else t[i]=o}(u,c.opts.specialEasing);i<s;i++)if(n=ht.prefilters[i].call(c,o,u,c.opts))return b(n.stop)&&(S._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return S.map(u,ft,c),b(c.opts.start)&&c.opts.start.call(o,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),S.fx.timer(S.extend(l,{elem:o,anim:c,queue:c.opts.queue})),c}S.Animation=S.extend(ht,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,ee.exec(t),n),n}]},tweener:function(e,t){for(var n,i=0,o=(e=b(e)?(t=e,["*"]):e.match(H)).length;i<o;i++)n=e[i],ht.tweeners[n]=ht.tweeners[n]||[],ht.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,o,r,s,a,l,c,u="width"in t||"height"in t,d=this,p={},f=e.style,h=e.nodeType&&re(e),g=V.get(e,"fxshow");for(i in n.queue||(null==(s=S._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,S.queue(e,"fx").length||s.empty.fire()})})),t)if(o=t[i],lt.test(o)){if(delete t[i],r=r||"toggle"===o,o===(h?"hide":"show")){if("show"!==o||!g||void 0===g[i])continue;h=!0}p[i]=g&&g[i]||S.style(e,i)}if((l=!S.isEmptyObject(t))||!S.isEmptyObject(p))for(i in u&&1===e.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=g&&g.display)&&(c=V.get(e,"display")),"none"===(u=S.css(e,"display"))&&(c?u=c:(le([e],!0),c=e.style.display||c,u=S.css(e,"display"),le([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===S.css(e,"float")&&(l||(d.done(function(){f.display=c}),null==c&&(u=f.display,c="none"===u?"":u)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",d.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]})),l=!1,p)l||(g?"hidden"in g&&(h=g.hidden):g=V.access(e,"fxshow",{display:c}),r&&(g.hidden=!h),h&&le([e],!0),d.done(function(){for(i in h||le([e]),V.remove(e,"fxshow"),p)S.style(e,i,p[i])})),l=ft(h?g[i]:0,i,d),i in g||(g[i]=l.start,h&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?ht.prefilters.unshift(e):ht.prefilters.push(e)}}),S.speed=function(e,t,n){var i=e&&"object"===_typeof(e)?S.extend({},e):{complete:n||!n&&t||b(e)&&e,duration:e,easing:n&&t||t&&!b(t)&&t};return S.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in S.fx.speeds?i.duration=S.fx.speeds[i.duration]:i.duration=S.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){b(i.old)&&i.old.call(this),i.queue&&S.dequeue(this,i.queue)},i},S.fn.extend({fadeTo:function(e,t,n,i){return this.filter(re).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(t,e,n,i){var o=S.isEmptyObject(t),r=S.speed(e,n,i),i=function(){var e=ht(this,S.extend({},t),r);(o||V.get(this,"finish"))&&e.stop(!0)};return i.finish=i,o||!1===r.queue?this.each(i):this.queue(r.queue,i)},stop:function(o,e,r){function s(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof o&&(r=e,e=o,o=void 0),e&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",n=S.timers,i=V.get(this);if(t)i[t]&&i[t].stop&&s(i[t]);else for(t in i)i[t]&&i[t].stop&&ct.test(t)&&s(i[t]);for(t=n.length;t--;)n[t].elem!==this||null!=o&&n[t].queue!==o||(n[t].anim.stop(r),e=!1,n.splice(t,1));!e&&r||S.dequeue(this,o)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=V.get(this),n=t[s+"queue"],i=t[s+"queueHooks"],o=S.timers,r=n?n.length:0;for(t.finish=!0,S.queue(this,s,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===s&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,i){var o=S.fn[i];S.fn[i]=function(e,t,n){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(pt(i,!0),e,t,n)}}),S.each({slideDown:pt("show"),slideUp:pt("hide"),slideToggle:pt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,i){S.fn[e]=function(e,t,n){return this.animate(i,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(st=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),st=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){at||(at=!0,ut())},S.fx.stop=function(){at=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(i,e){return i=S.fx&&S.fx.speeds[i]||i,this.queue(e=e||"fx",function(e,t){var n=T.setTimeout(e,i);t.stop=function(){T.clearTimeout(n)}})},Ut=C.createElement("input"),J=C.createElement("select").appendChild(C.createElement("option")),Ut.type="checkbox",y.checkOn=""!==Ut.value,y.optSelected=J.selected,(Ut=C.createElement("input")).value="t",Ut.type="radio",y.radioValue="t"===Ut.value;var gt,mt=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return _(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?S.prop(e,t,n):(1===r&&S.isXMLDoc(e)||(o=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?gt:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):!(o&&"get"in o&&null!==(i=o.get(e,t)))&&null==(i=S.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&$(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,o=t&&t.match(H);if(o&&1===e.nodeType)for(;n=o[i++];)e.removeAttribute(n)}}),gt={set:function(e,t,n){return!1===t?S.removeAttr(e,n):e.setAttribute(n,n),n}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var s=mt[t]||S.find.attr;mt[t]=function(e,t,n){var i,o,r=t.toLowerCase();return n||(o=mt[r],mt[r]=i,i=null!=s(e,t,n)?r:null,mt[r]=o),i}});var vt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;function bt(e){return(e.match(H)||[]).join(" ")}function xt(e){return e.getAttribute&&e.getAttribute("class")||""}function wt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(H)||[]}S.fn.extend({prop:function(e,t){return _(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&S.isXMLDoc(e)||(t=S.propFix[t]||t,o=S.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):vt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){e=e.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(e){e=e.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,n,i,o,r,s,a=0;if(b(t))return this.each(function(e){S(this).addClass(t.call(this,e,xt(this)))});if((e=wt(t)).length)for(;n=this[a++];)if(s=xt(n),i=1===n.nodeType&&" "+bt(s)+" "){for(r=0;o=e[r++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");s!==(s=bt(i))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,i,o,r,s,a=0;if(b(t))return this.each(function(e){S(this).removeClass(t.call(this,e,xt(this)))});if(!arguments.length)return this.attr("class","");if((e=wt(t)).length)for(;n=this[a++];)if(s=xt(n),i=1===n.nodeType&&" "+bt(s)+" "){for(r=0;o=e[r++];)for(;-1<i.indexOf(" "+o+" ");)i=i.replace(" "+o+" "," ");s!==(s=bt(i))&&n.setAttribute("class",s)}return this},toggleClass:function(o,t){var r=_typeof(o),s="string"===r||Array.isArray(o);return"boolean"==typeof t&&s?t?this.addClass(o):this.removeClass(o):b(o)?this.each(function(e){S(this).toggleClass(o.call(this,e,xt(this),t),t)}):this.each(function(){var e,t,n,i;if(s)for(t=0,n=S(this),i=wt(o);e=i[t++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==o&&"boolean"!==r||((e=xt(this))&&V.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==o&&V.get(this,"__className__")||""))})},hasClass:function(e){for(var t,n=0,i=" "+e+" ";t=this[n++];)if(1===t.nodeType&&-1<(" "+bt(xt(t))+" ").indexOf(i))return!0;return!1}});var Tt=/\r/g;S.fn.extend({val:function(t){var n,e,i,o=this[0];return arguments.length?(i=b(t),this.each(function(e){1===this.nodeType&&(null==(e=i?t.call(this,e,S(this).val()):t)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=S.map(e,function(e){return null==e?"":e+""})),(n=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,e,"value")||(this.value=e))})):o?(n=S.valHooks[o.type]||S.valHooks[o.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(o,"value"))?e:"string"==typeof(e=o.value)?e.replace(Tt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:bt(S.text(e))}},select:{get:function(e){for(var t,n=e.options,i=e.selectedIndex,o="select-one"===e.type,r=o?null:[],s=o?i+1:n.length,a=i<0?s:o?i:0;a<s;a++)if(((t=n[a]).selected||a===i)&&!t.disabled&&(!t.parentNode.disabled||!$(t.parentNode,"optgroup"))){if(t=S(t).val(),o)return t;r.push(t)}return r},set:function(e,t){for(var n,i,o=e.options,r=S.makeArray(t),s=o.length;s--;)((i=o[s]).selected=-1<S.inArray(S.valHooks.option.get(i),r))&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in T;function Ct(e){e.stopPropagation()}var St=/^(?:focusinfocus|focusoutblur)$/;S.extend(S.event,{trigger:function(e,t,n,i){var o,r,s,a,l,c,u,d=[n||C],p=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[],h=u=r=n=n||C;if(3!==n.nodeType&&8!==n.nodeType&&!St.test(p+S.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),a=p.indexOf(":")<0&&"on"+p,(e=e[S.expando]?e:new S.Event(p,"object"===_typeof(e)&&e)).isTrigger=i?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[p]||{},i||!c.trigger||!1!==c.trigger.apply(n,t))){if(!i&&!c.noBubble&&!g(n)){for(s=c.delegateType||p,St.test(s+p)||(h=h.parentNode);h;h=h.parentNode)d.push(h),r=h;r===(n.ownerDocument||C)&&d.push(r.defaultView||r.parentWindow||T)}for(o=0;(h=d[o++])&&!e.isPropagationStopped();)u=h,e.type=1<o?s:c.bindType||p,(l=(V.get(h,"events")||Object.create(null))[e.type]&&V.get(h,"handle"))&&l.apply(h,t),(l=a&&h[a])&&l.apply&&Y(h)&&(e.result=l.apply(h,t),!1===e.result&&e.preventDefault());return e.type=p,i||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(d.pop(),t)||!Y(n)||a&&b(n[p])&&!g(n)&&((r=n[a])&&(n[a]=null),S.event.triggered=p,e.isPropagationStopped()&&u.addEventListener(p,Ct),n[p](),e.isPropagationStopped()&&u.removeEventListener(p,Ct),S.event.triggered=void 0,r&&(n[a]=r)),e.result}},simulate:function(e,t,n){e=S.extend(new S.Event,n,{type:e,isSimulated:!0});S.event.trigger(e,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return S.event.trigger(e,t,n,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(n,i){function o(e){S.event.simulate(i,e.target,S.event.fix(e))}S.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=V.access(e,i);t||e.addEventListener(n,o,!0),V.access(e,i,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=V.access(e,i)-1;t?V.access(e,i,t):(e.removeEventListener(n,o,!0),V.remove(e,i))}}});var kt=T.location,$t={guid:Date.now()},At=/\?/;S.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new T.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||S.error("Invalid XML: "+(n?S.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var Et=/\[\]$/,Pt=/\r?\n/g,Dt=/^(?:submit|button|image|reset|file)$/i,Lt=/^(?:input|select|textarea|keygen)/i;S.param=function(e,t){function n(e,t){t=b(t)?t():t,o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==t?"":t)}var i,o=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){n(this.name,this.value)});else for(i in e)!function n(i,e,o,r){if(Array.isArray(e))S.each(e,function(e,t){o||Et.test(i)?r(i,t):n(i+"["+("object"===_typeof(t)&&null!=t?e:"")+"]",t,o,r)});else if(o||"object"!==h(e))r(i,e);else for(var t in e)n(i+"["+t+"]",e[t],o,r)}(i,e[i],t,n);return o.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&Lt.test(this.nodeName)&&!Dt.test(e)&&(this.checked||!ce.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Pt,"\r\n")}}):{name:t.name,value:n.replace(Pt,"\r\n")}}).get()}});var jt=/%20/g,Nt=/#.*$/,Ht=/([?&])_=[^&]*/,qt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ot=/^(?:GET|HEAD)$/,Mt=/^\/\//,It={},Rt={},Ft="*/".concat("*"),_t=C.createElement("a");function zt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,i=0,o=e.toLowerCase().match(H)||[];if(b(t))for(;n=o[i++];)"+"===n[0]?(n=n.slice(1)||"*",(r[n]=r[n]||[]).unshift(t)):(r[n]=r[n]||[]).push(t)}}function Wt(t,i,o,r){var s={},a=t===Rt;function l(e){var n;return s[e]=!0,S.each(t[e]||[],function(e,t){t=t(i,o,r);return"string"!=typeof t||a||s[t]?a?!(n=t):void 0:(i.dataTypes.unshift(t),l(t),!1)}),n}return l(i.dataTypes[0])||!s["*"]&&l("*")}function Bt(e,t){var n,i,o=S.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i=i||{})[n]=t[n]);return i&&S.extend(!0,e,i),e}_t.href=kt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:kt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(kt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ft,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Bt(Bt(e,S.ajaxSettings),t):Bt(S.ajaxSettings,e)},ajaxPrefilter:zt(It),ajaxTransport:zt(Rt),ajax:function(e,t){"object"===_typeof(e)&&(t=e,e=void 0);var l,c,u,n,d,p,f,i,o,h=S.ajaxSetup({},t=t||{}),g=h.context||h,m=h.context&&(g.nodeType||g.jquery)?S(g):S.event,v=S.Deferred(),y=S.Callbacks("once memory"),b=h.statusCode||{},r={},s={},a="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(p){if(!n)for(n={};t=qt.exec(u);)n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return p?u:null},setRequestHeader:function(e,t){return null==p&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==p&&(h.mimeType=e),this},statusCode:function(e){if(e)if(p)x.always(e[x.status]);else for(var t in e)b[t]=[b[t],e[t]];return this},abort:function(e){e=e||a;return l&&l.abort(e),w(0,e),this}};if(v.promise(x),h.url=((e||h.url||kt.href)+"").replace(Mt,kt.protocol+"//"),h.type=t.method||t.type||h.method||h.type,h.dataTypes=(h.dataType||"*").toLowerCase().match(H)||[""],null==h.crossDomain){o=C.createElement("a");try{o.href=h.url,o.href=o.href,h.crossDomain=_t.protocol+"//"+_t.host!=o.protocol+"//"+o.host}catch(e){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=S.param(h.data,h.traditional)),Wt(It,h,t,x),p)return x;for(i in(f=S.event&&h.global)&&0==S.active++&&S.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!Ot.test(h.type),c=h.url.replace(Nt,""),h.hasContent?h.data&&h.processData&&0===(h.contentType||"").indexOf("application/x-www-form-urlencoded")&&(h.data=h.data.replace(jt,"+")):(o=h.url.slice(c.length),h.data&&(h.processData||"string"==typeof h.data)&&(c+=(At.test(c)?"&":"?")+h.data,delete h.data),!1===h.cache&&(c=c.replace(Ht,"$1"),o=(At.test(c)?"&":"?")+"_="+$t.guid+++o),h.url=c+o),h.ifModified&&(S.lastModified[c]&&x.setRequestHeader("If-Modified-Since",S.lastModified[c]),S.etag[c]&&x.setRequestHeader("If-None-Match",S.etag[c])),(h.data&&h.hasContent&&!1!==h.contentType||t.contentType)&&x.setRequestHeader("Content-Type",h.contentType),x.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+Ft+"; q=0.01":""):h.accepts["*"]),h.headers)x.setRequestHeader(i,h.headers[i]);if(h.beforeSend&&(!1===h.beforeSend.call(g,x,h)||p))return x.abort();if(a="abort",y.add(h.complete),x.done(h.success),x.fail(h.error),l=Wt(Rt,h,t,x)){if(x.readyState=1,f&&m.trigger("ajaxSend",[x,h]),p)return x;h.async&&0<h.timeout&&(d=T.setTimeout(function(){x.abort("timeout")},h.timeout));try{p=!1,l.send(r,w)}catch(e){if(p)throw e;w(-1,e)}}else w(-1,"No Transport");function w(e,t,n,i){var o,r,s,a=t;p||(p=!0,d&&T.clearTimeout(d),l=void 0,u=i||"",x.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){for(var i,o,r,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)r=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}s=s||o}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}(h,x,n)),!i&&-1<S.inArray("script",h.dataTypes)&&S.inArray("json",h.dataTypes)<0&&(h.converters["text script"]=function(){}),s=function(e,t,n,i){var o,r,s,a,l,c={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(o in c)if((a=o.split(" "))[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){!0===s?s=c[o]:!0!==c[o]&&(r=a[0],u.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(h,s,x,i),i?(h.ifModified&&((n=x.getResponseHeader("Last-Modified"))&&(S.lastModified[c]=n),(n=x.getResponseHeader("etag"))&&(S.etag[c]=n)),204===e||"HEAD"===h.type?a="nocontent":304===e?a="notmodified":(a=s.state,o=s.data,i=!(r=s.error))):(r=a,!e&&a||(a="error",e<0&&(e=0))),x.status=e,x.statusText=(t||a)+"",i?v.resolveWith(g,[o,a,x]):v.rejectWith(g,[x,a,r]),x.statusCode(b),b=void 0,f&&m.trigger(i?"ajaxSuccess":"ajaxError",[x,h,i?o:r]),y.fireWith(g,[x,a]),f&&(m.trigger("ajaxComplete",[x,h]),--S.active||S.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,n){return S.get(e,t,n,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,o){S[o]=function(e,t,n,i){return b(t)&&(i=i||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:o,dataType:i,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){for(var t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),S._evalUrl=function(e,t,n){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t,n)}})},S.fn.extend({wrapAll:function(e){return this[0]&&(b(e)&&(e=e.call(this[0])),e=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return b(n)?this.each(function(e){S(this).wrapInner(n.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=b(t);return this.each(function(e){S(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new T.XMLHttpRequest}catch(e){}};var Xt={0:200,1223:204},Yt=S.ajaxSettings.xhr();y.cors=!!Yt&&"withCredentials"in Yt,y.ajax=Yt=!!Yt,S.ajaxTransport(function(o){var r,s;if(y.cors||Yt&&!o.crossDomain)return{send:function(e,t){var n,i=o.xhr();if(i.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(n in o.xhrFields)i[n]=o.xhrFields[n];for(n in o.mimeType&&i.overrideMimeType&&i.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)i.setRequestHeader(n,e[n]);r=function(e){return function(){r&&(r=s=i.onload=i.onerror=i.onabort=i.ontimeout=i.onreadystatechange=null,"abort"===e?i.abort():"error"===e?"number"!=typeof i.status?t(0,"error"):t(i.status,i.statusText):t(Xt[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=r(),s=i.onerror=i.ontimeout=r("error"),void 0!==i.onabort?i.onabort=s:i.onreadystatechange=function(){4===i.readyState&&T.setTimeout(function(){r&&s()})},r=r("abort");try{i.send(o.hasContent&&o.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(n){var i,o;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){i=S("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",o=function(e){i.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(i[0])},abort:function(){o&&o()}}});var Ut,Vt=[],Gt=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Vt.pop()||S.expando+"_"+$t.guid++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,n){var i,o,r,s=!1!==e.jsonp&&(Gt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gt.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Gt,"$1"+i):!1!==e.jsonp&&(e.url+=(At.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return r||S.error(i+" was not called"),r[0]},e.dataTypes[0]="json",o=T[i],T[i]=function(){r=arguments},n.always(function(){void 0===o?S(T).removeProp(i):T[i]=o,e[i]&&(e.jsonpCallback=t.jsonpCallback,Vt.push(i)),r&&b(o)&&o(r[0]),r=o=void 0}),"script"}),y.createHTMLDocument=((Ut=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ut.childNodes.length),S.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((i=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(i)):t=C),i=!n&&[],(n=A.exec(e))?[t.createElement(n[1])]:(n=me([e],t,i),i&&i.length&&S(i).remove(),S.merge([],n.childNodes)));var i},S.fn.load=function(e,t,n){var i,o,r,s=this,a=e.indexOf(" ");return-1<a&&(i=bt(e.slice(a)),e=e.slice(0,a)),b(t)?(n=t,t=void 0):t&&"object"===_typeof(t)&&(o="POST"),0<s.length&&S.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?S("<div>").append(S.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,n){var i,o,r,s,a=S.css(e,"position"),l=S(e),c={};"static"===a&&(e.style.position="relative"),r=l.offset(),i=S.css(e,"top"),s=S.css(e,"left"),s=("absolute"===a||"fixed"===a)&&-1<(i+s).indexOf("auto")?(o=(a=l.position()).top,a.left):(o=parseFloat(i)||0,parseFloat(s)||0),null!=(t=b(t)?t.call(e,n,S.extend({},r)):t).top&&(c.top=t.top-r.top+o),null!=t.left&&(c.left=t.left-r.left+s),"using"in t?t.using.call(e,c):l.css(c)}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),n=n.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,i=this[0],o={top:0,left:0};if("fixed"===S.css(i,"position"))t=i.getBoundingClientRect();else{for(t=this.offset(),n=i.ownerDocument,e=i.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===S.css(e,"position");)e=e.parentNode;e&&e!==i&&1===e.nodeType&&((o=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),o.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-o.top-S.css(i,"marginTop",!0),left:t.left-o.left-S.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===S.css(e,"position");)e=e.offsetParent;return e||ne})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var r="pageYOffset"===o;S.fn[t]=function(e){return _(this,function(e,t,n){var i;return g(e)?i=e:9===e.nodeType&&(i=e.defaultView),void 0===n?i?i[o]:e[t]:void(i?i.scrollTo(r?i.pageXOffset:n,r?n:i.pageYOffset):e[t]=n)},t,e,arguments.length)}}),S.each(["top","left"],function(e,n){S.cssHooks[n]=Ue(y.pixelPosition,function(e,t){if(t)return t=Ye(e,n),_e.test(t)?S(e).position()[n]+"px":t})}),S.each({Height:"height",Width:"width"},function(s,a){S.each({padding:"inner"+s,content:a,"":"outer"+s},function(i,r){S.fn[r]=function(e,t){var n=arguments.length&&(i||"boolean"!=typeof e),o=i||(!0===e||!0===t?"margin":"border");return _(this,function(e,t,n){var i;return g(e)?0===r.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+s],i["scroll"+s],e.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?S.css(e,t,o):S.style(e,t,n,o)},a,n?e:void 0,n)}})}),S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){S.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Qt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;S.proxy=function(e,t){var n,i;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return n=a.call(arguments,2),(i=function(){return e.apply(t||this,n.concat(a.call(arguments)))}).guid=e.guid=e.guid||S.guid++,i},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=$,S.isFunction=b,S.isWindow=g,S.camelCase=X,S.type=h,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?"":(e+"").replace(Qt,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var Zt=T.jQuery,Kt=T.$;return S.noConflict=function(e){return T.$===S&&(T.$=Kt),e&&T.jQuery===S&&(T.jQuery=Zt),S},void 0===e&&(T.jQuery=T.$=S),S}),$(".sizes__item").click(function(e){e=$(e.currentTarget).find(".sizes__item-desc");$(e).hasClass("active")?($(".sizes__item-desc").removeClass("active"),e.addClass("active"),$(e).hasClass("active")&&e.toggleClass("active")):($(".sizes__item-desc").removeClass("active"),e.addClass("active"))}),$(document).ready(function(){var n=document.querySelector(".form");document.querySelector(".form__btn");n.addEventListener("submit",function(e){var t;e.preventDefault(),console.log("e"),function(e){var t,n=_createForOfIteratorHelper(e.elements);try{for(n.s();!(t=n.n()).done;)if(!function(e){return e.value||"button"===e.tagName?(e.classList.remove("false"),!0):(e.classList.add("false"),!1)}(t.value))return!1}catch(e){n.e(e)}finally{n.f()}return!0}(n)&&(e={name:n.elements.name.value,phone:n.elements.phone.value,comment:n.elements.comment.value,to:"test@mail.ru"},(t=new XMLHttpRequest).responseType="json",t.open("POST","https://webdev-api.loftschool.com/sendmail"),t.setRequestHeader("content-type","application/json"),t.send(JSON.stringify(e)),t.addEventListener("load",function(){$.fancybox.open({src:"#modal"}),t.response.status?($(".modal__title").text(t.response.message),console.log("ok")):($(".modal__title").text(t.response.message),console.log("ne ok"))}))}),$(".btn__modal-js").click(function(e){e.preventDefault(),$.fancybox.close()})}),$(document).ready(function(){$(".interactive-avatar__link").on("click",function(e){var t=$(e.currentTarget),e=t.attr("data-open");console.log(e);var n,e=(n=e,$(".reviews__display-inner").filter(function(e,t){return $(t).attr("data-item")===n})),t=t.closest(".interactive-avatar");e.addClass("active").siblings().removeClass("active"),t.addClass("active").siblings().removeClass("active")})}),function(e,t){"object"==("undefined"==typeof module?"undefined":_typeof(module))&&"object"==_typeof(module.exports)?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:void 0,function(T,e){function g(e){return null!=e&&e===e.window}var t=[],n=Object.getPrototypeOf,a=t.slice,m=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,o=t.indexOf,i={},r=i.toString,v=i.hasOwnProperty,s=v.toString,c=s.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},C=T.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,n){var i,o,r=(n=n||C).createElement("script");if(r.text=e,t)for(i in u)(o=t[i]||t.getAttribute&&t.getAttribute(i))&&r.setAttribute(i,o);n.head.appendChild(r).parentNode.removeChild(r)}function h(e){return null==e?e+"":"object"==_typeof(e)||"function"==typeof e?i[r.call(e)]||"object":_typeof(e)}var S=function e(t,n){return new e.fn.init(t,n)};function d(e){var t=!!e&&"length"in e&&e.length,n=h(e);return!b(e)&&!g(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:"3.6.0",constructor:S,length:0,toArray:function(){return a.call(this)},get:function(e){return null==e?a.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){e=S.merge(this.constructor(),e);return e.prevObject=this,e},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,e=+e+(e<0?t:0);return this.pushStack(0<=e&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,i,o,r=arguments[0]||{},s=1,a=arguments.length,l=!1;for("boolean"==typeof r&&(l=r,r=arguments[s]||{},s++),"object"==_typeof(r)||b(r)||(r={}),s===a&&(r=this,s--);s<a;s++)if(null!=(e=arguments[s]))for(t in e)n=e[t],"__proto__"!==t&&r!==n&&(l&&n&&(S.isPlainObject(n)||(i=Array.isArray(n)))?(o=r[t],o=i&&!Array.isArray(o)?[]:i||S.isPlainObject(o)?o:{},i=!1,r[t]=S.extend(l,o,n)):void 0!==n&&(r[t]=n));return r},S.extend({expando:"jQuery"+("3.6.0"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){return!(!e||"[object Object]"!==r.call(e)||(e=n(e))&&("function"!=typeof(e=v.call(e,"constructor")&&e.constructor)||s.call(e)!==c))},isEmptyObject:function(e){for(var t in e)return!1;return!0},globalEval:function(e,t,n){x(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,i=0;if(d(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},makeArray:function(e,t){t=t||[];return null!=e&&(d(Object(e))?S.merge(t,"string"==typeof e?[e]:e):l.call(t,e)),t},inArray:function(e,t,n){return null==t?-1:o.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,o=e.length;i<n;i++)e[o++]=t[i];return e.length=o,e},grep:function(e,t,n){for(var i=[],o=0,r=e.length,s=!n;o<r;o++)!t(e[o],o)!=s&&i.push(e[o]);return i},map:function(e,t,n){var i,o,r=0,s=[];if(d(e))for(i=e.length;r<i;r++)null!=(o=t(e[r],r,n))&&s.push(o);else for(r in e)null!=(o=t(e[r],r,n))&&s.push(o);return m(s)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var p=function(n){function d(e,t){return e="0x"+e.slice(1)-65536,t||(e<0?String.fromCharCode(65536+e):String.fromCharCode(e>>10|55296,1023&e|56320))}function i(){T()}var e,p,x,r,o,f,h,g,w,l,c,T,C,s,S,m,a,u,v,k="sizzle"+ +new Date,y=n.document,$=0,b=0,A=le(),E=le(),P=le(),D=le(),L=function(e,t){return e===t&&(c=!0),0},j={}.hasOwnProperty,t=[],N=t.pop,H=t.push,q=t.push,O=t.slice,M=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},I="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",F="(?:\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",_="\\["+R+"*("+F+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+F+"))|)"+R+"*\\]",z=":("+F+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+_+")*)|.*)\\)|)",W=new RegExp(R+"+","g"),B=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),X=new RegExp("^"+R+"*,"+R+"*"),Y=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),U=new RegExp(R+"|>"),V=new RegExp(z),G=new RegExp("^"+F+"$"),Q={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),TAG:new RegExp("^("+F+"|[*])"),ATTR:new RegExp("^"+_),PSEUDO:new RegExp("^"+z),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+I+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},Z=/HTML$/i,K=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ne=/[+~]/,ie=new RegExp("\\\\[\\da-fA-F]{1,6}"+R+"?|\\\\([^\\r\\n\\f])","g"),oe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},se=ye(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{q.apply(t=O.call(y.childNodes),y.childNodes),t[y.childNodes.length].nodeType}catch(e){q={apply:t.length?function(e,t){H.apply(e,O.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function ae(e,t,n,i){var o,r,s,a,l,c,u=t&&t.ownerDocument,d=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==d&&9!==d&&11!==d)return n;if(!i&&(T(t),t=t||C,S)){if(11!==d&&(a=te.exec(e)))if(c=a[1]){if(9===d){if(!(r=t.getElementById(c)))return n;if(r.id===c)return n.push(r),n}else if(u&&(r=u.getElementById(c))&&v(t,r)&&r.id===c)return n.push(r),n}else{if(a[2])return q.apply(n,t.getElementsByTagName(e)),n;if((c=a[3])&&p.getElementsByClassName&&t.getElementsByClassName)return q.apply(n,t.getElementsByClassName(c)),n}if(p.qsa&&!D[e+" "]&&(!m||!m.test(e))&&(1!==d||"object"!==t.nodeName.toLowerCase())){if(c=e,u=t,1===d&&(U.test(e)||Y.test(e))){for((u=ne.test(e)&&ge(t.parentNode)||t)===t&&p.scope||((s=t.getAttribute("id"))?s=s.replace(oe,re):t.setAttribute("id",s=k)),o=(l=f(e)).length;o--;)l[o]=(s?"#"+s:":scope")+" "+ve(l[o]);c=l.join(",")}try{return q.apply(n,u.querySelectorAll(c)),n}catch(t){D(e,!0)}finally{s===k&&t.removeAttribute("id")}}}return g(e.replace(B,"$1"),t,n,i)}function le(){var i=[];return function e(t,n){return i.push(t+" ")>x.cacheLength&&delete e[i.shift()],e[t+" "]=n}}function ce(e){return e[k]=!0,e}function ue(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var n=e.split("|"),i=n.length;i--;)x.attrHandle[n[i]]=t}function pe(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function fe(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&se(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function he(s){return ce(function(r){return r=+r,ce(function(e,t){for(var n,i=s([],e.length,r),o=i.length;o--;)e[n=i[o]]&&(e[n]=!(t[n]=e[n]))})})}function ge(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=ae.support={},o=ae.isXML=function(e){var t=e&&e.namespaceURI,e=e&&(e.ownerDocument||e).documentElement;return!Z.test(t||e&&e.nodeName||"HTML")},T=ae.setDocument=function(e){var t,e=e?e.ownerDocument||e:y;return e!=C&&9===e.nodeType&&e.documentElement&&(s=(C=e).documentElement,S=!o(C),y!=C&&(t=C.defaultView)&&t.top!==t&&(t.addEventListener?t.addEventListener("unload",i,!1):t.attachEvent&&t.attachEvent("onunload",i)),p.scope=ue(function(e){return s.appendChild(e).appendChild(C.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),p.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=ue(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(C.getElementsByClassName),p.getById=ue(function(e){return s.appendChild(e).id=k,!C.getElementsByName||!C.getElementsByName(k).length}),p.getById?(x.filter.ID=function(e){var t=e.replace(ie,d);return function(e){return e.getAttribute("id")===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&S){e=t.getElementById(e);return e?[e]:[]}}):(x.filter.ID=function(e){var t=e.replace(ie,d);return function(e){e=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return e&&e.value===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&S){var n,i,o,r=t.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(o=t.getElementsByName(e),i=0;r=o[i++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),x.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],o=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;n=r[o++];)1===n.nodeType&&i.push(n);return i},x.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&S)return t.getElementsByClassName(e)},a=[],m=[],(p.qsa=ee.test(C.querySelectorAll))&&(ue(function(e){var t;s.appendChild(e).innerHTML="<a id='"+k+"'></a><select id='"+k+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+R+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+R+"*(?:value|"+I+")"),e.querySelectorAll("[id~="+k+"-]").length||m.push("~="),(t=C.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||m.push("\\["+R+"*name"+R+"*="+R+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+k+"+*").length||m.push(".#.+[+~]"),e.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+R+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),s.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")})),(p.matchesSelector=ee.test(u=s.matches||s.webkitMatchesSelector||s.mozMatchesSelector||s.oMatchesSelector||s.msMatchesSelector))&&ue(function(e){p.disconnectedMatch=u.call(e,"*"),u.call(e,"[s!='']:x"),a.push("!=",z)}),m=m.length&&new RegExp(m.join("|")),a=a.length&&new RegExp(a.join("|")),t=ee.test(s.compareDocumentPosition),v=t||ee.test(s.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,t=t&&t.parentNode;return e===t||!(!t||1!==t.nodeType||!(n.contains?n.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},L=t?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==y&&v(y,e)?-1:t==C||t.ownerDocument==y&&v(y,t)?1:l?M(l,e)-M(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,i=0,o=e.parentNode,r=t.parentNode,s=[e],a=[t];if(!o||!r)return e==C?-1:t==C?1:o?-1:r?1:l?M(l,e)-M(l,t):0;if(o===r)return pe(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)a.unshift(n);for(;s[i]===a[i];)i++;return i?pe(s[i],a[i]):s[i]==y?-1:a[i]==y?1:0}),C},ae.matches=function(e,t){return ae(e,null,null,t)},ae.matchesSelector=function(e,t){if(T(e),p.matchesSelector&&S&&!D[t+" "]&&(!a||!a.test(t))&&(!m||!m.test(t)))try{var n=u.call(e,t);if(n||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){D(t,!0)}return 0<ae(t,C,null,[e]).length},ae.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),v(e,t)},ae.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=x.attrHandle[t.toLowerCase()],n=n&&j.call(x.attrHandle,t.toLowerCase())?n(e,t,!S):void 0;return void 0!==n?n:p.attributes||!S?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},ae.escape=function(e){return(e+"").replace(oe,re)},ae.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ae.uniqueSort=function(e){var t,n=[],i=0,o=0;if(c=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(L),c){for(;t=e[o++];)t===e[o]&&(i=n.push(o));for(;i--;)e.splice(n[i],1)}return l=null,e},r=ae.getText=function(e){var t,n="",i=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},(x=ae.selectors={cacheLength:50,createPseudo:ce,match:Q,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ie,d),e[3]=(e[3]||e[4]||e[5]||"").replace(ie,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||ae.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&ae.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return Q.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&V.test(n)&&(t=f(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ie,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=A[e+" "];return t||(t=new RegExp("(^|"+R+")"+e+"("+R+"|$)"))&&A(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(e){e=ae.attr(e,t);return null==e?"!="===n:!n||(e+="","="===n?e===i:"!="===n?e!==i:"^="===n?i&&0===e.indexOf(i):"*="===n?i&&-1<e.indexOf(i):"$="===n?i&&e.slice(-i.length)===i:"~="===n?-1<(" "+e.replace(W," ")+" ").indexOf(i):"|="===n&&(e===i||e.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,m){var v="nth"!==h.slice(0,3),y="last"!==h.slice(-4),b="of-type"===e;return 1===g&&0===m?function(e){return!!e.parentNode}:function(e,t,n){var i,o,r,s,a,l,c=v!=y?"nextSibling":"previousSibling",u=e.parentNode,d=b&&e.nodeName.toLowerCase(),p=!n&&!b,f=!1;if(u){if(v){for(;c;){for(s=e;s=s[c];)if(b?s.nodeName.toLowerCase()===d:1===s.nodeType)return!1;l=c="only"===h&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&p){for(f=(a=(i=(o=(r=(s=u)[k]||(s[k]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]||[])[0]===$&&i[1])&&i[2],s=a&&u.childNodes[a];s=++a&&s&&s[c]||(f=a=0)||l.pop();)if(1===s.nodeType&&++f&&s===e){o[h]=[$,a,f];break}}else if(!1===(f=p?a=(i=(o=(r=(s=e)[k]||(s[k]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]||[])[0]===$&&i[1]:f))for(;(s=++a&&s&&s[c]||(f=a=0)||l.pop())&&((b?s.nodeName.toLowerCase()!==d:1!==s.nodeType)||!++f||(p&&((o=(r=s[k]||(s[k]={}))[s.uniqueID]||(r[s.uniqueID]={}))[h]=[$,f]),s!==e)););return(f-=m)===g||f%g==0&&0<=f/g}}},PSEUDO:function(e,r){var t,s=x.pseudos[e]||x.setFilters[e.toLowerCase()]||ae.error("unsupported pseudo: "+e);return s[k]?s(r):1<s.length?(t=[e,e,"",r],x.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var n,i=s(e,r),o=i.length;o--;)e[n=M(e,i[o])]=!(t[n]=i[o])}):function(e){return s(e,0,t)}):s}},pseudos:{not:ce(function(e){var i=[],o=[],a=h(e.replace(B,"$1"));return a[k]?ce(function(e,t,n,i){for(var o,r=a(e,null,i,[]),s=e.length;s--;)(o=r[s])&&(e[s]=!(t[s]=o))}):function(e,t,n){return i[0]=e,a(i,null,n,o),i[0]=null,!o.pop()}}),has:ce(function(t){return function(e){return 0<ae(t,e).length}}),contains:ce(function(t){return t=t.replace(ie,d),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:ce(function(n){return G.test(n||"")||ae.error("unsupported lang: "+n),n=n.replace(ie,d).toLowerCase(),function(e){var t;do{if(t=S?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===s},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:fe(!1),disabled:fe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return K.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(e=e.getAttribute("type"))||"text"===e.toLowerCase())},first:he(function(){return[0]}),last:he(function(e,t){return[t-1]}),eq:he(function(e,t,n){return[n<0?n+t:n]}),even:he(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:he(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:he(function(e,t,n){for(var i=n<0?n+t:t<n?t:n;0<=--i;)e.push(i);return e}),gt:he(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=x.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})x.pseudos[e]=function(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}(e);function me(){}function ve(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function ye(s,e,t){var a=e.dir,l=e.next,c=l||a,u=t&&"parentNode"===c,d=b++;return e.first?function(e,t,n){for(;e=e[a];)if(1===e.nodeType||u)return s(e,t,n);return!1}:function(e,t,n){var i,o,r=[$,d];if(n){for(;e=e[a];)if((1===e.nodeType||u)&&s(e,t,n))return!0}else for(;e=e[a];)if(1===e.nodeType||u)if(i=(o=e[k]||(e[k]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[a]||e;else{if((o=i[c])&&o[0]===$&&o[1]===d)return r[2]=o[2];if((i[c]=r)[2]=s(e,t,n))return!0}return!1}}function be(o){return 1<o.length?function(e,t,n){for(var i=o.length;i--;)if(!o[i](e,t,n))return!1;return!0}:o[0]}function xe(e,t,n,i,o){for(var r,s=[],a=0,l=e.length,c=null!=t;a<l;a++)(r=e[a])&&(n&&!n(r,i,o)||(s.push(r),c&&t.push(a)));return s}function we(e){for(var i,t,n,o=e.length,r=x.relative[e[0].type],s=r||x.relative[" "],a=r?1:0,l=ye(function(e){return e===i},s,!0),c=ye(function(e){return-1<M(i,e)},s,!0),u=[function(e,t,n){n=!r&&(n||t!==w)||((i=t).nodeType?l:c)(e,t,n);return i=null,n}];a<o;a++)if(t=x.relative[e[a].type])u=[ye(be(u),t)];else{if((t=x.filter[e[a].type].apply(null,e[a].matches))[k]){for(n=++a;n<o&&!x.relative[e[n].type];n++);return function e(f,h,g,m,v,t){return m&&!m[k]&&(m=e(m)),v&&!v[k]&&(v=e(v,t)),ce(function(e,t,n,i){var o,r,s,a=[],l=[],c=t.length,u=e||function(e,t,n){for(var i=0,o=t.length;i<o;i++)ae(e,t[i],n);return n}(h||"*",n.nodeType?[n]:n,[]),d=!f||!e&&h?u:xe(u,a,f,n,i),p=g?v||(e?f:c||m)?[]:t:d;if(g&&g(d,p,n,i),m)for(o=xe(p,l),m(o,[],n,i),r=o.length;r--;)(s=o[r])&&(p[l[r]]=!(d[l[r]]=s));if(e){if(v||f){if(v){for(o=[],r=p.length;r--;)(s=p[r])&&o.push(d[r]=s);v(null,p=[],o,i)}for(r=p.length;r--;)(s=p[r])&&-1<(o=v?M(e,s):a[r])&&(e[o]=!(t[o]=s))}}else p=xe(p===t?p.splice(c,p.length):p),v?v(null,t,p,i):q.apply(t,p)})}(1<a&&be(u),1<a&&ve(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(B,"$1"),t,a<n&&we(e.slice(a,n)),n<o&&we(e=e.slice(n)),n<o&&ve(e))}u.push(t)}return be(u)}return me.prototype=x.filters=x.pseudos,x.setFilters=new me,f=ae.tokenize=function(e,t){var n,i,o,r,s,a,l,c=E[e+" "];if(c)return t?0:c.slice(0);for(s=e,a=[],l=x.preFilter;s;){for(r in n&&!(i=X.exec(s))||(i&&(s=s.slice(i[0].length)||s),a.push(o=[])),n=!1,(i=Y.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(B," ")}),s=s.slice(n.length)),x.filter)!(i=Q[r].exec(s))||l[r]&&!(i=l[r](i))||(n=i.shift(),o.push({value:n,type:r,matches:i}),s=s.slice(n.length));if(!n)break}return t?s.length:s?ae.error(e):E(e,a).slice(0)},h=ae.compile=function(e,t){var n,m,v,y,b,i,o=[],r=[],s=P[e+" "];if(!s){for(n=(t=t||f(e)).length;n--;)((s=we(t[n]))[k]?o:r).push(s);(s=P(e,(y=0<(v=o).length,b=0<(m=r).length,i=function(e,t,n,i,o){var r,s,a,l=0,c="0",u=e&&[],d=[],p=w,f=e||b&&x.find.TAG("*",o),h=$+=null==p?1:Math.random()||.1,g=f.length;for(o&&(w=t==C||t||o);c!==g&&null!=(r=f[c]);c++){if(b&&r){for(s=0,t||r.ownerDocument==C||(T(r),n=!S);a=m[s++];)if(a(r,t||C,n)){i.push(r);break}o&&($=h)}y&&((r=!a&&r)&&l--,e&&u.push(r))}if(l+=c,y&&c!==l){for(s=0;a=v[s++];)a(u,d,t,n);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=N.call(i));d=xe(d)}q.apply(i,d),o&&!e&&0<d.length&&1<l+v.length&&ae.uniqueSort(i)}return o&&($=h,w=p),u},y?ce(i):i))).selector=e}return s},g=ae.select=function(e,t,n,i){var o,r,s,a,l,c="function"==typeof e&&e,u=!i&&f(e=c.selector||e);if(n=n||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(s=r[0]).type&&9===t.nodeType&&S&&x.relative[r[1].type]){if(!(t=(x.find.ID(s.matches[0].replace(ie,d),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(o=Q.needsContext.test(e)?0:r.length;o--&&(s=r[o],!x.relative[a=s.type]);)if((l=x.find[a])&&(i=l(s.matches[0].replace(ie,d),ne.test(r[0].type)&&ge(t.parentNode)||t))){if(r.splice(o,1),!(e=i.length&&ve(r)))return q.apply(n,i),n;break}}return(c||h(e,u))(i,t,!S,n,!t||ne.test(e)&&ge(t.parentNode)||t),n},p.sortStable=k.split("").sort(L).join("")===k,p.detectDuplicates=!!c,T(),p.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||de(I,function(e,t,n){if(!n)return!0===e[t]?t.toLowerCase():(t=e.getAttributeNode(t))&&t.specified?t.value:null}),ae}(T);S.find=p,S.expr=p.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=p.uniqueSort,S.text=p.getText,S.isXMLDoc=p.isXML,S.contains=p.contains,S.escapeSelector=p.escape;function f(e,t,n){for(var i=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&S(e).is(n))break;i.push(e)}return i}function w(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}var k=S.expr.match.needsContext;function $(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var A=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function E(e,n,i){return b(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==i}):n.nodeType?S.grep(e,function(e){return e===n!==i}):"string"!=typeof n?S.grep(e,function(e){return-1<o.call(n,e)!==i}):S.filter(n,e,i)}S.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?S.find.matchesSelector(i,e)?[i]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,i=this.length,o=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<i;t++)if(S.contains(o[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)S.find(e,o[t],n);return 1<i?S.uniqueSort(n):n},filter:function(e){return this.pushStack(E(this,e||[],!1))},not:function(e){return this.pushStack(E(this,e||[],!0))},is:function(e){return!!E(this,"string"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var P=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,n){if(!e)return this;if(n=n||D,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this);if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:P.exec(e))||!i[1]&&t)return(!t||t.jquery?t||n:this.constructor(t)).find(e);if(i[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),A.test(i[1])&&S.isPlainObject(t))for(var i in t)b(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(e=C.getElementById(i[2]))&&(this[0]=e,this.length=1),this}).prototype=S.fn;var D=S(C),L=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function N(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,o=this.length,r=[],s="string"!=typeof e&&S(e);if(!k.test(e))for(;i<o;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?-1<s.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(1<r.length?S.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?o.call(S(e),this[0]):o.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){e=e.parentNode;return e&&11!==e.nodeType?e:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,n){return f(e,"parentNode",n)},next:function(e){return N(e,"nextSibling")},prev:function(e){return N(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,n){return f(e,"nextSibling",n)},prevUntil:function(e,t,n){return f(e,"previousSibling",n)},siblings:function(e){return w((e.parentNode||{}).firstChild,e)},children:function(e){return w(e.firstChild)},contents:function(e){return null!=e.contentDocument&&n(e.contentDocument)?e.contentDocument:($(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(i,o){S.fn[i]=function(e,t){var n=S.map(this,o,e);return(t="Until"!==i.slice(-5)?e:t)&&"string"==typeof t&&(n=S.filter(t,n)),1<this.length&&(j[i]||S.uniqueSort(n),L.test(i)&&n.reverse()),this.pushStack(n)}});var H=/[^\x20\t\r\n\f]+/g;function q(e){return e}function O(e){throw e}function M(e,t,n,i){var o;try{e&&b(o=e.promise)?o.call(e).done(t).fail(n):e&&b(o=e.then)?o.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(i){var n;i="string"==typeof i?(n={},S.each(i.match(H)||[],function(e,t){n[t]=!0}),n):S.extend({},i);function o(){for(s=s||i.once,t=r=!0;l.length;c=-1)for(e=l.shift();++c<a.length;)!1===a[c].apply(e[0],e[1])&&i.stopOnFalse&&(c=a.length,e=!1);i.memory||(e=!1),r=!1,s&&(a=e?[]:"")}var r,e,t,s,a=[],l=[],c=-1,u={add:function(){return a&&(e&&!r&&(c=a.length-1,l.push(e)),function n(e){S.each(e,function(e,t){b(t)?i.unique&&u.has(t)||a.push(t):t&&t.length&&"string"!==h(t)&&n(t)})}(arguments),e&&!r&&o()),this},remove:function(){return S.each(arguments,function(e,t){for(var n;-1<(n=S.inArray(t,a,n));)a.splice(n,1),n<=c&&c--}),this},has:function(e){return e?-1<S.inArray(e,a):0<a.length},empty:function(){return a=a&&[],this},disable:function(){return s=l=[],a=e="",this},disabled:function(){return!a},lock:function(){return s=l=[],e||r||(a=e=""),this},locked:function(){return!!s},fireWith:function(e,t){return s||(t=[e,(t=t||[]).slice?t.slice():t],l.push(t),r||o()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!t}};return u},S.extend({Deferred:function(e){var r=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],o="pending",s={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var o=arguments;return S.Deferred(function(i){S.each(r,function(e,t){var n=b(o[t[4]])&&o[t[4]];a[t[1]](function(){var e=n&&n.apply(this,arguments);e&&b(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[t[0]+"With"](this,n?[e]:arguments)})}),o=null}).promise()},then:function(t,n,i){var l=0;function c(o,r,s,a){return function(){function e(){var e,t;if(!(o<l)){if((e=s.apply(n,i))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==_typeof(e)||"function"==typeof e)&&e.then,b(t)?a?t.call(e,c(l,r,q,a),c(l,r,O,a)):(l++,t.call(e,c(l,r,q,a),c(l,r,O,a),c(l,r,q,r.notifyWith))):(s!==q&&(n=void 0,i=[e]),(a||r.resolveWith)(n,i))}}var n=this,i=arguments,t=a?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),l<=o+1&&(s!==O&&(n=void 0,i=[e]),r.rejectWith(n,i))}};o?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),T.setTimeout(t))}}return S.Deferred(function(e){r[0][3].add(c(0,e,b(i)?i:q,e.notifyWith)),r[1][3].add(c(0,e,b(t)?t:q)),r[2][3].add(c(0,e,b(n)?n:O))}).promise()},promise:function(e){return null!=e?S.extend(e,s):s}},a={};return S.each(r,function(e,t){var n=t[2],i=t[5];s[t[1]]=n.add,i&&n.add(function(){o=i},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),n.add(t[3].fire),a[t[0]]=function(){return a[t[0]+"With"](this===a?void 0:this,arguments),this},a[t[0]+"With"]=n.fireWith}),s.promise(a),e&&e.call(a,a),a},when:function(e){function t(t){return function(e){o[t]=this,r[t]=1<arguments.length?a.call(arguments):e,--n||s.resolveWith(o,r)}}var n=arguments.length,i=n,o=Array(i),r=a.call(arguments),s=S.Deferred();if(n<=1&&(M(e,s.done(t(i)).resolve,s.reject,!n),"pending"===s.state()||b(r[i]&&r[i].then)))return s.then();for(;i--;)M(r[i],t(i),s.reject);return s.promise()}});var I=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){T.console&&T.console.warn&&e&&I.test(e.name)&&T.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){T.setTimeout(function(){throw e})};var R=S.Deferred();function F(){C.removeEventListener("DOMContentLoaded",F),T.removeEventListener("load",F),S.ready()}S.fn.ready=function(e){return R.then(e).catch(function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||R.resolveWith(C,[S])}}),S.ready.then=R.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?T.setTimeout(S.ready):(C.addEventListener("DOMContentLoaded",F),T.addEventListener("load",F));function _(e,t,n,i,o,r,s){var a=0,l=e.length,c=null==n;if("object"===h(n))for(a in o=!0,n)_(e,t,a,n[a],!0,r,s);else if(void 0!==i&&(o=!0,b(i)||(s=!0),t=c?s?(t.call(e,i),null):(c=t,function(e,t,n){return c.call(S(e),n)}):t))for(;a<l;a++)t(e[a],n,s?i:i.call(e[a],a,t(e[a],n)));return o?e:c?t.call(e):l?t(e[0],n):r}var z=/^-ms-/,W=/-([a-z])/g;function B(e,t){return t.toUpperCase()}function X(e){return e.replace(z,"ms-").replace(W,B)}function Y(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function U(){this.expando=S.expando+U.uid++}U.uid=1,U.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,o=this.cache(e);if("string"==typeof t)o[X(t)]=n;else for(i in t)o[X(i)]=t[i];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in i?[t]:t.match(H)||[]).length;for(;n--;)delete i[t[n]]}void 0!==t&&!S.isEmptyObject(i)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){e=e[this.expando];return void 0!==e&&!S.isEmptyObject(e)}};var V=new U,G=new U,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function K(e,t,n){var i,o;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===(o=n)||"false"!==o&&("null"===o?null:o===+o+""?+o:Q.test(o)?JSON.parse(o):o)}catch(e){}G.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return G.hasData(e)||V.hasData(e)},data:function(e,t,n){return G.access(e,t,n)},removeData:function(e,t){G.remove(e,t)},_data:function(e,t,n){return V.access(e,t,n)},_removeData:function(e,t){V.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,i,o,r=this[0],s=r&&r.attributes;if(void 0!==n)return"object"==_typeof(n)?this.each(function(){G.set(this,n)}):_(this,function(e){var t;return r&&void 0===e?void 0!==(t=G.get(r,n))||void 0!==(t=K(r,n))?t:void 0:void this.each(function(){G.set(this,n,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=G.get(r),1===r.nodeType&&!V.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(i=s[t].name).indexOf("data-")&&(i=X(i.slice(5)),K(r,i,o[i]));V.set(r,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){G.remove(this,e)})}}),S.extend({queue:function(e,t,n){var i;if(e)return i=V.get(e,t=(t||"fx")+"queue"),n&&(!i||Array.isArray(n)?i=V.access(e,t,S.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){var n=S.queue(e,t=t||"fx"),i=n.length,o=n.shift(),r=S._queueHooks(e,t);"inprogress"===o&&(o=n.shift(),i--),o&&("fx"===t&&n.unshift("inprogress"),delete r.stop,o.call(e,function(){S.dequeue(e,t)},r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return V.get(e,n)||V.access(e,n,{empty:S.Callbacks("once memory").add(function(){V.remove(e,[t+"queue",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--o||r.resolveWith(s,[s])}var i,o=1,r=S.Deferred(),s=this,a=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(i=V.get(s[a],e+"queueHooks"))&&i.empty&&(o++,i.empty.add(n));return n(),r.promise(t)}});var J=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ee=new RegExp("^(?:([+-])=|)("+J+")([a-z%]*)$","i"),te=["Top","Right","Bottom","Left"],ne=C.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};ne.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});function re(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ie(e)&&"none"===S.css(e,"display")}function se(e,t,n,i){var o,r,s=20,a=i?function(){return i.cur()}:function(){return S.css(e,t,"")},l=a(),c=n&&n[3]||(S.cssNumber[t]?"":"px"),u=e.nodeType&&(S.cssNumber[t]||"px"!==c&&+l)&&ee.exec(S.css(e,t));if(u&&u[3]!==c){for(c=c||u[3],u=+(l/=2)||1;s--;)S.style(e,t,u+c),(1-r)*(1-(r=a()/l||.5))<=0&&(s=0),u/=r;S.style(e,t,(u*=2)+c),n=n||[]}return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=o)),o}var ae={};function le(e,t){for(var n,i,o,r,s,a,l=[],c=0,u=e.length;c<u;c++)(i=e[c]).style&&(n=i.style.display,t?("none"===n&&(l[c]=V.get(i,"display")||null,l[c]||(i.style.display="")),""===i.style.display&&re(i)&&(l[c]=(a=r=o=void 0,r=i.ownerDocument,s=i.nodeName,(a=ae[s])||(o=r.body.appendChild(r.createElement(s)),a=S.css(o,"display"),o.parentNode.removeChild(o),ae[s]=a="none"===a?"block":a)))):"none"!==n&&(l[c]="none",V.set(i,"display",n)));for(c=0;c<u;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){re(this)?S(this).show():S(this).hide()})}});var ce=/^(?:checkbox|radio)$/i,ue=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,de=/^$|^module$|\/(?:java|ecma)script/i,pe=C.createDocumentFragment().appendChild(C.createElement("div"));(p=C.createElement("input")).setAttribute("type","radio"),p.setAttribute("checked","checked"),p.setAttribute("name","t"),pe.appendChild(p),y.checkClone=pe.cloneNode(!0).cloneNode(!0).lastChild.checked,pe.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!pe.cloneNode(!0).lastChild.defaultValue,pe.innerHTML="<option></option>",y.option=!!pe.lastChild;var fe={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function he(e,t){var n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&$(e,t)?S.merge([e],n):n}function ge(e,t){for(var n=0,i=e.length;n<i;n++)V.set(e[n],"globalEval",!t||V.get(t[n],"globalEval"))}fe.tbody=fe.tfoot=fe.colgroup=fe.caption=fe.thead,fe.th=fe.td,y.option||(fe.optgroup=fe.option=[1,"<select multiple='multiple'>","</select>"]);var me=/<|&#?\w+;/;function ve(e,t,n,i,o){for(var r,s,a,l,c,u=t.createDocumentFragment(),d=[],p=0,f=e.length;p<f;p++)if((r=e[p])||0===r)if("object"===h(r))S.merge(d,r.nodeType?[r]:r);else if(me.test(r)){for(s=s||u.appendChild(t.createElement("div")),a=(ue.exec(r)||["",""])[1].toLowerCase(),a=fe[a]||fe._default,s.innerHTML=a[1]+S.htmlPrefilter(r)+a[2],c=a[0];c--;)s=s.lastChild;S.merge(d,s.childNodes),(s=u.firstChild).textContent=""}else d.push(t.createTextNode(r));for(u.textContent="",p=0;r=d[p++];)if(i&&-1<S.inArray(r,i))o&&o.push(r);else if(l=ie(r),s=he(u.appendChild(r),"script"),l&&ge(s),n)for(c=0;r=s[c++];)de.test(r.type||"")&&n.push(r);return u}var ye=/^([^.]*)(?:\.(.+)|)/;function be(){return!0}function xe(){return!1}function we(e,t){return e===function(){try{return C.activeElement}catch(e){}}()==("focus"===t)}function Te(e,t,n,i,o,r){var s,a;if("object"==_typeof(t)){for(a in"string"!=typeof n&&(i=i||n,n=void 0),t)Te(e,a,n,i,t[a],r);return e}if(null==i&&null==o?(o=n,i=n=void 0):null==o&&("string"==typeof n?(o=i,i=void 0):(o=i,i=n,n=void 0)),!1===o)o=xe;else if(!o)return e;return 1===r&&(s=o,(o=function(e){return S().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=S.guid++)),e.each(function(){S.event.add(this,t,o,i,n)})}function Ce(e,o,r){r?(V.set(e,o,!1),S.event.add(e,o,{namespace:!1,handler:function(e){var t,n,i=V.get(this,o);if(1&e.isTrigger&&this[o]){if(i.length)(S.event.special[o]||{}).delegateType&&e.stopPropagation();else if(i=a.call(arguments),V.set(this,o,i),t=r(this,o),this[o](),i!==(n=V.get(this,o))||t?V.set(this,o,!1):n={},i!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else i.length&&(V.set(this,o,{value:S.event.trigger(S.extend(i[0],S.Event.prototype),i.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===V.get(e,o)&&S.event.add(e,o,be)}S.event={global:{},add:function(t,e,n,i,o){var r,s,a,l,c,u,d,p,f,h=V.get(t);if(Y(t))for(n.handler&&(n=(r=n).handler,o=r.selector),o&&S.find.matchesSelector(ne,o),n.guid||(n.guid=S.guid++),(a=h.events)||(a=h.events=Object.create(null)),(s=h.handle)||(s=h.handle=function(e){return void 0!==S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(H)||[""]).length;l--;)d=f=(c=ye.exec(e[l])||[])[1],p=(c[2]||"").split(".").sort(),d&&(u=S.event.special[d]||{},d=(o?u.delegateType:u.bindType)||d,u=S.event.special[d]||{},c=S.extend({type:d,origType:f,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&S.expr.match.needsContext.test(o),namespace:p.join(".")},r),(f=a[d])||((f=a[d]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,i,p,s)||t.addEventListener&&t.addEventListener(d,s)),u.add&&(u.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),o?f.splice(f.delegateCount++,0,c):f.push(c),S.event.global[d]=!0)},remove:function(e,t,n,i,o){var r,s,a,l,c,u,d,p,f,h,g,m=V.hasData(e)&&V.get(e);if(m&&(l=m.events)){for(c=(t=(t||"").match(H)||[""]).length;c--;)if(f=g=(a=ye.exec(t[c])||[])[1],h=(a[2]||"").split(".").sort(),f){for(d=S.event.special[f]||{},p=l[f=(i?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)u=p[r],!o&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(p.splice(r,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));s&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,h,m.handle)||S.removeEvent(e,f,m.handle),delete l[f])}else for(f in l)S.event.remove(e,f+t[c],n,i,!0);S.isEmptyObject(l)&&V.remove(e,"handle events")}},dispatch:function(e){var t,n,i,o,r,s=new Array(arguments.length),a=S.event.fix(e),l=(V.get(this,"events")||Object.create(null))[a.type]||[],e=S.event.special[a.type]||{};for(s[0]=a,t=1;t<arguments.length;t++)s[t]=arguments[t];if(a.delegateTarget=this,!e.preDispatch||!1!==e.preDispatch.call(this,a)){for(r=S.event.handlers.call(this,a,l),t=0;(i=r[t++])&&!a.isPropagationStopped();)for(a.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==o.namespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(o=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(a.result=o)&&(a.preventDefault(),a.stopPropagation()));return e.postDispatch&&e.postDispatch.call(this,a),a.result}},handlers:function(e,t){var n,i,o,r,s,a=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],s={},n=0;n<l;n++)void 0===s[o=(i=t[n]).selector+" "]&&(s[o]=i.needsContext?-1<S(o,this).index(c):S.find(o,this,null,[c]).length),s[o]&&r.push(i);r.length&&a.push({elem:c,handlers:r})}return c=this,l<t.length&&a.push({elem:c,handlers:t.slice(l)}),a},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){e=this||e;return ce.test(e.type)&&e.click&&$(e,"input")&&Ce(e,"click",be),!1},trigger:function(e){e=this||e;return ce.test(e.type)&&e.click&&$(e,"input")&&Ce(e,"click"),!0},_default:function(e){e=e.target;return ce.test(e.type)&&e.click&&$(e,"input")&&V.get(e,"click")||$(e,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?be:xe,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:xe,isPropagationStopped:xe,isImmediatePropagationStopped:xe,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=be,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=be,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=be,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return Ce(this,e,we),!1},trigger:function(){return Ce(this,e),!0},_default:function(){return!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){S.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=i.origType,t=i.handler.apply(this,arguments),e.type=o),t}}}),S.fn.extend({on:function(e,t,n,i){return Te(this,e,t,n,i)},one:function(e,t,n,i){return Te(this,e,t,n,i,1)},off:function(e,t,n){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,S(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"!=_typeof(e))return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=xe),this.each(function(){S.event.remove(this,e,n,t)});for(o in e)this.off(o,t,e[o]);return this}});var Se=/<script|<style|<link/i,ke=/checked\s*(?:[^=]|=\s*.checked.)/i,$e=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ae(e,t){return $(e,"table")&&$(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function Ee(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Pe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function De(e,t){var n,i,o,r;if(1===t.nodeType){if(V.hasData(e)&&(r=V.get(e).events))for(o in V.remove(t,"handle events"),r)for(n=0,i=r[o].length;n<i;n++)S.event.add(t,o,r[o][n]);G.hasData(e)&&(e=G.access(e),e=S.extend({},e),G.set(t,e))}}function Le(n,i,o,r){i=m(i);var e,t,s,a,l,c,u=0,d=n.length,p=d-1,f=i[0],h=b(f);if(h||1<d&&"string"==typeof f&&!y.checkClone&&ke.test(f))return n.each(function(e){var t=n.eq(e);h&&(i[0]=f.call(this,e,t.html())),Le(t,i,o,r)});if(d&&(t=(e=ve(i,n[0].ownerDocument,!1,n,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(a=(s=S.map(he(e,"script"),Ee)).length;u<d;u++)l=e,u!==p&&(l=S.clone(l,!0,!0),a&&S.merge(s,he(l,"script"))),o.call(n[u],l,u);if(a)for(c=s[s.length-1].ownerDocument,S.map(s,Pe),u=0;u<a;u++)l=s[u],de.test(l.type||"")&&!V.access(l,"globalEval")&&S.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&!l.noModule&&S._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):x(l.textContent.replace($e,""),l,c))}return n}function je(e,t,n){for(var i,o=t?S.filter(t,e):e,r=0;null!=(i=o[r]);r++)n||1!==i.nodeType||S.cleanData(he(i)),i.parentNode&&(n&&ie(i)&&ge(he(i,"script")),i.parentNode.removeChild(i));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var i,o,r,s,a,l,c,u=e.cloneNode(!0),d=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(s=he(u),i=0,o=(r=he(e)).length;i<o;i++)a=r[i],"input"===(c=(l=s[i]).nodeName.toLowerCase())&&ce.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(t)if(n)for(r=r||he(e),s=s||he(u),i=0,o=r.length;i<o;i++)De(r[i],s[i]);else De(e,u);return 0<(s=he(u,"script")).length&&ge(s,!d&&he(e,"script")),u},cleanData:function(e){for(var t,n,i,o=S.event.special,r=0;void 0!==(n=e[r]);r++)if(Y(n)){if(t=n[V.expando]){if(t.events)for(i in t.events)o[i]?S.event.remove(n,i):S.removeEvent(n,i,t.handle);n[V.expando]=void 0}n[G.expando]&&(n[G.expando]=void 0)}}}),S.fn.extend({detach:function(e){return je(this,e,!0)},remove:function(e){return je(this,e)},text:function(e){return _(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Le(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Ae(this,e).appendChild(e)})},prepend:function(){return Le(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Ae(this,e)).insertBefore(e,t.firstChild)})},before:function(){return Le(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Le(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(he(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return _(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Se.test(e)&&!fe[(ue.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(he(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Le(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(he(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){S.fn[e]=function(e){for(var t,n=[],i=S(e),o=i.length-1,r=0;r<=o;r++)t=r===o?this:this.clone(!0),S(i[r])[s](t),l.apply(n,t.get());return this.pushStack(n)}});function Ne(e,t,n){var i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in n=n.call(e),t)e.style[i]=o[i];return n}var He,qe,Oe,Me,Ie,Re,Fe,_e,ze=new RegExp("^("+J+")(?!px)[a-z%]+$","i"),We=function(e){var t=e.ownerDocument.defaultView;return(t=!t||!t.opener?T:t).getComputedStyle(e)},Be=new RegExp(te.join("|"),"i");function Xe(e,t,n){var i,o,r=e.style;return(n=n||We(e))&&(""!==(o=n.getPropertyValue(t)||n[t])||ie(e)||(o=S.style(e,t)),!y.pixelBoxStyles()&&ze.test(o)&&Be.test(t)&&(i=r.width,e=r.minWidth,t=r.maxWidth,r.minWidth=r.maxWidth=r.width=o,o=n.width,r.width=i,r.minWidth=e,r.maxWidth=t)),void 0!==o?o+"":o}function Ye(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}function Ue(){var e;_e&&(Fe.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",_e.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(Fe).appendChild(_e),e=T.getComputedStyle(_e),He="1%"!==e.top,Re=12===Ve(e.marginLeft),_e.style.right="60%",Me=36===Ve(e.right),qe=36===Ve(e.width),_e.style.position="absolute",Oe=12===Ve(_e.offsetWidth/3),ne.removeChild(Fe),_e=null)}function Ve(e){return Math.round(parseFloat(e))}Fe=C.createElement("div"),(_e=C.createElement("div")).style&&(_e.style.backgroundClip="content-box",_e.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===_e.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return Ue(),qe},pixelBoxStyles:function(){return Ue(),Me},pixelPosition:function(){return Ue(),He},reliableMarginLeft:function(){return Ue(),Re},scrollboxSize:function(){return Ue(),Oe},reliableTrDimensions:function(){var e,t,n;return null==Ie&&(e=C.createElement("table"),t=C.createElement("tr"),n=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",ne.appendChild(e).appendChild(t).appendChild(n),n=T.getComputedStyle(t),Ie=parseInt(n.height,10)+parseInt(n.borderTopWidth,10)+parseInt(n.borderBottomWidth,10)===t.offsetHeight,ne.removeChild(e)),Ie}}));var Ge=["Webkit","Moz","ms"],Qe=C.createElement("div").style,Ze={};function Ke(e){return S.cssProps[e]||Ze[e]||(e in Qe?e:Ze[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=Ge.length;n--;)if((e=Ge[n]+t)in Qe)return e}(e)||e)}var Je=/^(none|table(?!-c[ea]).+)/,et=/^--/,tt={position:"absolute",visibility:"hidden",display:"block"},nt={letterSpacing:"0",fontWeight:"400"};function it(e,t,n){var i=ee.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function ot(e,t,n,i,o,r){var s="width"===t?1:0,a=0,l=0;if(n===(i?"border":"content"))return 0;for(;s<4;s+=2)"margin"===n&&(l+=S.css(e,n+te[s],!0,o)),i?("content"===n&&(l-=S.css(e,"padding"+te[s],!0,o)),"margin"!==n&&(l-=S.css(e,"border"+te[s]+"Width",!0,o))):(l+=S.css(e,"padding"+te[s],!0,o),"padding"!==n?l+=S.css(e,"border"+te[s]+"Width",!0,o):a+=S.css(e,"border"+te[s]+"Width",!0,o));return!i&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-a-.5))||0),l}function rt(e,t,n){var i=We(e),o=(!y.boxSizingReliable()||n)&&"border-box"===S.css(e,"boxSizing",!1,i),r=o,s=Xe(e,t,i),a="offset"+t[0].toUpperCase()+t.slice(1);if(ze.test(s)){if(!n)return s;s="auto"}return(!y.boxSizingReliable()&&o||!y.reliableTrDimensions()&&$(e,"tr")||"auto"===s||!parseFloat(s)&&"inline"===S.css(e,"display",!1,i))&&e.getClientRects().length&&(o="border-box"===S.css(e,"boxSizing",!1,i),(r=a in e)&&(s=e[a])),(s=parseFloat(s)||0)+ot(e,t,n||(o?"border":"content"),r,i,s)+"px"}function st(e,t,n,i,o){return new st.prototype.init(e,t,n,i,o)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){e=Xe(e,"opacity");return""===e?"1":e}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,r,s,a=X(t),l=et.test(t),c=e.style;if(l||(t=Ke(a)),s=S.cssHooks[t]||S.cssHooks[a],void 0===n)return s&&"get"in s&&void 0!==(o=s.get(e,!1,i))?o:c[t];"string"===(r=_typeof(n))&&(o=ee.exec(n))&&o[1]&&(n=se(e,t,o),r="number"),null!=n&&n==n&&("number"!==r||l||(n+=o&&o[3]||(S.cssNumber[a]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(c[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l?c.setProperty(t,n):c[t]=n))}},css:function(e,t,n,i){var o,r=X(t);return et.test(t)||(t=Ke(r)),"normal"===(o=void 0===(o=(r=S.cssHooks[t]||S.cssHooks[r])&&"get"in r?r.get(e,!0,n):o)?Xe(e,t,i):o)&&t in nt&&(o=nt[t]),""===n||n?(t=parseFloat(o),!0===n||isFinite(t)?t||0:o):o}}),S.each(["height","width"],function(e,a){S.cssHooks[a]={get:function(e,t,n){if(t)return!Je.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?rt(e,a,n):Ne(e,tt,function(){return rt(e,a,n)})},set:function(e,t,n){var i,o=We(e),r=!y.scrollboxSize()&&"absolute"===o.position,s=(r||n)&&"border-box"===S.css(e,"boxSizing",!1,o),n=n?ot(e,a,n,s,o):0;return s&&r&&(n-=Math.ceil(e["offset"+a[0].toUpperCase()+a.slice(1)]-parseFloat(o[a])-ot(e,a,"border",!1,o)-.5)),n&&(i=ee.exec(t))&&"px"!==(i[3]||"px")&&(e.style[a]=t,t=S.css(e,a)),it(0,t,n)}}}),S.cssHooks.marginLeft=Ye(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Xe(e,"marginLeft"))||e.getBoundingClientRect().left-Ne(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(o,r){S.cssHooks[o+r]={expand:function(e){for(var t=0,n={},i="string"==typeof e?e.split(" "):[e];t<4;t++)n[o+te[t]+r]=i[t]||i[t-2]||i[0];return n}},"margin"!==o&&(S.cssHooks[o+r].set=it)}),S.fn.extend({css:function(e,t){return _(this,function(e,t,n){var i,o,r={},s=0;if(Array.isArray(t)){for(i=We(e),o=t.length;s<o;s++)r[t[s]]=S.css(e,t[s],!1,i);return r}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=st).prototype={constructor:st,init:function(e,t,n,i,o,r){this.elem=e,this.prop=n,this.easing=o||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(S.cssNumber[n]?"":"px")},cur:function(){var e=st.propHooks[this.prop];return(e&&e.get?e:st.propHooks._default).get(this)},run:function(e){var t,n=st.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),(n&&n.set?n:st.propHooks._default).set(this),this}}).init.prototype=st.prototype,(st.propHooks={_default:{get:function(e){return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(e=S.css(e.elem,e.prop,""))&&"auto"!==e?e:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[Ke(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=st.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=st.prototype.init,S.fx.step={};var at,lt,ct=/^(?:toggle|show|hide)$/,ut=/queueHooks$/;function dt(){lt&&(!1===C.hidden&&T.requestAnimationFrame?T.requestAnimationFrame(dt):T.setTimeout(dt,S.fx.interval),S.fx.tick())}function pt(){return T.setTimeout(function(){at=void 0}),at=Date.now()}function ft(e,t){var n,i=0,o={height:e};for(t=t?1:0;i<4;i+=2-t)o["margin"+(n=te[i])]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function ht(e,t,n){for(var i,o=(gt.tweeners[t]||[]).concat(gt.tweeners["*"]),r=0,s=o.length;r<s;r++)if(i=o[r].call(n,t,e))return i}function gt(o,e,t){var n,r,i=0,s=gt.prefilters.length,a=S.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=at||pt(),e=Math.max(0,c.startTime+c.duration-e),t=1-(e/c.duration||0),n=0,i=c.tweens.length;n<i;n++)c.tweens[n].run(t);return a.notifyWith(o,[c,t,e]),t<1&&i?e:(i||a.notifyWith(o,[c,1,0]),a.resolveWith(o,[c]),!1)},c=a.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:at||pt(),duration:t.duration,tweens:[],createTween:function(e,t){e=S.Tween(o,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(e),e},stop:function(e){var t=0,n=e?c.tweens.length:0;if(r)return this;for(r=!0;t<n;t++)c.tweens[t].run(1);return e?(a.notifyWith(o,[c,1,0]),a.resolveWith(o,[c,e])):a.rejectWith(o,[c,e]),this}}),u=c.props;for(function(e,t){var n,i,o,r,s;for(n in e)if(o=t[i=X(n)],r=e[n],Array.isArray(r)&&(o=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),(s=S.cssHooks[i])&&"expand"in s)for(n in r=s.expand(r),delete e[i],r)n in e||(e[n]=r[n],t[n]=o);else t[i]=o}(u,c.opts.specialEasing);i<s;i++)if(n=gt.prefilters[i].call(c,o,u,c.opts))return b(n.stop)&&(S._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return S.map(u,ht,c),b(c.opts.start)&&c.opts.start.call(o,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),S.fx.timer(S.extend(l,{elem:o,anim:c,queue:c.opts.queue})),c}S.Animation=S.extend(gt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,ee.exec(t),n),n}]},tweener:function(e,t){for(var n,i=0,o=(e=b(e)?(t=e,["*"]):e.match(H)).length;i<o;i++)n=e[i],gt.tweeners[n]=gt.tweeners[n]||[],gt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,o,r,s,a,l,c,u="width"in t||"height"in t,d=this,p={},f=e.style,h=e.nodeType&&re(e),g=V.get(e,"fxshow");for(i in n.queue||(null==(s=S._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,d.always(function(){d.always(function(){s.unqueued--,S.queue(e,"fx").length||s.empty.fire()})})),t)if(o=t[i],ct.test(o)){if(delete t[i],r=r||"toggle"===o,o===(h?"hide":"show")){if("show"!==o||!g||void 0===g[i])continue;h=!0}p[i]=g&&g[i]||S.style(e,i)}if((l=!S.isEmptyObject(t))||!S.isEmptyObject(p))for(i in u&&1===e.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=g&&g.display)&&(c=V.get(e,"display")),"none"===(u=S.css(e,"display"))&&(c?u=c:(le([e],!0),c=e.style.display||c,u=S.css(e,"display"),le([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===S.css(e,"float")&&(l||(d.done(function(){f.display=c}),null==c&&(u=f.display,c="none"===u?"":u)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",d.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]})),l=!1,p)l||(g?"hidden"in g&&(h=g.hidden):g=V.access(e,"fxshow",{display:c}),r&&(g.hidden=!h),h&&le([e],!0),d.done(function(){for(i in h||le([e]),V.remove(e,"fxshow"),p)S.style(e,i,p[i])})),l=ht(h?g[i]:0,i,d),i in g||(g[i]=l.start,h&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?gt.prefilters.unshift(e):gt.prefilters.push(e)}}),S.speed=function(e,t,n){var i=e&&"object"==_typeof(e)?S.extend({},e):{complete:n||!n&&t||b(e)&&e,duration:e,easing:n&&t||t&&!b(t)&&t};return S.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in S.fx.speeds?i.duration=S.fx.speeds[i.duration]:i.duration=S.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){b(i.old)&&i.old.call(this),i.queue&&S.dequeue(this,i.queue)},i},S.fn.extend({fadeTo:function(e,t,n,i){return this.filter(re).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(t,e,n,i){var o=S.isEmptyObject(t),r=S.speed(e,n,i),i=function(){var e=gt(this,S.extend({},t),r);(o||V.get(this,"finish"))&&e.stop(!0)};return i.finish=i,o||!1===r.queue?this.each(i):this.queue(r.queue,i)},stop:function(o,e,r){function s(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof o&&(r=e,e=o,o=void 0),e&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",n=S.timers,i=V.get(this);if(t)i[t]&&i[t].stop&&s(i[t]);else for(t in i)i[t]&&i[t].stop&&ut.test(t)&&s(i[t]);for(t=n.length;t--;)n[t].elem!==this||null!=o&&n[t].queue!==o||(n[t].anim.stop(r),e=!1,n.splice(t,1));!e&&r||S.dequeue(this,o)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=V.get(this),n=t[s+"queue"],i=t[s+"queueHooks"],o=S.timers,r=n?n.length:0;for(t.finish=!0,S.queue(this,s,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===s&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,i){var o=S.fn[i];S.fn[i]=function(e,t,n){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(ft(i,!0),e,t,n)}}),S.each({slideDown:ft("show"),slideUp:ft("hide"),slideToggle:ft("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,i){S.fn[e]=function(e,t,n){return this.animate(i,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(at=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),at=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){lt||(lt=!0,dt())},S.fx.stop=function(){lt=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(i,e){return i=S.fx&&S.fx.speeds[i]||i,this.queue(e=e||"fx",function(e,t){var n=T.setTimeout(e,i);t.stop=function(){T.clearTimeout(n)}})},pe=C.createElement("input"),J=C.createElement("select").appendChild(C.createElement("option")),pe.type="checkbox",y.checkOn=""!==pe.value,y.optSelected=J.selected,(pe=C.createElement("input")).value="t",pe.type="radio",y.radioValue="t"===pe.value;var mt,vt=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return _(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?S.prop(e,t,n):(1===r&&S.isXMLDoc(e)||(o=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?mt:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:(e.setAttribute(t,n+""),n):!(o&&"get"in o&&null!==(i=o.get(e,t)))&&null==(i=S.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&$(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,o=t&&t.match(H);if(o&&1===e.nodeType)for(;n=o[i++];)e.removeAttribute(n)}}),mt={set:function(e,t,n){return!1===t?S.removeAttr(e,n):e.setAttribute(n,n),n}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var s=vt[t]||S.find.attr;vt[t]=function(e,t,n){var i,o,r=t.toLowerCase();return n||(o=vt[r],vt[r]=i,i=null!=s(e,t,n)?r:null,vt[r]=o),i}});var yt=/^(?:input|select|textarea|button)$/i,bt=/^(?:a|area)$/i;function xt(e){return(e.match(H)||[]).join(" ")}function wt(e){return e.getAttribute&&e.getAttribute("class")||""}function Tt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(H)||[]}S.fn.extend({prop:function(e,t){return _(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var i,o,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&S.isXMLDoc(e)||(t=S.propFix[t]||t,o=S.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(i=o.set(e,n,t))?i:e[t]=n:o&&"get"in o&&null!==(i=o.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):yt.test(e.nodeName)||bt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){e=e.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(e){e=e.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,n,i,o,r,s,a=0;if(b(t))return this.each(function(e){S(this).addClass(t.call(this,e,wt(this)))});if((e=Tt(t)).length)for(;n=this[a++];)if(s=wt(n),i=1===n.nodeType&&" "+xt(s)+" "){for(r=0;o=e[r++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");s!==(s=xt(i))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,i,o,r,s,a=0;if(b(t))return this.each(function(e){S(this).removeClass(t.call(this,e,wt(this)))});if(!arguments.length)return this.attr("class","");if((e=Tt(t)).length)for(;n=this[a++];)if(s=wt(n),i=1===n.nodeType&&" "+xt(s)+" "){for(r=0;o=e[r++];)for(;-1<i.indexOf(" "+o+" ");)i=i.replace(" "+o+" "," ");s!==(s=xt(i))&&n.setAttribute("class",s)}return this},toggleClass:function(o,t){var r=_typeof(o),s="string"===r||Array.isArray(o);return"boolean"==typeof t&&s?t?this.addClass(o):this.removeClass(o):b(o)?this.each(function(e){S(this).toggleClass(o.call(this,e,wt(this),t),t)}):this.each(function(){var e,t,n,i;if(s)for(t=0,n=S(this),i=Tt(o);e=i[t++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==o&&"boolean"!==r||((e=wt(this))&&V.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==o&&V.get(this,"__className__")||""))})},hasClass:function(e){for(var t,n=0,i=" "+e+" ";t=this[n++];)if(1===t.nodeType&&-1<(" "+xt(wt(t))+" ").indexOf(i))return!0;return!1}});var Ct=/\r/g;S.fn.extend({val:function(t){var n,e,i,o=this[0];return arguments.length?(i=b(t),this.each(function(e){1===this.nodeType&&(null==(e=i?t.call(this,e,S(this).val()):t)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=S.map(e,function(e){return null==e?"":e+""})),(n=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,e,"value")||(this.value=e))})):o?(n=S.valHooks[o.type]||S.valHooks[o.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(o,"value"))?e:"string"==typeof(e=o.value)?e.replace(Ct,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:xt(S.text(e))}},select:{get:function(e){for(var t,n=e.options,i=e.selectedIndex,o="select-one"===e.type,r=o?null:[],s=o?i+1:n.length,a=i<0?s:o?i:0;a<s;a++)if(((t=n[a]).selected||a===i)&&!t.disabled&&(!t.parentNode.disabled||!$(t.parentNode,"optgroup"))){if(t=S(t).val(),o)return t;r.push(t)}return r},set:function(e,t){for(var n,i,o=e.options,r=S.makeArray(t),s=o.length;s--;)((i=o[s]).selected=-1<S.inArray(S.valHooks.option.get(i),r))&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in T;function St(e){e.stopPropagation()}var kt=/^(?:focusinfocus|focusoutblur)$/;S.extend(S.event,{trigger:function(e,t,n,i){var o,r,s,a,l,c,u,d=[n||C],p=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[],h=u=r=n=n||C;if(3!==n.nodeType&&8!==n.nodeType&&!kt.test(p+S.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),a=p.indexOf(":")<0&&"on"+p,(e=e[S.expando]?e:new S.Event(p,"object"==_typeof(e)&&e)).isTrigger=i?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[p]||{},i||!c.trigger||!1!==c.trigger.apply(n,t))){if(!i&&!c.noBubble&&!g(n)){for(s=c.delegateType||p,kt.test(s+p)||(h=h.parentNode);h;h=h.parentNode)d.push(h),r=h;r===(n.ownerDocument||C)&&d.push(r.defaultView||r.parentWindow||T)}for(o=0;(h=d[o++])&&!e.isPropagationStopped();)u=h,e.type=1<o?s:c.bindType||p,(l=(V.get(h,"events")||Object.create(null))[e.type]&&V.get(h,"handle"))&&l.apply(h,t),(l=a&&h[a])&&l.apply&&Y(h)&&(e.result=l.apply(h,t),!1===e.result&&e.preventDefault());return e.type=p,i||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(d.pop(),t)||!Y(n)||a&&b(n[p])&&!g(n)&&((r=n[a])&&(n[a]=null),S.event.triggered=p,e.isPropagationStopped()&&u.addEventListener(p,St),n[p](),e.isPropagationStopped()&&u.removeEventListener(p,St),S.event.triggered=void 0,r&&(n[a]=r)),e.result}},simulate:function(e,t,n){e=S.extend(new S.Event,n,{type:e,isSimulated:!0});S.event.trigger(e,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return S.event.trigger(e,t,n,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(n,i){function o(e){S.event.simulate(i,e.target,S.event.fix(e))}S.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=V.access(e,i);t||e.addEventListener(n,o,!0),V.access(e,i,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=V.access(e,i)-1;t?V.access(e,i,t):(e.removeEventListener(n,o,!0),V.remove(e,i))}}});var $t=T.location,At={guid:Date.now()},Et=/\?/;S.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new T.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||S.error("Invalid XML: "+(n?S.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var Pt=/\[\]$/,Dt=/\r?\n/g,Lt=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;S.param=function(e,t){function n(e,t){t=b(t)?t():t,o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==t?"":t)}var i,o=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){n(this.name,this.value)});else for(i in e)!function n(i,e,o,r){if(Array.isArray(e))S.each(e,function(e,t){o||Pt.test(i)?r(i,t):n(i+"["+("object"==_typeof(t)&&null!=t?e:"")+"]",t,o,r)});else if(o||"object"!==h(e))r(i,e);else for(var t in e)n(i+"["+t+"]",e[t],o,r)}(i,e[i],t,n);return o.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&jt.test(this.nodeName)&&!Lt.test(e)&&(this.checked||!ce.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Dt,"\r\n")}}):{name:t.name,value:n.replace(Dt,"\r\n")}}).get()}});var Nt=/%20/g,Ht=/#.*$/,qt=/([?&])_=[^&]*/,Ot=/^(.*?):[ \t]*([^\r\n]*)$/gm,Mt=/^(?:GET|HEAD)$/,It=/^\/\//,Rt={},Ft={},_t="*/".concat("*"),zt=C.createElement("a");function Wt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,i=0,o=e.toLowerCase().match(H)||[];if(b(t))for(;n=o[i++];)"+"===n[0]?(n=n.slice(1)||"*",(r[n]=r[n]||[]).unshift(t)):(r[n]=r[n]||[]).push(t)}}function Bt(t,i,o,r){var s={},a=t===Ft;function l(e){var n;return s[e]=!0,S.each(t[e]||[],function(e,t){t=t(i,o,r);return"string"!=typeof t||a||s[t]?a?!(n=t):void 0:(i.dataTypes.unshift(t),l(t),!1)}),n}return l(i.dataTypes[0])||!s["*"]&&l("*")}function Xt(e,t){var n,i,o=S.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:i=i||{})[n]=t[n]);return i&&S.extend(!0,e,i),e}zt.href=$t.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:$t.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test($t.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":_t,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Xt(Xt(e,S.ajaxSettings),t):Xt(S.ajaxSettings,e)},ajaxPrefilter:Wt(Rt),ajaxTransport:Wt(Ft),ajax:function(e,t){"object"==_typeof(e)&&(t=e,e=void 0);var l,c,u,n,d,p,f,i,o,h=S.ajaxSetup({},t=t||{}),g=h.context||h,m=h.context&&(g.nodeType||g.jquery)?S(g):S.event,v=S.Deferred(),y=S.Callbacks("once memory"),b=h.statusCode||{},r={},s={},a="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(p){if(!n)for(n={};t=Ot.exec(u);)n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return p?u:null},setRequestHeader:function(e,t){return null==p&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==p&&(h.mimeType=e),this},statusCode:function(e){if(e)if(p)x.always(e[x.status]);else for(var t in e)b[t]=[b[t],e[t]];return this},abort:function(e){e=e||a;return l&&l.abort(e),w(0,e),this}};if(v.promise(x),h.url=((e||h.url||$t.href)+"").replace(It,$t.protocol+"//"),h.type=t.method||t.type||h.method||h.type,h.dataTypes=(h.dataType||"*").toLowerCase().match(H)||[""],null==h.crossDomain){o=C.createElement("a");try{o.href=h.url,o.href=o.href,h.crossDomain=zt.protocol+"//"+zt.host!=o.protocol+"//"+o.host}catch(e){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=S.param(h.data,h.traditional)),Bt(Rt,h,t,x),p)return x;for(i in(f=S.event&&h.global)&&0==S.active++&&S.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!Mt.test(h.type),c=h.url.replace(Ht,""),h.hasContent?h.data&&h.processData&&0===(h.contentType||"").indexOf("application/x-www-form-urlencoded")&&(h.data=h.data.replace(Nt,"+")):(o=h.url.slice(c.length),h.data&&(h.processData||"string"==typeof h.data)&&(c+=(Et.test(c)?"&":"?")+h.data,delete h.data),!1===h.cache&&(c=c.replace(qt,"$1"),o=(Et.test(c)?"&":"?")+"_="+At.guid+++o),h.url=c+o),h.ifModified&&(S.lastModified[c]&&x.setRequestHeader("If-Modified-Since",S.lastModified[c]),S.etag[c]&&x.setRequestHeader("If-None-Match",S.etag[c])),(h.data&&h.hasContent&&!1!==h.contentType||t.contentType)&&x.setRequestHeader("Content-Type",h.contentType),x.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+_t+"; q=0.01":""):h.accepts["*"]),h.headers)x.setRequestHeader(i,h.headers[i]);if(h.beforeSend&&(!1===h.beforeSend.call(g,x,h)||p))return x.abort();if(a="abort",y.add(h.complete),x.done(h.success),x.fail(h.error),l=Bt(Ft,h,t,x)){if(x.readyState=1,f&&m.trigger("ajaxSend",[x,h]),p)return x;h.async&&0<h.timeout&&(d=T.setTimeout(function(){x.abort("timeout")},h.timeout));try{p=!1,l.send(r,w)}catch(e){if(p)throw e;w(-1,e)}}else w(-1,"No Transport");function w(e,t,n,i){var o,r,s,a=t;p||(p=!0,d&&T.clearTimeout(d),l=void 0,u=i||"",x.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){for(var i,o,r,s,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(o in a)if(a[o]&&a[o].test(i)){l.unshift(o);break}if(l[0]in n)r=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){r=o;break}s=s||o}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}(h,x,n)),!i&&-1<S.inArray("script",h.dataTypes)&&S.inArray("json",h.dataTypes)<0&&(h.converters["text script"]=function(){}),s=function(e,t,n,i){var o,r,s,a,l,c={},u=e.dataTypes.slice();if(u[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=u.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(o in c)if((a=o.split(" "))[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){!0===s?s=c[o]:!0!==c[o]&&(r=a[0],u.unshift(a[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(h,s,x,i),i?(h.ifModified&&((n=x.getResponseHeader("Last-Modified"))&&(S.lastModified[c]=n),(n=x.getResponseHeader("etag"))&&(S.etag[c]=n)),204===e||"HEAD"===h.type?a="nocontent":304===e?a="notmodified":(a=s.state,o=s.data,i=!(r=s.error))):(r=a,!e&&a||(a="error",e<0&&(e=0))),x.status=e,x.statusText=(t||a)+"",i?v.resolveWith(g,[o,a,x]):v.rejectWith(g,[x,a,r]),x.statusCode(b),b=void 0,f&&m.trigger(i?"ajaxSuccess":"ajaxError",[x,h,i?o:r]),y.fireWith(g,[x,a]),f&&(m.trigger("ajaxComplete",[x,h]),--S.active||S.event.trigger("ajaxStop")))}return x},getJSON:function(e,t,n){return S.get(e,t,n,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,o){S[o]=function(e,t,n,i){return b(t)&&(i=i||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:o,dataType:i,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){for(var t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),S._evalUrl=function(e,t,n){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t,n)}})},S.fn.extend({wrapAll:function(e){return this[0]&&(b(e)&&(e=e.call(this[0])),e=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return b(n)?this.each(function(e){S(this).wrapInner(n.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=b(t);return this.each(function(e){S(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new T.XMLHttpRequest}catch(e){}};var Yt={0:200,1223:204},Ut=S.ajaxSettings.xhr();y.cors=!!Ut&&"withCredentials"in Ut,y.ajax=Ut=!!Ut,S.ajaxTransport(function(o){var r,s;if(y.cors||Ut&&!o.crossDomain)return{send:function(e,t){var n,i=o.xhr();if(i.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(n in o.xhrFields)i[n]=o.xhrFields[n];for(n in o.mimeType&&i.overrideMimeType&&i.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)i.setRequestHeader(n,e[n]);r=function(e){return function(){r&&(r=s=i.onload=i.onerror=i.onabort=i.ontimeout=i.onreadystatechange=null,"abort"===e?i.abort():"error"===e?"number"!=typeof i.status?t(0,"error"):t(i.status,i.statusText):t(Yt[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=r(),s=i.onerror=i.ontimeout=r("error"),void 0!==i.onabort?i.onabort=s:i.onreadystatechange=function(){4===i.readyState&&T.setTimeout(function(){r&&s()})},r=r("abort");try{i.send(o.hasContent&&o.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(n){var i,o;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){i=S("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",o=function(e){i.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(i[0])},abort:function(){o&&o()}}});var Vt=[],Gt=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Vt.pop()||S.expando+"_"+At.guid++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,n){var i,o,r,s=!1!==e.jsonp&&(Gt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Gt.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Gt,"$1"+i):!1!==e.jsonp&&(e.url+=(Et.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return r||S.error(i+" was not called"),r[0]},e.dataTypes[0]="json",o=T[i],T[i]=function(){r=arguments},n.always(function(){void 0===o?S(T).removeProp(i):T[i]=o,e[i]&&(e.jsonpCallback=t.jsonpCallback,Vt.push(i)),r&&b(o)&&o(r[0]),r=o=void 0}),"script"}),y.createHTMLDocument=((pe=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===pe.childNodes.length),S.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((i=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(i)):t=C),i=!n&&[],(n=A.exec(e))?[t.createElement(n[1])]:(n=ve([e],t,i),i&&i.length&&S(i).remove(),S.merge([],n.childNodes)));var i},S.fn.load=function(e,t,n){var i,o,r,s=this,a=e.indexOf(" ");return-1<a&&(i=xt(e.slice(a)),e=e.slice(0,a)),b(t)?(n=t,t=void 0):t&&"object"==_typeof(t)&&(o="POST"),0<s.length&&S.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?S("<div>").append(S.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,n){var i,o,r,s,a=S.css(e,"position"),l=S(e),c={};"static"===a&&(e.style.position="relative"),r=l.offset(),i=S.css(e,"top"),s=S.css(e,"left"),s=("absolute"===a||"fixed"===a)&&-1<(i+s).indexOf("auto")?(o=(a=l.position()).top,a.left):(o=parseFloat(i)||0,parseFloat(s)||0),null!=(t=b(t)?t.call(e,n,S.extend({},r)):t).top&&(c.top=t.top-r.top+o),null!=t.left&&(c.left=t.left-r.left+s),"using"in t?t.using.call(e,c):l.css(c)}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),n=n.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,i=this[0],o={top:0,left:0};if("fixed"===S.css(i,"position"))t=i.getBoundingClientRect();else{for(t=this.offset(),n=i.ownerDocument,e=i.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===S.css(e,"position");)e=e.parentNode;e&&e!==i&&1===e.nodeType&&((o=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),o.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-o.top-S.css(i,"marginTop",!0),left:t.left-o.left-S.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===S.css(e,"position");)e=e.offsetParent;return e||ne})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var r="pageYOffset"===o;S.fn[t]=function(e){return _(this,function(e,t,n){var i;return g(e)?i=e:9===e.nodeType&&(i=e.defaultView),void 0===n?i?i[o]:e[t]:void(i?i.scrollTo(r?i.pageXOffset:n,r?n:i.pageYOffset):e[t]=n)},t,e,arguments.length)}}),S.each(["top","left"],function(e,n){S.cssHooks[n]=Ye(y.pixelPosition,function(e,t){if(t)return t=Xe(e,n),ze.test(t)?S(e).position()[n]+"px":t})}),S.each({Height:"height",Width:"width"},function(s,a){S.each({padding:"inner"+s,content:a,"":"outer"+s},function(i,r){S.fn[r]=function(e,t){var n=arguments.length&&(i||"boolean"!=typeof e),o=i||(!0===e||!0===t?"margin":"border");return _(this,function(e,t,n){var i;return g(e)?0===r.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+s],i["scroll"+s],e.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?S.css(e,t,o):S.style(e,t,n,o)},a,n?e:void 0,n)}})}),S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){S.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Qt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;S.proxy=function(e,t){var n,i;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return n=a.call(arguments,2),(i=function(){return e.apply(t||this,n.concat(a.call(arguments)))}).guid=e.guid=e.guid||S.guid++,i},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=$,S.isFunction=b,S.isWindow=g,S.camelCase=X,S.type=h,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?"":(e+"").replace(Qt,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var Zt=T.jQuery,Kt=T.$;return S.noConflict=function(e){return T.$===S&&(T.$=Kt),e&&T.jQuery===S&&(T.jQuery=Zt),S},void 0===e&&(T.jQuery=T.$=S),S}),function(l,s,h){function n(e,t){var n,i,o,r=[],s=0;e&&e.isDefaultPrevented()||(e.preventDefault(),t=t||{},n=(t=e&&e.data?d(e.data.options,t):t).$target||h(e.currentTarget).trigger("blur"),(o=h.fancybox.getInstance())&&o.$trigger&&o.$trigger.is(n)||(r=t.selector?h(t.selector):(i=n.attr("data-fancybox")||"")?(r=e.data?e.data.items:[]).length?r.filter('[data-fancybox="'+i+'"]'):h('[data-fancybox="'+i+'"]'):[n],s=h(r).index(n),(o=h.fancybox.open(r,t,s=s<0?0:s)).$trigger=n))}if(l.console=l.console||{info:function(e){}},h){if(h.fn.fancybox)return console.info("fancyBox already initialized");var e={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,preventCaptionOverlap:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:h.noop,beforeLoad:h.noop,afterLoad:h.noop,beforeShow:h.noop,afterShow:h.noop,beforeClose:h.noop,afterClose:h.noop,onActivate:h.noop,onDeactivate:h.noop,clickContent:function(e,t){return"image"===e.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{preventCaptionOverlap:!1,idleTime:!1,clickContent:function(e,t){return"image"===e.type&&"toggleControls"},clickSlide:function(e,t){return"image"===e.type?"toggleControls":"close"},dblclickContent:function(e,t){return"image"===e.type&&"zoom"},dblclickSlide:function(e,t){return"image"===e.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schlie&szlig;en",NEXT:"Weiter",PREV:"Zur&uuml;ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Vergr&ouml;&szlig;ern"}}},o=h(l),r=h(s),a=0,u=l.requestAnimationFrame||l.webkitRequestAnimationFrame||l.mozRequestAnimationFrame||l.oRequestAnimationFrame||function(e){return l.setTimeout(e,1e3/60)},t=l.cancelAnimationFrame||l.webkitCancelAnimationFrame||l.mozCancelAnimationFrame||l.oCancelAnimationFrame||function(e){l.clearTimeout(e)},c=function(){var e,t=s.createElement("fakeelement"),n={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in n)if(void 0!==t.style[e])return n[e];return"transitionend"}(),p=function(e){return e&&e.length&&e[0].offsetHeight},d=function(e,t){var n=h.extend(!0,{},e,t);return h.each(t,function(e,t){h.isArray(t)&&(n[e]=t)}),n},i=function(e,t,n){var i=this;i.opts=d({index:n},h.fancybox.defaults),h.isPlainObject(t)&&(i.opts=d(i.opts,t)),h.fancybox.isMobile&&(i.opts=d(i.opts,i.opts.mobile)),i.id=i.opts.id||++a,i.currIndex=parseInt(i.opts.index,10)||0,i.prevIndex=null,i.prevPos=null,i.currPos=0,i.firstRun=!0,i.group=[],i.slides={},i.addContent(e),i.group.length&&i.init()};h.extend(i.prototype,{init:function(){var t,n,i=this,o=i.group[i.currIndex].opts;o.closeExisting&&h.fancybox.close(!0),h("body").addClass("fancybox-active"),!h.fancybox.getInstance()&&!1!==o.hideScrollbar&&!h.fancybox.isMobile&&s.body.scrollHeight>l.innerHeight&&(h("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(l.innerWidth-s.documentElement.clientWidth)+"px;}</style>"),h("body").addClass("compensate-for-scrollbar")),n="",h.each(o.buttons,function(e,t){n+=o.btnTpl[t]||""}),t=h(i.translate(i,o.baseTpl.replace("{{buttons}}",n).replace("{{arrows}}",o.btnTpl.arrowLeft+o.btnTpl.arrowRight))).attr("id","fancybox-container-"+i.id).addClass(o.baseClass).data("FancyBox",i).appendTo(o.parentEl),i.$refs={container:t},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(e){i.$refs[e]=t.find(".fancybox-"+e)}),i.trigger("onInit"),i.activate(),i.jumpTo(i.currIndex)},translate:function(e,t){var n=e.opts.i18n[e.opts.lang]||e.opts.i18n.en;return t.replace(/\{\{(\w+)\}\}/g,function(e,t){return void 0===n[t]?e:n[t]})},addContent:function(e){var s=this,e=h.makeArray(e);h.each(e,function(e,t){var n,i,o={},r={};h.isPlainObject(t)?r=(o=t).opts||t:"object"===h.type(t)&&h(t).length?(r=(i=h(t)).data()||{},(r=h.extend(!0,{},r,r.options)).$orig=i,o.src=s.opts.src||r.src||i.attr("href"),o.type||o.src||(o.type="inline",o.src=t)):o={type:"html",src:t+""},o.opts=h.extend(!0,{},s.opts,r),h.isArray(r.buttons)&&(o.opts.buttons=r.buttons),h.fancybox.isMobile&&o.opts.mobile&&(o.opts=d(o.opts,o.opts.mobile)),n=o.type||o.opts.type,i=o.src||"",!n&&i&&((r=i.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(n="video",o.opts.video.format||(o.opts.video.format="video/"+("ogv"===r[1]?"ogg":r[1]))):i.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?n="image":i.match(/\.(pdf)((\?|#).*)?$/i)?o=h.extend(!0,o,{contentType:"pdf",opts:{iframe:{preload:!(n="iframe")}}}):"#"===i.charAt(0)&&(n="inline")),n?o.type=n:s.trigger("objectNeedsType",o),o.contentType||(o.contentType=-1<h.inArray(o.type,["html","inline","ajax"])?"html":o.type),o.index=s.group.length,"auto"==o.opts.smallBtn&&(o.opts.smallBtn=-1<h.inArray(o.type,["html","inline","ajax"])),"auto"===o.opts.toolbar&&(o.opts.toolbar=!o.opts.smallBtn),o.$thumb=o.opts.$thumb||null,o.opts.$trigger&&o.index===s.opts.index&&(o.$thumb=o.opts.$trigger.find("img:first"),o.$thumb.length&&(o.opts.$orig=o.opts.$trigger)),o.$thumb&&o.$thumb.length||!o.opts.$orig||(o.$thumb=o.opts.$orig.find("img:first")),o.$thumb&&!o.$thumb.length&&(o.$thumb=null),o.thumb=o.opts.thumb||(o.$thumb?o.$thumb[0].src:null),"function"===h.type(o.opts.caption)&&(o.opts.caption=o.opts.caption.apply(t,[s,o])),"function"===h.type(s.opts.caption)&&(o.opts.caption=s.opts.caption.apply(t,[s,o])),o.opts.caption instanceof h||(o.opts.caption=void 0===o.opts.caption?"":o.opts.caption+""),"ajax"!==o.type||1<(i=i.split(/\s+/,2)).length&&(o.src=i.shift(),o.opts.filter=i.shift()),o.opts.modal&&(o.opts=h.extend(!0,o.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),s.group.push(o)}),Object.keys(s.slides).length&&(s.updateControls(),(e=s.Thumbs)&&e.isActive&&(e.create(),e.focus()))},addEvents:function(){var i=this;i.removeEvents(),i.$refs.container.on("click.fb-close","[data-fancybox-close]",function(e){e.stopPropagation(),e.preventDefault(),i.close(e)}).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",function(e){e.stopPropagation(),e.preventDefault(),i.previous()}).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",function(e){e.stopPropagation(),e.preventDefault(),i.next()}).on("click.fb","[data-fancybox-zoom]",function(e){i[i.isScaledDown()?"scaleToActual":"scaleToFit"]()}),o.on("orientationchange.fb resize.fb",function(e){e&&e.originalEvent&&"resize"===e.originalEvent.type?(i.requestId&&t(i.requestId),i.requestId=u(function(){i.update(e)})):(i.current&&"iframe"===i.current.type&&i.$refs.stage.hide(),setTimeout(function(){i.$refs.stage.show(),i.update(e)},h.fancybox.isMobile?600:250))}),r.on("keydown.fb",function(e){var t=(h.fancybox?h.fancybox.getInstance():null).current,n=e.keyCode||e.which;if(9!=n)return!t.opts.keyboard||e.ctrlKey||e.altKey||e.shiftKey||h(e.target).is("input,textarea,video,audio,select")?void 0:8===n||27===n?(e.preventDefault(),void i.close(e)):37===n||38===n?(e.preventDefault(),void i.previous()):39===n||40===n?(e.preventDefault(),void i.next()):void i.trigger("afterKeydown",e,n);t.opts.trapFocus&&i.focus(e)}),i.group[i.currIndex].opts.idleTime&&(i.idleSecondsCounter=0,r.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(e){i.idleSecondsCounter=0,i.isIdle&&i.showControls(),i.isIdle=!1}),i.idleInterval=l.setInterval(function(){++i.idleSecondsCounter>=i.group[i.currIndex].opts.idleTime&&!i.isDragging&&(i.isIdle=!0,i.idleSecondsCounter=0,i.hideControls())},1e3))},removeEvents:function(){o.off("orientationchange.fb resize.fb"),r.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(l.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(e){return this.jumpTo(this.currPos-1,e)},next:function(e){return this.jumpTo(this.currPos+1,e)},jumpTo:function(e,i){var t,n,o,r,s,a,l,c,u=this,d=u.group.length;if(!(u.isDragging||u.isClosing||u.isAnimating&&u.firstRun))return e=parseInt(e,10),!(!(n=(u.current||u).opts.loop)&&(e<0||d<=e))&&(t=u.firstRun=!Object.keys(u.slides).length,r=u.current,u.prevIndex=u.currIndex,u.prevPos=u.currPos,o=u.createSlide(e),1<d&&((n||o.index<d-1)&&u.createSlide(e+1),(n||0<o.index)&&u.createSlide(e-1)),u.current=o,u.currIndex=o.index,u.currPos=o.pos,u.trigger("beforeShow",t),u.updateControls(),o.forcedDuration=void 0,h.isNumeric(i)?o.forcedDuration=i:i=o.opts[t?"animationDuration":"transitionDuration"],i=parseInt(i,10),e=u.isMoved(o),o.$slide.addClass("fancybox-slide--current"),t?(o.opts.animationEffect&&i&&u.$refs.container.css("transition-duration",i+"ms"),u.$refs.container.addClass("fancybox-is-open").trigger("focus"),u.loadSlide(o)):(s=h.fancybox.getTranslate(r.$slide),a=h.fancybox.getTranslate(u.$refs.stage),h.each(u.slides,function(e,t){h.fancybox.stop(t.$slide,!0)}),r.pos!==o.pos&&(r.isComplete=!1),r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"),e?(c=s.left-(r.pos*s.width+r.pos*r.opts.gutter),h.each(u.slides,function(e,t){t.$slide.removeClass("fancybox-animated").removeClass(function(e,t){return(t.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")});var n=t.pos*s.width+t.pos*t.opts.gutter;h.fancybox.setTranslate(t.$slide,{top:0,left:n-a.left+c}),t.pos!==o.pos&&t.$slide.addClass("fancybox-slide--"+(t.pos>o.pos?"next":"previous")),p(t.$slide),h.fancybox.animate(t.$slide,{top:0,left:(t.pos-o.pos)*s.width+(t.pos-o.pos)*t.opts.gutter},i,function(){t.$slide.css({transform:"",opacity:""}).removeClass("fancybox-slide--next fancybox-slide--previous"),t.pos===u.currPos&&u.complete()})})):i&&o.opts.transitionEffect&&(l="fancybox-animated fancybox-fx-"+o.opts.transitionEffect,r.$slide.addClass("fancybox-slide--"+(r.pos>o.pos?"next":"previous")),h.fancybox.animate(r.$slide,l,i,function(){r.$slide.removeClass(l).removeClass("fancybox-slide--next fancybox-slide--previous")},!1)),o.isLoaded?u.revealContent(o):u.loadSlide(o)),void u.preload("image"))},createSlide:function(e){var t,n=this,i=e%n.group.length;return i=i<0?n.group.length+i:i,!n.slides[e]&&n.group[i]&&(t=h('<div class="fancybox-slide"></div>').appendTo(n.$refs.stage),n.slides[e]=h.extend(!0,{},n.group[i],{pos:e,$slide:t,isLoaded:!1}),n.updateSlide(n.slides[e])),n.slides[e]},scaleToActual:function(e,t,n){var i,o,r,s,a=this,l=a.current,c=l.$content,u=h.fancybox.getTranslate(l.$slide).width,d=h.fancybox.getTranslate(l.$slide).height,p=l.width,f=l.height;a.isAnimating||a.isMoved()||!c||"image"!=l.type||!l.isLoaded||l.hasError||(a.isAnimating=!0,h.fancybox.stop(c),e=void 0===e?.5*u:e,t=void 0===t?.5*d:t,(i=h.fancybox.getTranslate(c)).top-=h.fancybox.getTranslate(l.$slide).top,i.left-=h.fancybox.getTranslate(l.$slide).left,r=p/i.width,s=f/i.height,o=.5*u-.5*p,l=.5*d-.5*f,u<p&&((o=0<(o=i.left*r-(e*r-e))?0:o)<u-p&&(o=u-p)),d<f&&((l=0<(l=i.top*s-(t*s-t))?0:l)<d-f&&(l=d-f)),a.updateCursor(p,f),h.fancybox.animate(c,{top:l,left:o,scaleX:r,scaleY:s},n||366,function(){a.isAnimating=!1}),a.SlideShow&&a.SlideShow.isActive&&a.SlideShow.stop())},scaleToFit:function(e){var t=this,n=t.current,i=n.$content;t.isAnimating||t.isMoved()||!i||"image"!=n.type||!n.isLoaded||n.hasError||(t.isAnimating=!0,h.fancybox.stop(i),n=t.getFitPos(n),t.updateCursor(n.width,n.height),h.fancybox.animate(i,{top:n.top,left:n.left,scaleX:n.width/i.width(),scaleY:n.height/i.height()},e||366,function(){t.isAnimating=!1}))},getFitPos:function(e){var t,n,i=e.$content,o=e.$slide,r=e.width||e.opts.width,s=e.height||e.opts.height,a={};return!!(e.isLoaded&&i&&i.length)&&(t=h.fancybox.getTranslate(this.$refs.stage).width,n=h.fancybox.getTranslate(this.$refs.stage).height,t-=parseFloat(o.css("paddingLeft"))+parseFloat(o.css("paddingRight"))+parseFloat(i.css("marginLeft"))+parseFloat(i.css("marginRight")),n-=parseFloat(o.css("paddingTop"))+parseFloat(o.css("paddingBottom"))+parseFloat(i.css("marginTop"))+parseFloat(i.css("marginBottom")),r&&s||(r=t,s=n),t-.5<(r*=i=Math.min(1,t/r,n/s))&&(r=t),n-.5<(s*=i)&&(s=n),"image"===e.type?(a.top=Math.floor(.5*(n-s))+parseFloat(o.css("paddingTop")),a.left=Math.floor(.5*(t-r))+parseFloat(o.css("paddingLeft"))):"video"===e.contentType&&(r/(e=e.opts.width&&e.opts.height?r/s:e.opts.ratio||16/9)<s?s=r/e:s*e<r&&(r=s*e)),a.width=r,a.height=s,a)},update:function(n){var i=this;h.each(i.slides,function(e,t){i.updateSlide(t,n)})},updateSlide:function(e,t){var n=this,i=e&&e.$content,o=e.width||e.opts.width,r=e.height||e.opts.height,s=e.$slide;n.adjustCaption(e),i&&(o||r||"video"===e.contentType)&&!e.hasError&&(h.fancybox.stop(i),h.fancybox.setTranslate(i,n.getFitPos(e)),e.pos===n.currPos&&(n.isAnimating=!1,n.updateCursor())),n.adjustLayout(e),s.length&&(s.trigger("refresh"),e.pos===n.currPos&&n.$refs.toolbar.add(n.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar",s.get(0).scrollHeight>s.get(0).clientHeight)),n.trigger("onUpdate",e,t)},centerSlide:function(e){var t=this,n=t.current,i=n.$slide;!t.isClosing&&n&&(i.siblings().css({transform:"",opacity:""}),i.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"),h.fancybox.animate(i,{top:0,left:0,opacity:1},void 0===e?0:e,function(){i.css({transform:"",opacity:""}),n.isComplete||t.complete()},!1))},isMoved:function(e){var t,n=e||this.current;return!!n&&(t=h.fancybox.getTranslate(this.$refs.stage),e=h.fancybox.getTranslate(n.$slide),!n.$slide.hasClass("fancybox-animated")&&(.5<Math.abs(e.top-t.top)||.5<Math.abs(e.left-t.left)))},updateCursor:function(e,t){var n=this.current,i=this.$refs.container;n&&!this.isClosing&&this.Guestures&&(i.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),t=!!(e=this.canPan(e,t))||this.isZoomable(),i.toggleClass("fancybox-is-zoomable",t),h("[data-fancybox-zoom]").prop("disabled",!t),e?i.addClass("fancybox-can-pan"):t&&("zoom"===n.opts.clickContent||h.isFunction(n.opts.clickContent)&&"zoom"==n.opts.clickContent(n))?i.addClass("fancybox-can-zoomIn"):n.opts.touch&&(n.opts.touch.vertical||1<this.group.length)&&"video"!==n.contentType&&i.addClass("fancybox-can-swipe"))},isZoomable:function(){var e,t=this.current;if(t&&!this.isClosing&&"image"===t.type&&!t.hasError){if(!t.isLoaded)return!0;if((e=this.getFitPos(t))&&(t.width>e.width||t.height>e.height))return!0}return!1},isScaledDown:function(e,t){var n=!1,i=this.current,o=i.$content;return void 0!==e&&void 0!==t?n=e<i.width&&t<i.height:o&&(n=(n=h.fancybox.getTranslate(o)).width<i.width&&n.height<i.height),n},canPan:function(e,t){var n=this.current,i=null,o=!1;return"image"===n.type&&(n.isComplete||e&&t)&&!n.hasError&&(o=this.getFitPos(n),void 0!==e&&void 0!==t?i={width:e,height:t}:n.isComplete&&(i=h.fancybox.getTranslate(n.$content)),i&&o&&(o=1.5<Math.abs(i.width-o.width)||1.5<Math.abs(i.height-o.height))),o},loadSlide:function(n){var e,t,i,o=this;if(!n.isLoading&&!n.isLoaded){if(!(n.isLoading=!0)===o.trigger("beforeLoad",n))return n.isLoading=!1;switch(e=n.type,(t=n.$slide).off("refresh").trigger("onReset").addClass(n.opts.slideClass),e){case"image":o.setImage(n);break;case"iframe":o.setIframe(n);break;case"html":o.setContent(n,n.src||n.content);break;case"video":o.setContent(n,n.opts.video.tpl.replace(/\{\{src\}\}/gi,n.src).replace("{{format}}",n.opts.videoFormat||n.opts.video.format||"").replace("{{poster}}",n.thumb||""));break;case"inline":h(n.src).length?o.setContent(n,h(n.src)):o.setError(n);break;case"ajax":o.showLoading(n),i=h.ajax(h.extend({},n.opts.ajax.settings,{url:n.src,success:function(e,t){"success"===t&&o.setContent(n,e)},error:function(e,t){e&&"abort"!==t&&o.setError(n)}})),t.one("onReset",function(){i.abort()});break;default:o.setError(n)}return!0}},setImage:function(t){var e,n=this;setTimeout(function(){var e=t.$image;n.isClosing||!t.isLoading||e&&e.length&&e[0].complete||t.hasError||n.showLoading(t)},50),n.checkSrcset(t),t.$content=h('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image")),!1!==t.opts.preload&&t.opts.width&&t.opts.height&&t.thumb&&(t.width=t.opts.width,t.height=t.opts.height,(e=s.createElement("img")).onerror=function(){h(this).remove(),t.$ghost=null},e.onload=function(){n.afterLoad(t)},t.$ghost=h(e).addClass("fancybox-image").appendTo(t.$content).attr("src",t.thumb)),n.setBigImage(t)},checkSrcset:function(e){var t,n,i,o,r=e.opts.srcset||e.opts.image.srcset;if(r){i=l.devicePixelRatio||1,o=l.innerWidth*i,(n=r.split(",").map(function(e){var i={};return e.trim().split(/\s+/).forEach(function(e,t){var n=parseInt(e.substring(0,e.length-1),10);if(0===t)return i.url=e;n&&(i.value=n,i.postfix=e[e.length-1])}),i})).sort(function(e,t){return e.value-t.value});for(var s=0;s<n.length;s++){var a=n[s];if("w"===a.postfix&&a.value>=o||"x"===a.postfix&&a.value>=i){t=a;break}}(t=!t&&n.length?n[n.length-1]:t)&&(e.src=t.url,e.width&&e.height&&"w"==t.postfix&&(e.height=e.width/e.height*t.value,e.width=t.value),e.opts.srcset=r)}},setBigImage:function(t){var n=this,e=s.createElement("img"),i=h(e);t.$image=i.one("error",function(){n.setError(t)}).one("load",function(){var e;t.$ghost||(n.resolveImageSlideSize(t,this.naturalWidth,this.naturalHeight),n.afterLoad(t)),n.isClosing||(t.opts.srcset&&((e=t.opts.sizes)&&"auto"!==e||(e=(1<t.width/t.height&&1<o.width()/o.height()?"100":Math.round(t.width/t.height*100))+"vw"),i.attr("sizes",e).attr("srcset",t.opts.srcset)),t.$ghost&&setTimeout(function(){t.$ghost&&!n.isClosing&&t.$ghost.hide()},Math.min(300,Math.max(1e3,t.height/1600))),n.hideLoading(t))}).addClass("fancybox-image").attr("src",t.src).appendTo(t.$content),(e.complete||"complete"==e.readyState)&&i.naturalWidth&&i.naturalHeight?i.trigger("load"):e.error&&i.trigger("error")},resolveImageSlideSize:function(e,t,n){var i=parseInt(e.opts.width,10),o=parseInt(e.opts.height,10);e.width=t,e.height=n,0<i&&(e.width=i,e.height=Math.floor(i*n/t)),0<o&&(e.width=Math.floor(o*t/n),e.height=o)},setIframe:function(o){var r,t=this,s=o.opts.iframe,a=o.$slide;o.$content=h('<div class="fancybox-content'+(s.preload?" fancybox-is-hidden":"")+'"></div>').css(s.css).appendTo(a),a.addClass("fancybox-slide--"+o.contentType),o.$iframe=r=h(s.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(s.attr).appendTo(o.$content),s.preload?(t.showLoading(o),r.on("load.fb error.fb",function(e){this.isReady=1,o.$slide.trigger("refresh"),t.afterLoad(o)}),a.on("refresh.fb",function(){var e,t=o.$content,n=s.css.width,i=s.css.height;if(1===r[0].isReady){try{e=r.contents().find("body")}catch(e){}e&&e.length&&e.children().length&&(a.css("overflow","visible"),t.css({width:"100%","max-width":"100%",height:"9999px"}),void 0===n&&(n=Math.ceil(Math.max(e[0].clientWidth,e.outerWidth(!0)))),t.css("width",n||"").css("max-width",""),void 0===i&&(i=Math.ceil(Math.max(e[0].clientHeight,e.outerHeight(!0)))),t.css("height",i||""),a.css("overflow","auto")),t.removeClass("fancybox-is-hidden")}})):t.afterLoad(o),r.attr("src",o.src),a.one("onReset",function(){try{h(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(e){}h(this).off("refresh.fb").empty(),o.isLoaded=!1,o.isRevealed=!1})},setContent:function(e,t){var n;this.isClosing||(this.hideLoading(e),e.$content&&h.fancybox.stop(e.$content),e.$slide.empty(),(n=t)&&n.hasOwnProperty&&n instanceof h&&t.parent().length?((t.hasClass("fancybox-content")||t.parent().hasClass("fancybox-content"))&&t.parents(".fancybox-slide").trigger("onReset"),e.$placeholder=h("<div>").hide().insertAfter(t),t.css("display","inline-block")):e.hasError||("string"===h.type(t)&&(t=h("<div>").append(h.trim(t)).contents()),e.opts.filter&&(t=h("<div>").html(t).find(e.opts.filter))),e.$slide.one("onReset",function(){h(this).find("video,audio").trigger("pause"),e.$placeholder&&(e.$placeholder.after(t.removeClass("fancybox-content").hide()).remove(),e.$placeholder=null),e.$smallBtn&&(e.$smallBtn.remove(),e.$smallBtn=null),e.hasError||(h(this).empty(),e.isLoaded=!1,e.isRevealed=!1)}),h(t).appendTo(e.$slide),h(t).is("video,audio")&&(h(t).addClass("fancybox-video"),h(t).wrap("<div></div>"),e.contentType="video",e.opts.width=e.opts.width||h(t).attr("width"),e.opts.height=e.opts.height||h(t).attr("height")),e.$content=e.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),e.$content.siblings().hide(),e.$content.length||(e.$content=e.$slide.wrapInner("<div></div>").children().first()),e.$content.addClass("fancybox-content"),e.$slide.addClass("fancybox-slide--"+e.contentType),this.afterLoad(e))},setError:function(e){e.hasError=!0,e.$slide.trigger("onReset").removeClass("fancybox-slide--"+e.contentType).addClass("fancybox-slide--error"),e.contentType="html",this.setContent(e,this.translate(e,e.opts.errorTpl)),e.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(e){(e=e||this.current)&&!e.$spinner&&(e.$spinner=h(this.translate(this,this.opts.spinnerTpl)).appendTo(e.$slide).hide().fadeIn("fast"))},hideLoading:function(e){(e=e||this.current)&&e.$spinner&&(e.$spinner.stop().remove(),delete e.$spinner)},afterLoad:function(e){this.isClosing||(e.isLoading=!1,e.isLoaded=!0,this.trigger("afterLoad",e),this.hideLoading(e),!e.opts.smallBtn||e.$smallBtn&&e.$smallBtn.length||(e.$smallBtn=h(this.translate(e,e.opts.btnTpl.smallBtn)).appendTo(e.$content)),e.opts.protect&&e.$content&&!e.hasError&&(e.$content.on("contextmenu.fb",function(e){return 2==e.button&&e.preventDefault(),!0}),"image"===e.type&&h('<div class="fancybox-spaceball"></div>').appendTo(e.$content)),this.adjustCaption(e),this.adjustLayout(e),e.pos===this.currPos&&this.updateCursor(),this.revealContent(e))},adjustCaption:function(e){var t=e||this.current,n=t.opts.caption,i=t.opts.preventCaptionOverlap,o=this.$refs.caption,e=!1;o.toggleClass("fancybox-caption--separate",i),i&&n&&n.length&&(t.pos!==this.currPos?((o=o.clone().appendTo(o.parent())).children().eq(0).empty().html(n),e=o.outerHeight(!0),o.empty().remove()):this.$caption&&(e=this.$caption.outerHeight(!0)),t.$slide.css("padding-bottom",e||""))},adjustLayout:function(e){var t,n,i,o=e||this.current;o.isLoaded&&!0!==o.opts.disableLayoutFix&&(o.$content.css("margin-bottom",""),o.$content.outerHeight()>o.$slide.height()+.5&&(n=o.$slide[0].style["padding-bottom"],i=o.$slide.css("padding-bottom"),0<parseFloat(i)&&(e=o.$slide[0].scrollHeight,o.$slide.css("padding-bottom",0),Math.abs(e-o.$slide[0].scrollHeight)<1&&(t=i),o.$slide.css("padding-bottom",n))),o.$content.css("margin-bottom",t))},revealContent:function(e){var t,n,i,o,r=this,s=e.$slide,a=!1,l=!1,c=r.isMoved(e),u=e.isRevealed;return e.isRevealed=!0,t=e.opts[r.firstRun?"animationEffect":"transitionEffect"],i=e.opts[r.firstRun?"animationDuration":"transitionDuration"],i=parseInt(void 0===e.forcedDuration?i:e.forcedDuration,10),"zoom"===(t=c||e.pos!==r.currPos||!i?!1:t)&&(e.pos===r.currPos&&i&&"image"===e.type&&!e.hasError&&(l=r.getThumbPos(e))?a=r.getFitPos(e):t="fade"),"zoom"===t?(r.isAnimating=!0,a.scaleX=a.width/l.width,a.scaleY=a.height/l.height,(o="auto"==(o=e.opts.zoomOpacity)?.1<Math.abs(e.width/e.height-l.width/l.height):o)&&(l.opacity=.1,a.opacity=1),h.fancybox.setTranslate(e.$content.removeClass("fancybox-is-hidden"),l),p(e.$content),void h.fancybox.animate(e.$content,a,i,function(){r.isAnimating=!1,r.complete()})):(r.updateSlide(e),t?(h.fancybox.stop(s),n="fancybox-slide--"+(e.pos>=r.prevPos?"next":"previous")+" fancybox-animated fancybox-fx-"+t,s.addClass(n).removeClass("fancybox-slide--current"),e.$content.removeClass("fancybox-is-hidden"),p(s),"image"!==e.type&&e.$content.hide().show(0),void h.fancybox.animate(s,"fancybox-slide--current",i,function(){s.removeClass(n).css({transform:"",opacity:""}),e.pos===r.currPos&&r.complete()},!0)):(e.$content.removeClass("fancybox-is-hidden"),u||!c||"image"!==e.type||e.hasError||e.$content.hide().fadeIn("fast"),void(e.pos===r.currPos&&r.complete())))},getThumbPos:function(e){var t,n,i,o,r=e.$thumb;return!(!r||(!(i=r[0])||i.ownerDocument!==s||(h(".fancybox-container").css("pointer-events","none"),o={x:i.getBoundingClientRect().left+i.offsetWidth/2,y:i.getBoundingClientRect().top+i.offsetHeight/2},i=s.elementFromPoint(o.x,o.y)===i,h(".fancybox-container").css("pointer-events",""),!i)))&&(t=h.fancybox.getTranslate(r),e=parseFloat(r.css("border-top-width")||0),o=parseFloat(r.css("border-right-width")||0),i=parseFloat(r.css("border-bottom-width")||0),r=parseFloat(r.css("border-left-width")||0),n={top:t.top+e,left:t.left+r,width:t.width-o-r,height:t.height-e-i,scaleX:1,scaleY:1},0<t.width&&0<t.height&&n)},complete:function(){var e,n=this,t=n.current,i={};!n.isMoved()&&t.isLoaded&&(t.isComplete||(t.isComplete=!0,t.$slide.siblings().trigger("onReset"),n.preload("inline"),p(t.$slide),t.$slide.addClass("fancybox-slide--complete"),h.each(n.slides,function(e,t){t.pos>=n.currPos-1&&t.pos<=n.currPos+1?i[t.pos]=t:t&&(h.fancybox.stop(t.$slide),t.$slide.off().remove())}),n.slides=i),n.isAnimating=!1,n.updateCursor(),n.trigger("afterShow"),t.opts.video.autoStart&&t.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended",function(){Document.exitFullscreen?Document.exitFullscreen():this.webkitExitFullscreen&&this.webkitExitFullscreen(),n.next()}),t.opts.autoFocus&&"html"===t.contentType&&((e=t.$content.find("input[autofocus]:enabled:visible:first")).length?e.trigger("focus"):n.focus(null,!0)),t.$slide.scrollTop(0).scrollLeft(0))},preload:function(e){var t,n;this.group.length<2||(n=this.slides[this.currPos+1],(t=this.slides[this.currPos-1])&&t.type===e&&this.loadSlide(t),n&&n.type===e&&this.loadSlide(n))},focus:function(e,t){var n=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","video","audio","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");this.isClosing||((t=(t=!e&&this.current&&this.current.isComplete?this.current.$slide.find("*:visible"+(t?":not(.fancybox-close-small)":"")):this.$refs.container.find("*:visible")).filter(n).filter(function(){return"hidden"!==h(this).css("visibility")&&!h(this).hasClass("disabled")})).length?(n=t.index(s.activeElement),e&&e.shiftKey?(n<0||0==n)&&(e.preventDefault(),t.eq(t.length-1).trigger("focus")):(n<0||n==t.length-1)&&(e&&e.preventDefault(),t.eq(0).trigger("focus"))):this.$refs.container.trigger("focus"))},activate:function(){var t=this;h(".fancybox-container").each(function(){var e=h(this).data("FancyBox");e&&e.id!==t.id&&!e.isClosing&&(e.trigger("onDeactivate"),e.removeEvents(),e.isVisible=!1)}),t.isVisible=!0,(t.current||t.isIdle)&&(t.update(),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(e,t){function n(){l.cleanUp(e)}var i,o,r,s,a,l=this,c=l.current;return!l.isClosing&&(!(l.isClosing=!0)===l.trigger("beforeClose",e)?(l.isClosing=!1,u(function(){l.update()}),!1):(l.removeEvents(),r=c.$content,i=c.opts.animationEffect,o=h.isNumeric(t)?t:i?c.opts.animationDuration:0,c.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),!0!==e?h.fancybox.stop(c.$slide):i=!1,c.$slide.siblings().trigger("onReset").remove(),o&&l.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration",o+"ms"),l.hideLoading(c),l.hideControls(!0),l.updateCursor(),"zoom"===(i=!("zoom"!==i||r&&o&&"image"===c.type&&!l.isMoved()&&!c.hasError&&(a=l.getThumbPos(c)))?"fade":i)?(h.fancybox.stop(r),t={top:(s=h.fancybox.getTranslate(r)).top,left:s.left,scaleX:s.width/a.width,scaleY:s.height/a.height,width:a.width,height:a.height},(s="auto"==(s=c.opts.zoomOpacity)?.1<Math.abs(c.width/c.height-a.width/a.height):s)&&(a.opacity=0),h.fancybox.setTranslate(r,t),p(r),h.fancybox.animate(r,a,o,n)):i&&o?h.fancybox.animate(c.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"),"fancybox-animated fancybox-fx-"+i,o,n):!0===e?setTimeout(n,o):n(),!0))},cleanUp:function(e){var t,n=this.current.opts.$orig;this.current.$slide.trigger("onReset"),this.$refs.container.empty().remove(),this.trigger("afterClose",e),!this.current.opts.backFocus||(n=!(n&&n.length&&n.is(":visible"))?this.$trigger:n)&&n.length&&(t=l.scrollX,e=l.scrollY,n.trigger("focus"),h("html, body").scrollTop(e).scrollLeft(t)),this.current=null,(t=h.fancybox.getInstance())?t.activate():(h("body").removeClass("fancybox-active compensate-for-scrollbar"),h("#fancybox-style-noscroll").remove())},trigger:function(e,t){var n,i=Array.prototype.slice.call(arguments,1),t=t&&t.opts?t:this.current;if(t?i.unshift(t):t=this,i.unshift(this),!1===(n=h.isFunction(t.opts[e])?t.opts[e].apply(t,i):n))return n;("afterClose"!==e&&this.$refs?this.$refs.container:r).trigger(e+".fb",i)},updateControls:function(){var e=this,t=e.current,n=t.index,i=e.$refs.container,o=e.$refs.caption,r=t.opts.caption;t.$slide.trigger("refresh"),r&&r.length?(e.$caption=o).children().eq(0).html(r):e.$caption=null,e.hasHiddenControls||e.isIdle||e.showControls(),i.find("[data-fancybox-count]").html(e.group.length),i.find("[data-fancybox-index]").html(n+1),i.find("[data-fancybox-prev]").prop("disabled",!t.opts.loop&&n<=0),i.find("[data-fancybox-next]").prop("disabled",!t.opts.loop&&n>=e.group.length-1),"image"===t.type?i.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",t.opts.image.src||t.src).show():t.opts.toolbar&&i.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),h(s.activeElement).is(":hidden,[disabled]")&&e.$refs.container.trigger("focus")},hideControls:function(e){var t=["infobar","toolbar","nav"];!e&&this.current.opts.preventCaptionOverlap||t.push("caption"),this.$refs.container.removeClass(t.map(function(e){return"fancybox-show-"+e}).join(" ")),this.hasHiddenControls=!0},showControls:function(){var e=(this.current||this).opts,t=this.$refs.container;this.hasHiddenControls=!1,this.idleSecondsCounter=0,t.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&1<this.group.length)).toggleClass("fancybox-show-caption",!!this.$caption).toggleClass("fancybox-show-nav",!!(e.arrows&&1<this.group.length)).toggleClass("fancybox-is-modal",!!e.modal)},toggleControls:function(){this.hasHiddenControls?this.showControls():this.hideControls()}}),h.fancybox={version:"3.5.7",defaults:e,getInstance:function(e){var t=h('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),n=Array.prototype.slice.call(arguments,1);return t instanceof i&&("string"===h.type(e)?t[e].apply(t,n):"function"===h.type(e)&&e.apply(t,n),t)},open:function(e,t,n){return new i(e,t,n)},close:function(e){var t=this.getInstance();t&&(t.close(),!0===e&&this.close(e))},destroy:function(){this.close(!0),r.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:(e=s.createElement("div"),l.getComputedStyle&&l.getComputedStyle(e)&&l.getComputedStyle(e).getPropertyValue("transform")&&!(s.documentMode&&s.documentMode<11)),getTranslate:function(e){var t;return!(!e||!e.length)&&{top:(t=e[0].getBoundingClientRect()).top||0,left:t.left||0,width:t.width,height:t.height,opacity:parseFloat(e.css("opacity"))}},setTranslate:function(e,t){var n="",i={};if(e&&t)return void 0===t.left&&void 0===t.top||(n=(void 0===t.left?e.position():t).left+"px, "+(void 0===t.top?e.position():t).top+"px",n=this.use3d?"translate3d("+n+", 0px)":"translate("+n+")"),void 0!==t.scaleX&&void 0!==t.scaleY?n+=" scale("+t.scaleX+", "+t.scaleY+")":void 0!==t.scaleX&&(n+=" scaleX("+t.scaleX+")"),n.length&&(i.transform=n),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.width&&(i.width=t.width),void 0!==t.height&&(i.height=t.height),e.css(i)},animate:function(t,n,i,o,r){var s,a=this;h.isFunction(i)&&(o=i,i=null),a.stop(t),s=a.getTranslate(t),t.on(c,function(e){e&&e.originalEvent&&(!t.is(e.originalEvent.target)||"z-index"==e.originalEvent.propertyName)||(a.stop(t),h.isNumeric(i)&&t.css("transition-duration",""),h.isPlainObject(n)?void 0!==n.scaleX&&void 0!==n.scaleY&&a.setTranslate(t,{top:n.top,left:n.left,width:s.width*n.scaleX,height:s.height*n.scaleY,scaleX:1,scaleY:1}):!0!==r&&t.removeClass(n),h.isFunction(o)&&o(e))}),h.isNumeric(i)&&t.css("transition-duration",i+"ms"),h.isPlainObject(n)?(void 0!==n.scaleX&&void 0!==n.scaleY&&(delete n.width,delete n.height,t.parent().hasClass("fancybox-slide--image")&&t.parent().addClass("fancybox-is-scaling")),h.fancybox.setTranslate(t,n)):t.addClass(n),t.data("timer",setTimeout(function(){t.trigger(c)},i+33))},stop:function(e,t){e&&e.length&&(clearTimeout(e.data("timer")),t&&e.trigger(c),e.off(c).css("transition-duration",""),e.parent().removeClass("fancybox-is-scaling"))}},h.fn.fancybox=function(e){var t;return(t=(e=e||{}).selector||!1)?h("body").off("click.fb-start",t).on("click.fb-start",t,{options:e},n):this.off("click.fb-start").on("click.fb-start",{items:this,options:e},n),this},r.on("click.fb-start","[data-fancybox]",n),r.on("click.fb-start","[data-fancybox-trigger]",function(e){h('[data-fancybox="'+h(this).attr("data-fancybox-trigger")+'"]').eq(h(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:h(this)})}),f=null,r.on("mousedown mouseup focus blur",".fancybox-button",function(e){switch(e.type){case"mousedown":f=h(this);break;case"mouseup":f=null;break;case"focusin":h(".fancybox-button").removeClass("fancybox-focus"),h(this).is(f)||h(this).is("[disabled]")||h(this).addClass("fancybox-focus");break;case"focusout":h(".fancybox-button").removeClass("fancybox-focus")}})}var f}(window,document,jQuery),function(f){function h(n,e,t){if(n)return"object"===f.type(t=t||"")&&(t=f.param(t,!0)),f.each(e,function(e,t){n=n.replace("$"+e,t||"")}),t.length&&(n+=(0<n.indexOf("?")?"&":"?")+t),n}var i={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"https://www.youtube-nocookie.com/embed/$4",thumb:"https://img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/?ll="+(e[9]?e[9]+"&z="+Math.floor(e[10])+(e[12]?e[12].replace(/^\//,"&"):""):e[12]+"").replace(/\?/,"&")+"&output="+(e[12]&&0<e[12].indexOf("layer=c")?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/maps?q="+e[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}};f(document).on("objectNeedsType.fb",function(e,t,o){var r,s,a,l,c,u,d=o.src||"",p=!1,n=f.extend(!0,{},i,o.opts.media);f.each(n,function(e,t){if(s=d.match(t.matcher)){if(p=t.type,u=e,c={},t.paramPlace&&s[t.paramPlace]){l=(l="?"==(l=s[t.paramPlace])[0]?l.substring(1):l).split("&");for(var n=0;n<l.length;++n){var i=l[n].split("=",2);2==i.length&&(c[i[0]]=decodeURIComponent(i[1].replace(/\+/g," ")))}}return a=f.extend(!0,{},t.params,o.opts[e],c),d="function"===f.type(t.url)?t.url.call(this,s,a,o):h(t.url,s,a),r="function"===f.type(t.thumb)?t.thumb.call(this,s,a,o):h(t.thumb,s),"youtube"===e?d=d.replace(/&t=((\d+)m)?(\d+)s/,function(e,t,n,i){return"&start="+((n?60*parseInt(n,10):0)+parseInt(i,10))}):"vimeo"===e&&(d=d.replace("&%23","#")),!1}}),p?(o.opts.thumb||o.opts.$thumb&&o.opts.$thumb.length||(o.opts.thumb=r),"iframe"===p&&(o.opts=f.extend(!0,o.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),f.extend(o,{type:p,src:d,origSrc:o.src,contentSource:u,contentType:"image"===p?"image":"gmap_place"==u||"gmap_search"==u?"map":"video"})):d&&(o.type=o.opts.defaultType)});var o={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(e){var t,n=this;this[e].loaded?setTimeout(function(){n.done(e)}):this[e].loading||(this[e].loading=!0,(t=document.createElement("script")).type="text/javascript",t.src=this[e].src,"youtube"===e?window.onYouTubeIframeAPIReady=function(){n[e].loaded=!0,n.done(e)}:t.onload=function(){n[e].loaded=!0,n.done(e)},document.body.appendChild(t))},done:function(e){var t,n;"youtube"===e&&delete window.onYouTubeIframeAPIReady,(t=f.fancybox.getInstance())&&(n=t.current.$content.find("iframe"),"youtube"===e&&void 0!==YT&&YT?new YT.Player(n.attr("id"),{events:{onStateChange:function(e){0==e.data&&t.next()}}}):"vimeo"===e&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(n).on("ended",function(){t.next()}))}};f(document).on({"afterShow.fb":function(e,t,n){1<t.group.length&&("youtube"===n.contentSource||"vimeo"===n.contentSource)&&o.load(n.contentSource)}})}(jQuery),function(u,l,d){function p(e){var t,n=[];for(t in e=(e=e.originalEvent||e||u.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[t].pageX?n.push({x:e[t].pageX,y:e[t].pageY}):e[t].clientX&&n.push({x:e[t].clientX,y:e[t].clientY});return n}function f(e,t,n){return t&&e?"x"===n?e.x-t.x:"y"===n?e.y-t.y:Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)):0}function c(e){if(e.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe')||d.isFunction(e.get(0).onclick)||e.data("selectable"))return 1;for(var t=0,n=e[0].attributes,i=n.length;t<i;t++)if("data-fancybox-"===n[t].nodeName.substr(0,14))return 1}function h(e){for(var t,n,i,o=!1;(t=e.get(0),n=i=n=void 0,n=u.getComputedStyle(t)["overflow-y"],i=u.getComputedStyle(t)["overflow-x"],n=("scroll"===n||"auto"===n)&&t.scrollHeight>t.clientHeight,t=("scroll"===i||"auto"===i)&&t.scrollWidth>t.clientWidth,!(o=n||t))&&((e=e.parent()).length&&!e.hasClass("fancybox-stage")&&!e.is("body")););return o}function n(e){this.instance=e,this.$bg=e.$refs.bg,this.$stage=e.$refs.stage,this.$container=e.$refs.container,this.destroy(),this.$container.on("touchstart.fb.touch mousedown.fb.touch",d.proxy(this,"ontouchstart"))}var g=u.requestAnimationFrame||u.webkitRequestAnimationFrame||u.mozRequestAnimationFrame||u.oRequestAnimationFrame||function(e){return u.setTimeout(e,1e3/60)},m=u.cancelAnimationFrame||u.webkitCancelAnimationFrame||u.mozCancelAnimationFrame||u.oCancelAnimationFrame||function(e){u.clearTimeout(e)};n.prototype.destroy=function(){this.$container.off(".fb.touch"),d(l).off(".fb.touch"),this.requestId&&(m(this.requestId),this.requestId=null),this.tapped&&(clearTimeout(this.tapped),this.tapped=null)},n.prototype.ontouchstart=function(e){var t=this,n=d(e.target),i=t.instance,o=i.current,r=o.$slide,s=o.$content,a="touchstart"==e.type;if(a&&t.$container.off("mousedown.fb.touch"),(!e.originalEvent||2!=e.originalEvent.button)&&r.length&&n.length&&!c(n)&&!c(n.parent())&&(n.is("img")||!(e.originalEvent.clientX>n[0].clientWidth+n.offset().left))){if(!o||i.isAnimating||o.$slide.hasClass("fancybox-animated"))return e.stopPropagation(),void e.preventDefault();t.realPoints=t.startPoints=p(e),t.startPoints.length&&(o.touch&&e.stopPropagation(),t.startEvent=e,t.canTap=!0,t.$target=n,t.$content=s,t.opts=o.opts.touch,t.isPanning=!1,t.isSwiping=!1,t.isZooming=!1,t.isScrolling=!1,t.canPan=i.canPan(),t.startTime=(new Date).getTime(),t.distanceX=t.distanceY=t.distance=0,t.canvasWidth=Math.round(r[0].clientWidth),t.canvasHeight=Math.round(r[0].clientHeight),t.contentLastPos=null,t.contentStartPos=d.fancybox.getTranslate(t.$content)||{top:0,left:0},t.sliderStartPos=d.fancybox.getTranslate(r),t.stagePos=d.fancybox.getTranslate(i.$refs.stage),t.sliderStartPos.top-=t.stagePos.top,t.sliderStartPos.left-=t.stagePos.left,t.contentStartPos.top-=t.stagePos.top,t.contentStartPos.left-=t.stagePos.left,d(l).off(".fb.touch").on(a?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",d.proxy(t,"ontouchend")).on(a?"touchmove.fb.touch":"mousemove.fb.touch",d.proxy(t,"ontouchmove")),d.fancybox.isMobile&&l.addEventListener("scroll",t.onscroll,!0),((t.opts||t.canPan)&&(n.is(t.$stage)||t.$stage.find(n).length)||(n.is(".fancybox-image")&&e.preventDefault(),d.fancybox.isMobile&&n.parents(".fancybox-caption").length))&&(t.isScrollable=h(n)||h(n.parent()),d.fancybox.isMobile&&t.isScrollable||e.preventDefault(),1!==t.startPoints.length&&!o.hasError||(t.canPan?(d.fancybox.stop(t.$content),t.isPanning=!0):t.isSwiping=!0,t.$container.addClass("fancybox-is-grabbing")),2===t.startPoints.length&&"image"===o.type&&(o.isLoaded||o.$ghost)&&(t.canTap=!1,t.isSwiping=!1,t.isPanning=!1,t.isZooming=!0,d.fancybox.stop(t.$content),t.centerPointStartX=.5*(t.startPoints[0].x+t.startPoints[1].x)-d(u).scrollLeft(),t.centerPointStartY=.5*(t.startPoints[0].y+t.startPoints[1].y)-d(u).scrollTop(),t.percentageOfImageAtPinchPointX=(t.centerPointStartX-t.contentStartPos.left)/t.contentStartPos.width,t.percentageOfImageAtPinchPointY=(t.centerPointStartY-t.contentStartPos.top)/t.contentStartPos.height,t.startDistanceBetweenFingers=f(t.startPoints[0],t.startPoints[1]))))}},n.prototype.onscroll=function(e){this.isScrolling=!0,l.removeEventListener("scroll",this.onscroll,!0)},n.prototype.ontouchmove=function(e){var t=this;return void 0!==e.originalEvent.buttons&&0===e.originalEvent.buttons?void t.ontouchend(e):t.isScrolling?void(t.canTap=!1):(t.newPoints=p(e),void((t.opts||t.canPan)&&t.newPoints.length&&t.newPoints.length&&(t.isSwiping&&!0===t.isSwiping||e.preventDefault(),t.distanceX=f(t.newPoints[0],t.startPoints[0],"x"),t.distanceY=f(t.newPoints[0],t.startPoints[0],"y"),t.distance=f(t.newPoints[0],t.startPoints[0]),0<t.distance&&(t.isSwiping?t.onSwipe(e):t.isPanning?t.onPan():t.isZooming&&t.onZoom()))))},n.prototype.onSwipe=function(e){var o=this,r=o.instance,t=o.isSwiping,n=o.sliderStartPos.left||0;!0!==t?("x"==t&&(0<o.distanceX&&(o.instance.group.length<2||0===o.instance.current.index&&!o.instance.current.opts.loop)?n+=Math.pow(o.distanceX,.8):o.distanceX<0&&(o.instance.group.length<2||o.instance.current.index===o.instance.group.length-1&&!o.instance.current.opts.loop)?n-=Math.pow(-o.distanceX,.8):n+=o.distanceX),o.sliderLastPos={top:"x"==t?0:o.sliderStartPos.top+o.distanceY,left:n},o.requestId&&(m(o.requestId),o.requestId=null),o.requestId=g(function(){o.sliderLastPos&&(d.each(o.instance.slides,function(e,t){var n=t.pos-o.instance.currPos;d.fancybox.setTranslate(t.$slide,{top:o.sliderLastPos.top,left:o.sliderLastPos.left+n*o.canvasWidth+n*t.opts.gutter})}),o.$container.addClass("fancybox-is-sliding"))})):10<Math.abs(o.distance)&&(o.canTap=!1,r.group.length<2&&o.opts.vertical?o.isSwiping="y":r.isDragging||!1===o.opts.vertical||"auto"===o.opts.vertical&&800<d(u).width()?o.isSwiping="x":(n=Math.abs(180*Math.atan2(o.distanceY,o.distanceX)/Math.PI),o.isSwiping=45<n&&n<135?"y":"x"),"y"===o.isSwiping&&d.fancybox.isMobile&&o.isScrollable?o.isScrolling=!0:(r.isDragging=o.isSwiping,o.startPoints=o.newPoints,d.each(r.slides,function(e,t){var n,i;d.fancybox.stop(t.$slide),n=d.fancybox.getTranslate(t.$slide),i=d.fancybox.getTranslate(r.$refs.stage),t.$slide.css({transform:"",opacity:"","transition-duration":""}).removeClass("fancybox-animated").removeClass(function(e,t){return(t.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}),t.pos===r.current.pos&&(o.sliderStartPos.top=n.top-i.top,o.sliderStartPos.left=n.left-i.left),d.fancybox.setTranslate(t.$slide,{top:n.top-i.top,left:n.left-i.left})}),r.SlideShow&&r.SlideShow.isActive&&r.SlideShow.stop()))},n.prototype.onPan=function(){var e=this;f(e.newPoints[0],e.realPoints[0])<(d.fancybox.isMobile?10:5)?e.startPoints=e.newPoints:(e.canTap=!1,e.contentLastPos=e.limitMovement(),e.requestId&&m(e.requestId),e.requestId=g(function(){d.fancybox.setTranslate(e.$content,e.contentLastPos)}))},n.prototype.limitMovement=function(){var e=this.canvasWidth,t=this.canvasHeight,n=this.distanceX,i=this.distanceY,o=this.contentStartPos,r=o.left,s=o.top,a=o.width,l=o.height,c=e<a?r+n:r,u=s+i,d=Math.max(0,.5*e-.5*a),o=Math.max(0,.5*t-.5*l),a=Math.min(e-a,.5*e-.5*a),l=Math.min(t-l,.5*t-.5*l);return 0<n&&d<c&&(c=d-1+Math.pow(-d+r+n,.8)||0),n<0&&c<a&&(c=a+1-Math.pow(a-r-n,.8)||0),0<i&&o<u&&(u=o-1+Math.pow(-o+s+i,.8)||0),{top:u=i<0&&u<l?l+1-Math.pow(l-s-i,.8)||0:u,left:c}},n.prototype.limitPosition=function(e,t,n,i){var o=this.canvasWidth,r=this.canvasHeight;return e=o<n?(e=0<e?0:e)<o-n?o-n:e:Math.max(0,o/2-n/2),{top:t=r<i?(t=0<t?0:t)<r-i?r-i:t:Math.max(0,r/2-i/2),left:e}},n.prototype.onZoom=function(){var e=this,t=e.contentStartPos,n=t.width,i=t.height,o=t.left,r=t.top,s=f(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,a=Math.floor(n*s),l=Math.floor(i*s),c=(n-a)*e.percentageOfImageAtPinchPointX,t=(i-l)*e.percentageOfImageAtPinchPointY,n=(e.newPoints[0].x+e.newPoints[1].x)/2-d(u).scrollLeft(),i=(e.newPoints[0].y+e.newPoints[1].y)/2-d(u).scrollTop(),n=n-e.centerPointStartX,s={top:r+(t+(i-e.centerPointStartY)),left:o+(c+n),scaleX:s,scaleY:s};e.canTap=!1,e.newWidth=a,e.newHeight=l,e.contentLastPos=s,e.requestId&&m(e.requestId),e.requestId=g(function(){d.fancybox.setTranslate(e.$content,e.contentLastPos)})},n.prototype.ontouchend=function(e){var t=this,n=t.isSwiping,i=t.isPanning,o=t.isZooming,r=t.isScrolling;if(t.endPoints=p(e),t.dMs=Math.max((new Date).getTime()-t.startTime,1),t.$container.removeClass("fancybox-is-grabbing"),d(l).off(".fb.touch"),l.removeEventListener("scroll",t.onscroll,!0),t.requestId&&(m(t.requestId),t.requestId=null),t.isSwiping=!1,t.isPanning=!1,t.isZooming=!1,t.isScrolling=!1,t.instance.isDragging=!1,t.canTap)return t.onTap(e);t.speed=100,t.velocityX=t.distanceX/t.dMs*.5,t.velocityY=t.distanceY/t.dMs*.5,i?t.endPanning():o?t.endZooming():t.endSwiping(n,r)},n.prototype.endSwiping=function(e,t){var n=this,i=!1,o=n.instance.group.length,r=Math.abs(n.distanceX),r="x"==e&&1<o&&(130<n.dMs&&10<r||50<r);n.sliderLastPos=null,"y"==e&&!t&&50<Math.abs(n.distanceY)?(d.fancybox.animate(n.instance.current.$slide,{top:n.sliderStartPos.top+n.distanceY+150*n.velocityY,opacity:0},200),i=n.instance.close(!0,250)):r&&0<n.distanceX?i=n.instance.previous(300):r&&n.distanceX<0&&(i=n.instance.next(300)),!1!==i||"x"!=e&&"y"!=e||n.instance.centerSlide(200),n.$container.removeClass("fancybox-is-sliding")},n.prototype.endPanning=function(){var e,t,n=this;n.contentLastPos&&(t=!1===n.opts.momentum||350<n.dMs?(e=n.contentLastPos.left,n.contentLastPos.top):(e=n.contentLastPos.left+500*n.velocityX,n.contentLastPos.top+500*n.velocityY),(t=n.limitPosition(e,t,n.contentStartPos.width,n.contentStartPos.height)).width=n.contentStartPos.width,t.height=n.contentStartPos.height,d.fancybox.animate(n.$content,t,366))},n.prototype.endZooming=function(){var e,t,n=this,i=n.instance.current,o=n.newWidth,r=n.newHeight;n.contentLastPos&&(e=n.contentLastPos.left,t=n.contentLastPos.top,d.fancybox.setTranslate(n.$content,{top:t,left:e,width:o,height:r,scaleX:1,scaleY:1}),o<n.canvasWidth&&r<n.canvasHeight?n.instance.scaleToFit(150):o>i.width||r>i.height?n.instance.scaleToActual(n.centerPointStartX,n.centerPointStartY,150):(r=n.limitPosition(e,t,o,r),d.fancybox.animate(n.$content,r,150)))},n.prototype.onTap=function(t){function e(e){if(e=s.opts[e],e=d.isFunction(e)?e.apply(r,[s,t]):e)switch(e){case"close":r.close(i.startEvent);break;case"toggleControls":r.toggleControls();break;case"next":r.next();break;case"nextOrClose":1<r.group.length?r.next():r.close(i.startEvent);break;case"zoom":"image"==s.type&&(s.isLoaded||s.$ghost)&&(r.canPan()?r.scaleToFit():r.isScaledDown()?r.scaleToActual(l,c):r.group.length<2&&r.close(i.startEvent))}}var n,i=this,o=d(t.target),r=i.instance,s=r.current,a=t&&p(t)||i.startPoints,l=a[0]?a[0].x-d(u).scrollLeft()-i.stagePos.left:0,c=a[0]?a[0].y-d(u).scrollTop()-i.stagePos.top:0;if((!t.originalEvent||2!=t.originalEvent.button)&&(o.is("img")||!(l>o[0].clientWidth+o.offset().left))){if(o.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))n="Outside";else if(o.is(".fancybox-slide"))n="Slide";else{if(!r.current.$content||!r.current.$content.find(o).addBack().filter(o).length)return;n="Content"}if(i.tapped){if(clearTimeout(i.tapped),i.tapped=null,50<Math.abs(l-i.tapX)||50<Math.abs(c-i.tapY))return this;e("dblclick"+n)}else i.tapX=l,i.tapY=c,s.opts["dblclick"+n]&&s.opts["dblclick"+n]!==s.opts["click"+n]?i.tapped=setTimeout(function(){i.tapped=null,r.isAnimating||e("click"+n)},500):e("click"+n);return this}},d(l).on("onActivate.fb",function(e,t){t&&!t.Guestures&&(t.Guestures=new n(t))}).on("beforeClose.fb",function(e,t){t&&t.Guestures&&t.Guestures.destroy()})}(window,document,jQuery),function(r,s){s.extend(!0,s.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});function n(e){this.instance=e,this.init()}s.extend(n.prototype,{timer:null,isActive:!1,$button:null,init:function(){var e=this,t=e.instance,n=t.group[t.currIndex].opts.slideShow;e.$button=t.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){e.toggle()}),t.group.length<2||!n?e.$button.hide():n.progress&&(e.$progress=s('<div class="fancybox-progress"></div>').appendTo(t.$refs.inner))},set:function(e){var t=this.instance,n=t.current;n&&(!0===e||n.opts.loop||t.currIndex<t.group.length-1)?this.isActive&&"video"!==n.contentType&&(this.$progress&&s.fancybox.animate(this.$progress.show(),{scaleX:1},n.opts.slideShow.speed),this.timer=setTimeout(function(){t.current.opts.loop||t.current.index!=t.group.length-1?t.next():t.jumpTo(0)},n.opts.slideShow.speed)):(this.stop(),t.idleSecondsCounter=0,t.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null,this.$progress&&this.$progress.removeAttr("style").hide()},start:function(){var e=this.instance.current;e&&(this.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),this.isActive=!0,e.isComplete&&this.set(!0),this.instance.trigger("onSlideShowChange",!0))},stop:function(){var e=this.instance.current;this.clear(),this.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),this.isActive=!1,this.instance.trigger("onSlideShowChange",!1),this.$progress&&this.$progress.removeAttr("style").hide()},toggle:function(){this.isActive?this.stop():this.start()}}),s(r).on({"onInit.fb":function(e,t){t&&!t.SlideShow&&(t.SlideShow=new n(t))},"beforeShow.fb":function(e,t,n,i){t=t&&t.SlideShow;i?t&&n.opts.slideShow.autoStart&&t.start():t&&t.isActive&&t.clear()},"afterShow.fb":function(e,t,n){t=t&&t.SlideShow;t&&t.isActive&&t.set()},"afterKeydown.fb":function(e,t,n,i,o){t=t&&t.SlideShow;!t||!n.opts.slideShow||80!==o&&32!==o||s(r.activeElement).is("button,a,input")||(i.preventDefault(),t.toggle())},"beforeClose.fb onDeactivate.fb":function(e,t){t=t&&t.SlideShow;t&&t.stop()}}),s(r).on("visibilitychange",function(){var e=s.fancybox.getInstance(),e=e&&e.SlideShow;e&&e.isActive&&(r.hidden?e.clear():e.set())})}(document,jQuery),function(r,n){var i,o=function(){for(var e=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],t={},n=0;n<e.length;n++){var i=e[n];if(i&&i[1]in r){for(var o=0;o<i.length;o++)t[e[0][o]]=i[o];return t}}return!1}();o&&(n.extend(!0,n.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!(i={request:function(e){(e=e||r.documentElement)[o.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){r[o.exitFullscreen]()},toggle:function(e){e=e||r.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(r[o.fullscreenElement])},enabled:function(){return Boolean(r[o.fullscreenEnabled])}})}}),n(r).on(o.fullscreenchange,function(){var e=i.isFullscreen(),t=n.fancybox.getInstance();t&&(t.current&&"image"===t.current.type&&t.isAnimating&&(t.isAnimating=!1,t.update(!0,!0,0),t.isComplete||t.complete()),t.trigger("onFullscreenChange",e),t.$refs.container.toggleClass("fancybox-is-fullscreen",e),t.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!e).toggleClass("fancybox-button--fsexit",e))})),n(r).on({"onInit.fb":function(e,t){o?t&&t.group[t.currIndex].opts.fullScreen?(t.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(e){e.stopPropagation(),e.preventDefault(),i.toggle()}),t.opts.fullScreen&&!0===t.opts.fullScreen.autoStart&&i.request(),t.FullScreen=i):t&&t.$refs.toolbar.find("[data-fancybox-fullscreen]").hide():t.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(e,t,n,i,o){t&&t.FullScreen&&70===o&&(i.preventDefault(),t.FullScreen.toggle())},"beforeClose.fb":function(e,t){t&&t.FullScreen&&t.$refs.container.hasClass("fancybox-is-fullscreen")&&i.exit()}})}(document,jQuery),function(e,r){var s="fancybox-thumbs";r.fancybox.defaults=r.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},r.fancybox.defaults);function n(e){this.init(e)}r.extend(n.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(e){var t=this,n=e.group,i=0;t.instance=e,t.opts=n[e.currIndex].opts.thumbs,(e.Thumbs=t).$button=e.$refs.toolbar.find("[data-fancybox-thumbs]");for(var o=0,r=n.length;o<r&&(n[o].thumb&&i++,!(1<i));o++);1<i&&t.opts?(t.$button.removeAttr("style").on("click",function(){t.toggle()}),t.isActive=!0):t.$button.hide()},create:function(){var n,e=this,t=e.instance,i=e.opts.parentEl,o=[];e.$grid||(e.$grid=r('<div class="'+s+" "+s+"-"+e.opts.axis+'"></div>').appendTo(t.$refs.container.find(i).addBack().filter(i)),e.$grid.on("click","a",function(){t.jumpTo(r(this).attr("data-index"))})),e.$list||(e.$list=r('<div class="'+s+'__list">').appendTo(e.$grid)),r.each(t.group,function(e,t){(n=t.thumb)||"image"!==t.type||(n=t.src),o.push('<a href="javascript:;" tabindex="0" data-index="'+e+'"'+(n&&n.length?' style="background-image:url('+n+')"':'class="fancybox-thumbs-missing"')+"></a>")}),e.$list[0].innerHTML=o.join(""),"x"===e.opts.axis&&e.$list.width(parseInt(e.$grid.css("padding-right"),10)+t.group.length*e.$list.children().eq(0).outerWidth(!0))},focus:function(e){var t,n,i=this.$list,o=this.$grid;this.instance.current&&(n=(t=i.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+this.instance.current.index+'"]').addClass("fancybox-thumbs-active")).position(),"y"===this.opts.axis&&(n.top<0||n.top>i.height()-t.outerHeight())?i.stop().animate({scrollTop:i.scrollTop()+n.top},e):"x"===this.opts.axis&&(n.left<o.scrollLeft()||n.left>o.scrollLeft()+(o.width()-t.outerWidth()))&&i.parent().stop().animate({scrollLeft:n.left},e))},update:function(){this.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),this.isVisible?(this.$grid||this.create(),this.instance.trigger("onThumbsShow"),this.focus(0)):this.$grid&&this.instance.trigger("onThumbsHide"),this.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),r(e).on({"onInit.fb":function(e,t){!t||t.Thumbs||(t=new n(t)).isActive&&!0===t.opts.autoStart&&t.show()},"beforeShow.fb":function(e,t,n,i){t=t&&t.Thumbs;t&&t.isVisible&&t.focus(i?0:250)},"afterKeydown.fb":function(e,t,n,i,o){t=t&&t.Thumbs;t&&t.isActive&&71===o&&(i.preventDefault(),t.toggle())},"beforeClose.fb":function(e,t){t=t&&t.Thumbs;t&&t.isVisible&&!1!==t.opts.hideOnClose&&t.$grid.hide()}})}(document,jQuery),function(e,o){o.extend(!0,o.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(e,t){return!e.currentHash&&"inline"!==t.type&&"html"!==t.type&&(t.origSrc||t.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),o(e).on("click","[data-fancybox-share]",function(){var e,t,n=o.fancybox.getInstance(),i=n.current||null;i&&("function"===o.type(i.opts.share.url)&&(e=i.opts.share.url.apply(i,[n,i])),e=i.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===i.type?encodeURIComponent(i.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(e)).replace(/\{\{url_raw\}\}/g,(t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},String(e).replace(/[&<>"'`=\/]/g,function(e){return t[e]}))).replace(/\{\{descr\}\}/g,n.$caption?encodeURIComponent(n.$caption.text()):""),o.fancybox.open({src:n.translate(n,e),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(e,t){n.$refs.container.one("beforeClose.fb",function(){e.close(null,0)}),t.$content.find(".fancybox-share__button").click(function(){return window.open(this.href,"Share","width=550, height=450"),!1})},mobile:{autoFocus:!1}}}))})}(document,jQuery),function(r,s,i){function o(){var e=r.location.hash.substr(1),t=e.split("-"),n=1<t.length&&/^\+?\d+$/.test(t[t.length-1])&&parseInt(t.pop(-1),10)||1;return{hash:e,index:n<1?1:n,gallery:t.join("-")}}function t(e){""!==e.gallery&&i("[data-fancybox='"+i.escapeSelector(e.gallery)+"']").eq(e.index-1).focus().trigger("click.fb-start")}function a(e){return!!e&&(""!==(e=(e=(e.current||e).opts).hash||(e.$orig?e.$orig.data("fancybox")||e.$orig.data("fancybox-trigger"):""))&&e)}i.escapeSelector||(i.escapeSelector=function(e){return(e+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e})}),i(function(){!1!==i.fancybox.defaults.hash&&(i(s).on({"onInit.fb":function(e,t){var n,i;!1!==t.group[t.currIndex].opts.hash&&(n=o(),(i=a(t))&&n.gallery&&i==n.gallery&&(t.currIndex=n.index-1))},"beforeShow.fb":function(e,t,n,i){var o;n&&!1!==n.opts.hash&&(o=a(t))&&(t.currentHash=o+(1<t.group.length?"-"+(n.index+1):""),r.location.hash!=="#"+t.currentHash&&(i&&!t.origHash&&(t.origHash=r.location.hash),t.hashTimer&&clearTimeout(t.hashTimer),t.hashTimer=setTimeout(function(){"replaceState"in r.history?(r.history[i?"pushState":"replaceState"]({},s.title,r.location.pathname+r.location.search+"#"+t.currentHash),i&&(t.hasCreatedHistory=!0)):r.location.hash=t.currentHash,t.hashTimer=null},300)))},"beforeClose.fb":function(e,t,n){n&&!1!==n.opts.hash&&(clearTimeout(t.hashTimer),t.currentHash&&t.hasCreatedHistory?r.history.back():t.currentHash&&("replaceState"in r.history?r.history.replaceState({},s.title,r.location.pathname+r.location.search+(t.origHash||"")):r.location.hash=t.origHash),t.currentHash=null)}}),i(r).on("hashchange.fb",function(){var e=o(),n=null;i.each(i(".fancybox-container").get().reverse(),function(e,t){t=i(t).data("FancyBox");if(t&&t.currentHash)return n=t,!1}),n?n.currentHash===e.gallery+"-"+e.index||1===e.index&&n.currentHash==e.gallery||(n.currentHash=null,n.close()):""!==e.gallery&&t(e)}),setTimeout(function(){i.fancybox.getInstance()||t(o())},50))})}(window,document,jQuery),function(e,t){var o=(new Date).getTime();t(e).on({"onInit.fb":function(e,i,t){i.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",function(e){var t=i.current,n=(new Date).getTime();i.group.length<2||!1===t.opts.wheel||"auto"===t.opts.wheel&&"image"!==t.type||(e.preventDefault(),e.stopPropagation(),t.$slide.hasClass("fancybox-animated")||(e=e.originalEvent||e,n-o<250||(o=n,i[(-e.deltaY||-e.deltaX||e.wheelDelta||-e.detail)<0?"next":"previous"]())))})}})}(document,jQuery);var init=function(){for(var e=new ymaps.Map("map",{center:[55.751688,37.604105],zoom:13,controls:[]}),t=[[55.74344831594532,37.580411528507426],[55.75803366807345,37.58317508517665],[55.74973712934959,37.60500786680653],[55.75838518050675,37.62380938245144]],n=new ymaps.GeoObjectCollection({},{iconLayout:"default#image",iconImageHref:"./img/map-icon.svg",iconImageSize:[58,73],iconImageOffset:[-25,-55],draggable:!1}),i=0;i<t.length;i++)n.add(new ymaps.Placemark(t[i]));e.geoObjects.add(n),e.behaviors.disable("scrollZoom")};ymaps.ready(init),$(document).ready(function(){var t,n;t=document.querySelector(".menu"),(n=document.querySelector(".burger")).addEventListener("click",function(){t.classList.toggle("menu--active"),n.classList.toggle("burger--active"),t.classList.contains("menu--active")?(document.querySelector(".wrapper").style.overflow="hidden",document.querySelector(".wrapper").style.height="100vh"):document.querySelector(".wrapper").style.overflow="scroll"}),t.addEventListener("click",function(e){t.classList.contains("menu--active")&&e.target.classList.contains("menu__item-link")&&(t.classList.toggle("menu--active"),n.classList.toggle("active"),document.querySelector(".wrapper").style.overflow="scroll")})});var wrapper=$(".maincontent"),sections=$(".section"),fixedMenu=$(".fixed-menu"),menuItems=fixedMenu.find(".fixed-menu__item");sections.first().addClass("active");var player,inScroll=!1,countSectionPosition=function(e){return-100*e},changeMenuTheme=function(e){"black"===sections.eq(e).attr("data-fixedMenu-color")?fixedMenu.addClass("fixed-menu--shadowed"):fixedMenu.removeClass("fixed-menu--shadowed")},resetActiveClassForItem=function(e,t,n){e.eq(t).addClass(n).siblings().removeClass(n)},performTransition=function(e){var t;!1===inScroll&&(inScroll=!0,t=countSectionPosition(e),changeMenuTheme(e),wrapper.css({transform:"translateY(".concat(t,"%)")}),resetActiveClassForItem(sections,e,"active"),resetActiveClassForItem(menuItems,e,"fixed-menu__item--active"),setTimeout(function(){inScroll=!1},600))},scrollViewport=function(e){var t=sections.filter(".active"),n=t.next(),t=t.prev();"next"===e&&n.length&&performTransition(n.index()),"prev"===e&&t.length&&performTransition(t.index())};$(window).on("wheel",function(e){e=e.originalEvent.deltaY;console.log(e),0<e&&scrollViewport("next"),e<0&&scrollViewport("prev")}),$(window).on("keydown",function(e){var t=e.target.tagName.toLowerCase();if("input"!==t&&"textarea"!==t)switch(e.keyCode){case 38:scrollViewport("prev");break;case 40:scrollViewport("next")}}),$("[data-scroll-to]").click(function(e){e.preventDefault();e=$(e.currentTarget).attr("data-scroll-to"),e=$("[data-section-id=".concat(e,"]"));performTransition(e.index())}),$("body").swipe({swipe:function(e,t){alert(t),viewportScroller()["down"===t?"prev":"up"===t?"next":""]()}});var playerContainer=$(".player__start"),playerWidth=$(".player").width(),playerHeight=$(".player").height(),eventInit=function(){$(".player__start").click(function(e){e.preventDefault();$(e.currentTarget);playerContainer.hasClass("paused")?player.pauseVideo():player.playVideo()}),$(".player__playback").click(function(e){var t=$(e.currentTarget),e=e.originalEvent.layerX/t.width()*100,t=player.getDuration()/100*e;$(".player__playback-button").css("left","".concat(e,"%")),player.seekTo(t)})},formatTime=function(e){var t=Math.round(e),e=n(Math.floor(t/60)),t=n(t-60*e);function n(e){return e<10?"0".concat(e):e}return"".concat(e,":").concat(t)},onPlayerReady=function(){var e,n=player.getDuration();$(".player__duration-estimate").text(formatTime(n)),void 0!==e&&clearInterval(e),e=setInterval(function(){var e=player.getCurrentTime(),t=e/n*100;$(".player__playback-button").css("left","".concat(t,"%")),$(".player__duration-completed").text(formatTime(e))},1e3)},onPlayerStateChange=function(e){switch(e.data){case 1:playerContainer.addClass("paused"),playerContainer.addClass("active");break;case 2:playerContainer.removeClass("active"),playerContainer.removeClass("paused")}};function onYouTubeIframeAPIReady(){player=new YT.Player("yt-player",{height:"100%",width:"100%",videoId:"LXb3EKWsInQ",events:{onReady:onPlayerReady,onStateChange:onPlayerStateChange},playerVars:{controls:0,disablekb:0,showinfo:0,rel:0,autoplay:0,modestbranding:0}})}eventInit(),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(c){var i,r=window.Slick||{};i=0,(r=function(e,t){var n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:c(e),appendDots:c(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return c('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},c.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=c(e),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,e=c(e).data("slick")||{},n.options=c.extend({},n.defaults,t,e),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=c.proxy(n.autoPlay,n),n.autoPlayClear=c.proxy(n.autoPlayClear,n),n.autoPlayIterator=c.proxy(n.autoPlayIterator,n),n.changeSlide=c.proxy(n.changeSlide,n),n.clickHandler=c.proxy(n.clickHandler,n),n.selectHandler=c.proxy(n.selectHandler,n),n.setPosition=c.proxy(n.setPosition,n),n.swipeHandler=c.proxy(n.swipeHandler,n),n.dragHandler=c.proxy(n.dragHandler,n),n.keyHandler=c.proxy(n.keyHandler,n),n.instanceUid=i++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,t,n){var i=this;if("boolean"==typeof t)n=t,t=null;else if(t<0||t>=i.slideCount)return!1;i.unload(),"number"==typeof t?0===t&&0===i.$slides.length?c(e).appendTo(i.$slideTrack):n?c(e).insertBefore(i.$slides.eq(t)):c(e).insertAfter(i.$slides.eq(t)):!0===n?c(e).prependTo(i.$slideTrack):c(e).appendTo(i.$slideTrack),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slides.each(function(e,t){c(t).attr("data-slick-index",e)}),i.$slidesCache=i.$slides,i.reinit()},r.prototype.animateHeight=function(){var e;1===this.options.slidesToShow&&!0===this.options.adaptiveHeight&&!1===this.options.vertical&&(e=this.$slides.eq(this.currentSlide).outerHeight(!0),this.$list.animate({height:e},this.options.speed))},r.prototype.animateSlide=function(e,t){var n={},i=this;i.animateHeight(),!0===i.options.rtl&&!1===i.options.vertical&&(e=-e),!1===i.transformsEnabled?!1===i.options.vertical?i.$slideTrack.animate({left:e},i.options.speed,i.options.easing,t):i.$slideTrack.animate({top:e},i.options.speed,i.options.easing,t):!1===i.cssTransitions?(!0===i.options.rtl&&(i.currentLeft=-i.currentLeft),c({animStart:i.currentLeft}).animate({animStart:e},{duration:i.options.speed,easing:i.options.easing,step:function(e){e=Math.ceil(e),!1===i.options.vertical?n[i.animType]="translate("+e+"px, 0px)":n[i.animType]="translate(0px,"+e+"px)",i.$slideTrack.css(n)},complete:function(){t&&t.call()}})):(i.applyTransition(),e=Math.ceil(e),!1===i.options.vertical?n[i.animType]="translate3d("+e+"px, 0px, 0px)":n[i.animType]="translate3d(0px,"+e+"px, 0px)",i.$slideTrack.css(n),t&&setTimeout(function(){i.disableTransition(),t.call()},i.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e=e&&null!==e?c(e).not(this.$slider):e},r.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==_typeof(e)&&e.each(function(){var e=c(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},r.prototype.applyTransition=function(e){var t=this,n={};!1===t.options.fade?n[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:n[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,(!1===t.options.fade?t.$slideTrack:t.$slides.eq(e)).css(n)},r.prototype.autoPlay=function(){this.autoPlayClear(),this.slideCount>this.options.slidesToShow&&(this.autoPlayTimer=setInterval(this.autoPlayIterator,this.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=c(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=c(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,t;if(!0===this.options.dots){for(this.$slider.addClass("slick-dotted"),t=c("<ul />").addClass(this.options.dotsClass),e=0;e<=this.getDotCount();e+=1)t.append(c("<li />").append(this.options.customPaging.call(this,this,e)));this.$dots=t.appendTo(this.options.appendDots),this.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){c(t).attr("data-slick-index",e).data("originalStyling",c(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?c('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),c("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,t,n,i=this,o=document.createDocumentFragment(),r=i.$slider.children();if(1<i.options.rows){for(n=i.options.slidesPerRow*i.options.rows,t=Math.ceil(r.length/n),e=0;e<t;e++){for(var s=document.createElement("div"),a=0;a<i.options.rows;a++){for(var l=document.createElement("div"),c=0;c<i.options.slidesPerRow;c++){var u=e*n+(a*i.options.slidesPerRow+c);r.get(u)&&l.appendChild(r.get(u))}s.appendChild(l)}o.appendChild(s)}i.$slider.empty().append(o),i.$slider.children().children().children().css({width:100/i.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,t){var n,i,o,r=this,s=!1,a=r.$slider.width(),l=window.innerWidth||c(window).width();if("window"===r.respondTo?o=l:"slider"===r.respondTo?o=a:"min"===r.respondTo&&(o=Math.min(l,a)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){for(n in i=null,r.breakpoints)r.breakpoints.hasOwnProperty(n)&&(!1===r.originalSettings.mobileFirst?o<r.breakpoints[n]&&(i=r.breakpoints[n]):o>r.breakpoints[n]&&(i=r.breakpoints[n]));null!==i?null!==r.activeBreakpoint&&i===r.activeBreakpoint&&!t||(r.activeBreakpoint=i,"unslick"===r.breakpointSettings[i]?r.unslick(i):(r.options=c.extend({},r.originalSettings,r.breakpointSettings[i]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),s=i):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),s=i),e||!1===s||r.$slider.trigger("breakpoint",[r,s])}},r.prototype.changeSlide=function(e,t){var n,i=this,o=c(e.currentTarget);switch(o.is("a")&&e.preventDefault(),o.is("li")||(o=o.closest("li")),n=i.slideCount%i.options.slidesToScroll!=0?0:(i.slideCount-i.currentSlide)%i.options.slidesToScroll,e.data.message){case"previous":r=0==n?i.options.slidesToScroll:i.options.slidesToShow-n,i.slideCount>i.options.slidesToShow&&i.slideHandler(i.currentSlide-r,!1,t);break;case"next":r=0==n?i.options.slidesToScroll:n,i.slideCount>i.options.slidesToShow&&i.slideHandler(i.currentSlide+r,!1,t);break;case"index":var r=0===e.data.index?0:e.data.index||o.index()*i.options.slidesToScroll;i.slideHandler(i.checkNavigable(r),!1,t),o.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var t=this.getNavigableIndexes(),n=0;if(e>t[t.length-1])e=t[t.length-1];else for(var i in t){if(e<t[i]){e=n;break}n=t[i]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(c("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",c.proxy(e.interrupt,e,!0)).off("mouseleave.slick",c.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),c(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().off("click.slick",e.selectHandler),c(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),c(window).off("resize.slick.slick-"+e.instanceUid,e.resize),c("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),c(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){this.$list.off("mouseenter.slick",c.proxy(this.interrupt,this,!0)),this.$list.off("mouseleave.slick",c.proxy(this.interrupt,this,!1))},r.prototype.cleanUpRows=function(){var e;1<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),c(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){c(this).attr("style",c(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},r.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",(!1===this.options.fade?this.$slideTrack:this.$slides.eq(e)).css(t)},r.prototype.fadeSlide=function(e,t){var n=this;!1===n.cssTransitions?(n.$slides.eq(e).css({zIndex:n.options.zIndex}),n.$slides.eq(e).animate({opacity:1},n.options.speed,n.options.easing,t)):(n.applyTransition(e),n.$slides.eq(e).css({opacity:1,zIndex:n.options.zIndex}),t&&setTimeout(function(){n.disableTransition(e),t.call()},n.options.speed))},r.prototype.fadeSlideOut=function(e){!1===this.cssTransitions?this.$slides.eq(e).animate({opacity:0,zIndex:this.options.zIndex-2},this.options.speed,this.options.easing):(this.applyTransition(e),this.$slides.eq(e).css({opacity:0,zIndex:this.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){null!==e&&(this.$slidesCache=this.$slides,this.unload(),this.$slideTrack.children(this.options.slide).detach(),this.$slidesCache.filter(e).appendTo(this.$slideTrack),this.reinit())},r.prototype.focusHandler=function(){var n=this;n.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=c(this);setTimeout(function(){n.options.pauseOnFocus&&(n.focussed=t.is(":focus"),n.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,t=0,n=0,i=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++i;else for(;t<e.slideCount;)++i,t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)i=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++i,t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else i=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return i-1},r.prototype.getLeft=function(e){var t,n,i=this,o=0;return i.slideOffset=0,t=i.$slides.first().outerHeight(!0),!0===i.options.infinite?(i.slideCount>i.options.slidesToShow&&(i.slideOffset=i.slideWidth*i.options.slidesToShow*-1,n=-1,!0===i.options.vertical&&!0===i.options.centerMode&&(2===i.options.slidesToShow?n=-1.5:1===i.options.slidesToShow&&(n=-2)),o=t*i.options.slidesToShow*n),i.slideCount%i.options.slidesToScroll!=0&&e+i.options.slidesToScroll>i.slideCount&&i.slideCount>i.options.slidesToShow&&(o=e>i.slideCount?(i.slideOffset=(i.options.slidesToShow-(e-i.slideCount))*i.slideWidth*-1,(i.options.slidesToShow-(e-i.slideCount))*t*-1):(i.slideOffset=i.slideCount%i.options.slidesToScroll*i.slideWidth*-1,i.slideCount%i.options.slidesToScroll*t*-1))):e+i.options.slidesToShow>i.slideCount&&(i.slideOffset=(e+i.options.slidesToShow-i.slideCount)*i.slideWidth,o=(e+i.options.slidesToShow-i.slideCount)*t),i.slideCount<=i.options.slidesToShow&&(o=i.slideOffset=0),!0===i.options.centerMode&&i.slideCount<=i.options.slidesToShow?i.slideOffset=i.slideWidth*Math.floor(i.options.slidesToShow)/2-i.slideWidth*i.slideCount/2:!0===i.options.centerMode&&!0===i.options.infinite?i.slideOffset+=i.slideWidth*Math.floor(i.options.slidesToShow/2)-i.slideWidth:!0===i.options.centerMode&&(i.slideOffset=0,i.slideOffset+=i.slideWidth*Math.floor(i.options.slidesToShow/2)),t=!1===i.options.vertical?e*i.slideWidth*-1+i.slideOffset:e*t*-1+o,!0===i.options.variableWidth&&(o=i.slideCount<=i.options.slidesToShow||!1===i.options.infinite?i.$slideTrack.children(".slick-slide").eq(e):i.$slideTrack.children(".slick-slide").eq(e+i.options.slidesToShow),t=!0===i.options.rtl?o[0]?-1*(i.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===i.options.centerMode&&(o=i.slideCount<=i.options.slidesToShow||!1===i.options.infinite?i.$slideTrack.children(".slick-slide").eq(e):i.$slideTrack.children(".slick-slide").eq(e+i.options.slidesToShow+1),t=!0===i.options.rtl?o[0]?-1*(i.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,t+=(i.$list.width()-o.outerWidth())/2)),t},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){for(var e=this,t=0,n=0,i=[],o=!1===e.options.infinite?e.slideCount:(t=-1*e.options.slidesToScroll,n=-1*e.options.slidesToScroll,2*e.slideCount);t<o;)i.push(t),t=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return i},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var n,i=this,o=!0===i.options.centerMode?i.slideWidth*Math.floor(i.options.slidesToShow/2):0;return!0===i.options.swipeToSlide?(i.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-o+c(t).outerWidth()/2>-1*i.swipeLeft)return n=t,!1}),Math.abs(c(n).attr("data-slick-index")-i.currentSlide)||1):i.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},r.prototype.init=function(e){var t=this;c(t.$slider).hasClass("slick-initialized")||(c(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},r.prototype.initADA=function(){var n=this,i=Math.ceil(n.slideCount/n.options.slidesToShow),o=n.getNavigableIndexes().filter(function(e){return 0<=e&&e<n.slideCount});n.$slides.add(n.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==n.$dots&&(n.$slides.not(n.$slideTrack.find(".slick-cloned")).each(function(e){var t=o.indexOf(e);c(this).attr({role:"tabpanel",id:"slick-slide"+n.instanceUid+e,tabindex:-1}),-1!==t&&c(this).attr({"aria-describedby":"slick-slide-control"+n.instanceUid+t})}),n.$dots.attr("role","tablist").find("li").each(function(e){var t=o[e];c(this).attr({role:"presentation"}),c(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+n.instanceUid+e,"aria-controls":"slick-slide"+n.instanceUid+t,"aria-label":e+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(n.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=n.currentSlide,t=e+n.options.slidesToShow;e<t;e++)n.$slides.eq(e).attr("tabindex",0);n.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(c("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&c("li",e.$dots).on("mouseenter.slick",c.proxy(e.interrupt,e,!0)).on("mouseleave.slick",c.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){this.options.pauseOnHover&&(this.$list.on("mouseenter.slick",c.proxy(this.interrupt,this,!0)),this.$list.on("mouseleave.slick",c.proxy(this.interrupt,this,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),c(document).on(e.visibilityChange,c.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().on("click.slick",e.selectHandler),c(window).on("orientationchange.slick.slick-"+e.instanceUid,c.proxy(e.orientationChange,e)),c(window).on("resize.slick.slick-"+e.instanceUid,c.proxy(e.resize,e)),c("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),c(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),c(e.setPosition)},r.prototype.initUI=function(){!0===this.options.arrows&&this.slideCount>this.options.slidesToShow&&(this.$prevArrow.show(),this.$nextArrow.show()),!0===this.options.dots&&this.slideCount>this.options.slidesToShow&&this.$dots.show()},r.prototype.keyHandler=function(e){e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===this.options.accessibility?this.changeSlide({data:{message:!0===this.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===this.options.accessibility&&this.changeSlide({data:{message:!0===this.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){function e(e){c("img[data-lazy]",e).each(function(){var e=c(this),t=c(this).attr("data-lazy"),n=c(this).attr("data-srcset"),i=c(this).attr("data-sizes")||r.$slider.attr("data-sizes"),o=document.createElement("img");o.onload=function(){e.animate({opacity:0},100,function(){n&&(e.attr("srcset",n),i&&e.attr("sizes",i)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),r.$slider.trigger("lazyLoaded",[r,e,t])})},o.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,e,t])},o.src=t})}var t,n,i,r=this;if(!0===r.options.centerMode?i=!0===r.options.infinite?(n=r.currentSlide+(r.options.slidesToShow/2+1))+r.options.slidesToShow+2:(n=Math.max(0,r.currentSlide-(r.options.slidesToShow/2+1)),r.options.slidesToShow/2+1+2+r.currentSlide):(n=r.options.infinite?r.options.slidesToShow+r.currentSlide:r.currentSlide,i=Math.ceil(n+r.options.slidesToShow),!0===r.options.fade&&(0<n&&n--,i<=r.slideCount&&i++)),t=r.$slider.find(".slick-slide").slice(n,i),"anticipated"===r.options.lazyLoad)for(var o=n-1,s=i,a=r.$slider.find(".slick-slide"),l=0;l<r.options.slidesToScroll;l++)o<0&&(o=r.slideCount-1),t=(t=t.add(a.eq(o))).add(a.eq(s)),o--,s++;e(t),r.slideCount<=r.options.slidesToShow?e(r.$slider.find(".slick-slide")):r.currentSlide>=r.slideCount-r.options.slidesToShow?e(r.$slider.find(".slick-cloned").slice(0,r.options.slidesToShow)):0===r.currentSlide&&e(r.$slider.find(".slick-cloned").slice(-1*r.options.slidesToShow))},r.prototype.loadSlider=function(){this.setPosition(),this.$slideTrack.css({opacity:1}),this.$slider.removeClass("slick-loading"),this.initUI(),"progressive"===this.options.lazyLoad&&this.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){this.autoPlay(),this.options.autoplay=!0,this.paused=!1,this.focussed=!1,this.interrupted=!1},r.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&c(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var t,n,i,o,r=this,s=c("img[data-lazy]",r.$slider);s.length?(t=s.first(),n=t.attr("data-lazy"),i=t.attr("data-srcset"),o=t.attr("data-sizes")||r.$slider.attr("data-sizes"),(s=document.createElement("img")).onload=function(){i&&(t.attr("srcset",i),o&&t.attr("sizes",o)),t.attr("src",n).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,t,n]),r.progressiveLazyLoad()},s.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,t,n]),r.progressiveLazyLoad())},s.src=n):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var t=this,n=t.slideCount-t.options.slidesToShow;!t.options.infinite&&t.currentSlide>n&&(t.currentSlide=n),t.slideCount<=t.options.slidesToShow&&(t.currentSlide=0),n=t.currentSlide,t.destroy(!0),c.extend(t,t.initials,{currentSlide:n}),t.init(),e||t.changeSlide({data:{message:"index",index:n}},!1)},r.prototype.registerBreakpoints=function(){var e,t,n,i=this,o=i.options.responsive||null;if("array"===c.type(o)&&o.length){for(e in i.respondTo=i.options.respondTo||"window",o)if(n=i.breakpoints.length-1,o.hasOwnProperty(e)){for(t=o[e].breakpoint;0<=n;)i.breakpoints[n]&&i.breakpoints[n]===t&&i.breakpoints.splice(n,1),n--;i.breakpoints.push(t),i.breakpointSettings[t]=o[e].settings}i.breakpoints.sort(function(e,t){return i.options.mobileFirst?e-t:t-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&c(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;c(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=c(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,t,n){var i=this;if(e="boolean"==typeof e?!0===(t=e)?0:i.slideCount-1:!0===t?--e:e,i.slideCount<1||e<0||e>i.slideCount-1)return!1;i.unload(),(!0===n?i.$slideTrack.children():i.$slideTrack.children(this.options.slide).eq(e)).remove(),i.$slides=i.$slideTrack.children(this.options.slide),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.append(i.$slides),i.$slidesCache=i.$slides,i.reinit()},r.prototype.setCSS=function(e){var t,n,i=this,o={};!0===i.options.rtl&&(e=-e),t="left"==i.positionProp?Math.ceil(e)+"px":"0px",n="top"==i.positionProp?Math.ceil(e)+"px":"0px",o[i.positionProp]=e,!1===i.transformsEnabled||(!(o={})===i.cssTransitions?o[i.animType]="translate("+t+", "+n+")":o[i.animType]="translate3d("+t+", "+n+", 0px)"),i.$slideTrack.css(o)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},r.prototype.setFade=function(){var n,i=this;i.$slides.each(function(e,t){n=i.slideWidth*e*-1,!0===i.options.rtl?c(t).css({position:"relative",right:n,top:0,zIndex:i.options.zIndex-2,opacity:0}):c(t).css({position:"relative",left:n,top:0,zIndex:i.options.zIndex-2,opacity:0})}),i.$slides.eq(i.currentSlide).css({zIndex:i.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e;1===this.options.slidesToShow&&!0===this.options.adaptiveHeight&&!1===this.options.vertical&&(e=this.$slides.eq(this.currentSlide).outerHeight(!0),this.$list.css("height",e))},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,t,n,i,o,r=this,s=!1;if("object"===c.type(arguments[0])?(n=arguments[0],s=arguments[1],o="multiple"):"string"===c.type(arguments[0])&&(n=arguments[0],i=arguments[1],s=arguments[2],"responsive"===arguments[0]&&"array"===c.type(arguments[1])?o="responsive":void 0!==arguments[1]&&(o="single")),"single"===o)r.options[n]=i;else if("multiple"===o)c.each(n,function(e,t){r.options[e]=t});else if("responsive"===o)for(t in i)if("array"!==c.type(r.options.responsive))r.options.responsive=[i[t]];else{for(e=r.options.responsive.length-1;0<=e;)r.options.responsive[e].breakpoint===i[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(i[t])}s&&(r.unload(),r.reinit())},r.prototype.setPosition=function(){this.setDimensions(),this.setHeight(),!1===this.options.fade?this.setCSS(this.getLeft(this.currentSlide)):this.setFade(),this.$slider.trigger("setPosition",[this])},r.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var t,n,i,o=this,r=o.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true");o.$slides.eq(e).addClass("slick-current"),!0===o.options.centerMode?(n=o.options.slidesToShow%2==0?1:0,i=Math.floor(o.options.slidesToShow/2),!0===o.options.infinite&&(i<=e&&e<=o.slideCount-1-i?o.$slides.slice(e-i+n,e+i+1).addClass("slick-active").attr("aria-hidden","false"):(t=o.options.slidesToShow+e,r.slice(t-i+1+n,t+i+2).addClass("slick-active").attr("aria-hidden","false")),0===e?r.eq(r.length-1-o.options.slidesToShow).addClass("slick-center"):e===o.slideCount-1&&r.eq(o.options.slidesToShow).addClass("slick-center")),o.$slides.eq(e).addClass("slick-center")):0<=e&&e<=o.slideCount-o.options.slidesToShow?o.$slides.slice(e,e+o.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):r.length<=o.options.slidesToShow?r.addClass("slick-active").attr("aria-hidden","false"):(i=o.slideCount%o.options.slidesToShow,t=!0===o.options.infinite?o.options.slidesToShow+e:e,(o.options.slidesToShow==o.options.slidesToScroll&&o.slideCount-e<o.options.slidesToShow?r.slice(t-(o.options.slidesToShow-i),t+i):r.slice(t,t+o.options.slidesToShow)).addClass("slick-active").attr("aria-hidden","false")),"ondemand"!==o.options.lazyLoad&&"anticipated"!==o.options.lazyLoad||o.lazyLoad()},r.prototype.setupInfinite=function(){var e,t,n,i=this;if(!0===i.options.fade&&(i.options.centerMode=!1),!0===i.options.infinite&&!1===i.options.fade&&(t=null,i.slideCount>i.options.slidesToShow)){for(n=!0===i.options.centerMode?i.options.slidesToShow+1:i.options.slidesToShow,e=i.slideCount;e>i.slideCount-n;--e)c(i.$slides[t=e-1]).clone(!0).attr("id","").attr("data-slick-index",t-i.slideCount).prependTo(i.$slideTrack).addClass("slick-cloned");for(e=0;e<n+i.slideCount;e+=1)c(i.$slides[t=e]).clone(!0).attr("id","").attr("data-slick-index",t+i.slideCount).appendTo(i.$slideTrack).addClass("slick-cloned");i.$slideTrack.find(".slick-cloned").find("[id]").each(function(){c(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){e=c(e.target).is(".slick-slide")?c(e.target):c(e.target).parents(".slick-slide"),e=(e=parseInt(e.attr("data-slick-index")))||0;this.slideCount<=this.options.slidesToShow?this.slideHandler(e,!1,!0):this.slideHandler(e)},r.prototype.slideHandler=function(e,t,n){var i,o,r,s,a=this;if(t=t||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===e))if(!1===t&&a.asNavFor(e),s=a.getLeft(i=e),t=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?t:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(e<0||e>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(i=a.currentSlide,!0!==n?a.animateSlide(t,function(){a.postSlide(i)}):a.postSlide(i));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(e<0||e>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(i=a.currentSlide,!0!==n?a.animateSlide(t,function(){a.postSlide(i)}):a.postSlide(i));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),o=i<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+i:i>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:i-a.slideCount:i,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,o]),t=a.currentSlide,a.currentSlide=o,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(r=(r=a.getNavTarget()).slick("getSlick")).slideCount<=r.options.slidesToShow&&r.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==n?(a.fadeSlideOut(t),a.fadeSlide(o,function(){a.postSlide(o)})):a.postSlide(o),void a.animateHeight();!0!==n?a.animateSlide(s,function(){a.postSlide(o)}):a.postSlide(o)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e=this.touchObject.startX-this.touchObject.curX,t=this.touchObject.startY-this.touchObject.curY,e=Math.atan2(t,e);return(e=(e=Math.round(180*e/Math.PI))<0?360-Math.abs(e):e)<=45&&0<=e||e<=360&&315<=e?!1===this.options.rtl?"left":"right":135<=e&&e<=225?!1===this.options.rtl?"right":"left":!0===this.options.verticalSwiping?35<=e&&e<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var t,n,i=this;if(i.dragging=!1,i.swiping=!1,i.scrolling)return i.scrolling=!1;if(i.interrupted=!1,i.shouldClick=!(10<i.touchObject.swipeLength),void 0===i.touchObject.curX)return!1;if(!0===i.touchObject.edgeHit&&i.$slider.trigger("edge",[i,i.swipeDirection()]),i.touchObject.swipeLength>=i.touchObject.minSwipe){switch(n=i.swipeDirection()){case"left":case"down":t=i.options.swipeToSlide?i.checkNavigable(i.currentSlide+i.getSlideCount()):i.currentSlide+i.getSlideCount(),i.currentDirection=0;break;case"right":case"up":t=i.options.swipeToSlide?i.checkNavigable(i.currentSlide-i.getSlideCount()):i.currentSlide-i.getSlideCount(),i.currentDirection=1}"vertical"!=n&&(i.slideHandler(t),i.touchObject={},i.$slider.trigger("swipe",[i,n]))}else i.touchObject.startX!==i.touchObject.curX&&(i.slideHandler(i.currentSlide),i.touchObject={})},r.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},r.prototype.swipeMove=function(e){var t,n,i=this,o=void 0!==e.originalEvent?e.originalEvent.touches:null;return!(!i.dragging||i.scrolling||o&&1!==o.length)&&(t=i.getLeft(i.currentSlide),i.touchObject.curX=void 0!==o?o[0].pageX:e.clientX,i.touchObject.curY=void 0!==o?o[0].pageY:e.clientY,i.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(i.touchObject.curX-i.touchObject.startX,2))),n=Math.round(Math.sqrt(Math.pow(i.touchObject.curY-i.touchObject.startY,2))),!i.options.verticalSwiping&&!i.swiping&&4<n?!(i.scrolling=!0):(!0===i.options.verticalSwiping&&(i.touchObject.swipeLength=n),o=i.swipeDirection(),void 0!==e.originalEvent&&4<i.touchObject.swipeLength&&(i.swiping=!0,e.preventDefault()),n=(!1===i.options.rtl?1:-1)*(i.touchObject.curX>i.touchObject.startX?1:-1),!0===i.options.verticalSwiping&&(n=i.touchObject.curY>i.touchObject.startY?1:-1),e=i.touchObject.swipeLength,(i.touchObject.edgeHit=!1)===i.options.infinite&&(0===i.currentSlide&&"right"===o||i.currentSlide>=i.getDotCount()&&"left"===o)&&(e=i.touchObject.swipeLength*i.options.edgeFriction,i.touchObject.edgeHit=!0),!1===i.options.vertical?i.swipeLeft=t+e*n:i.swipeLeft=t+e*(i.$list.height()/i.listWidth)*n,!0===i.options.verticalSwiping&&(i.swipeLeft=t+e*n),!0!==i.options.fade&&!1!==i.options.touchMove&&(!0===i.animating?(i.swipeLeft=null,!1):void i.setCSS(i.swipeLeft))))},r.prototype.swipeStart=function(e){var t,n=this;if(n.interrupted=!0,1!==n.touchObject.fingerCount||n.slideCount<=n.options.slidesToShow)return!(n.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),n.touchObject.startX=n.touchObject.curX=void 0!==t?t.pageX:e.clientX,n.touchObject.startY=n.touchObject.curY=void 0!==t?t.pageY:e.clientY,n.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){null!==this.$slidesCache&&(this.unload(),this.$slideTrack.children(this.options.slide).detach(),this.$slidesCache.appendTo(this.$slideTrack),this.reinit())},r.prototype.unload=function(){var e=this;c(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode||e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode)&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){null!==this.$dots&&(this.$dots.find("li").removeClass("slick-active").end(),this.$dots.find("li").eq(Math.floor(this.currentSlide/this.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},c.fn.slick=function(){for(var e,t=arguments[0],n=Array.prototype.slice.call(arguments,1),i=this.length,o=0;o<i;o++)if("object"==_typeof(t)||void 0===t?this[o].slick=new r(this[o],t):e=this[o].slick[t].apply(this[o].slick,n),void 0!==e)return e;return this}}),$(document).ready(function(){$(".product__list").slick({infinite:!1,prevArrow:$(".arrow--left"),nextArrow:$(".arrow--right")})}),$(document).ready(function(){function o(e){var t=e.find(".team__content");e.find(".team__item").removeClass("active"),t.height(0)}$(".team__name").click(function(e){var t=$(e.currentTarget);console.log(e);var n,i=t.closest(".team");t.closest(".team__item").hasClass("active")?o(i):(o(i),e=(n=t).closest(".team__item"),i=e.find(".team__content"),n=i.find(".team__content-block").height(),console.log(n),e.addClass("active"),i.height(n)),t.toggleClass("active")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
